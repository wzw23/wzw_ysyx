!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/wzw/ysyx-workbench/nemu/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(BINARY)	scripts/build.mk	/^$(BINARY): $(OBJS) $(ARCHIVES)$/;"	t
$(BINARY)	scripts/native.mk	/^$(BINARY): compile_git$/;"	t
$(BINARY)	tools/spike-diff/Makefile	/^$(BINARY): $(SPIKE) $(SRCS)$/;"	t
$(CONF)	scripts/config.mk	/^$(CONF):$/;"	t
$(DIFF_REF_SO)	tools/difftest.mk	/^$(DIFF_REF_SO):$/;"	t
$(FIXDEP)	scripts/config.mk	/^$(FIXDEP):$/;"	t
$(MCONF)	scripts/config.mk	/^$(MCONF):$/;"	t
$(OBJ_DIR)/%.o	scripts/build.mk	/^$(OBJ_DIR)\/%.o: %.c$/;"	t
$(OBJ_DIR)/%.o	scripts/build.mk	/^$(OBJ_DIR)\/%.o: %.cc$/;"	t
$(REPO_MAKEFILE)	tools/spike-diff/Makefile	/^$(REPO_MAKEFILE):$/;"	t
$(SPIKE)	tools/spike-diff/Makefile	/^$(SPIKE): $(REPO_MAKEFILE)$/;"	t
$(clean-tools)	scripts/native.mk	/^$(clean-tools):$/;"	t
$(obj)/lexer.lex.c	tools/kconfig/Makefile	/^$(obj)\/lexer.lex.c: lexer.l $(obj)\/parser.tab.h$/;"	t
$(obj)/lexer.lex.o	tools/kconfig/Makefile	/^$(obj)\/lexer.lex.o: $(obj)\/parser.tab.h$/;"	t
$(obj)/parser.tab.c	tools/kconfig/Makefile	/^$(obj)\/parser.tab.c $(obj)\/parser.tab.h: parser.y$/;"	t
$(obj)/parser.tab.h	tools/kconfig/Makefile	/^$(obj)\/parser.tab.c $(obj)\/parser.tab.h: parser.y$/;"	t
%defconfig	scripts/config.mk	/^%defconfig: $(CONF) $(FIXDEP)$/;"	t
*.tcc	.vscode/settings.json	/^        "*.tcc": "c"$/;"	s	object:files.associations
.DEFAULT_GOAL	scripts/build.mk	/^.DEFAULT_GOAL = app$/;"	m
.DEFAULT_GOAL	tools/spike-diff/Makefile	/^.DEFAULT_GOAL = all$/;"	m
ACS_DARROW	tools/kconfig/lxdialog/dialog.h	/^#define ACS_DARROW /;"	d
ACS_HLINE	tools/kconfig/lxdialog/dialog.h	/^#define ACS_HLINE /;"	d
ACS_LLCORNER	tools/kconfig/lxdialog/dialog.h	/^#define ACS_LLCORNER /;"	d
ACS_LRCORNER	tools/kconfig/lxdialog/dialog.h	/^#define ACS_LRCORNER /;"	d
ACS_LTEE	tools/kconfig/lxdialog/dialog.h	/^#define ACS_LTEE /;"	d
ACS_RTEE	tools/kconfig/lxdialog/dialog.h	/^#define ACS_RTEE /;"	d
ACS_UARROW	tools/kconfig/lxdialog/dialog.h	/^#define ACS_UARROW /;"	d
ACS_ULCORNER	tools/kconfig/lxdialog/dialog.h	/^#define ACS_ULCORNER /;"	d
ACS_URCORNER	tools/kconfig/lxdialog/dialog.h	/^#define ACS_URCORNER /;"	d
ACS_VLINE	tools/kconfig/lxdialog/dialog.h	/^#define ACS_VLINE /;"	d
ANSI_BG_BLACK	include/utils.h	/^#define ANSI_BG_BLACK /;"	d
ANSI_BG_BLUE	include/utils.h	/^#define ANSI_BG_BLUE /;"	d
ANSI_BG_CYAN	include/utils.h	/^#define ANSI_BG_CYAN /;"	d
ANSI_BG_GREEN	include/utils.h	/^#define ANSI_BG_GREEN /;"	d
ANSI_BG_MAGENTA	include/utils.h	/^#define ANSI_BG_MAGENTA /;"	d
ANSI_BG_RED	include/utils.h	/^#define ANSI_BG_RED /;"	d
ANSI_BG_WHITE	include/utils.h	/^#define ANSI_BG_WHITE /;"	d
ANSI_BG_YELLOW	include/utils.h	/^#define ANSI_BG_YELLOW /;"	d
ANSI_FG_BLACK	include/utils.h	/^#define ANSI_FG_BLACK /;"	d
ANSI_FG_BLUE	include/utils.h	/^#define ANSI_FG_BLUE /;"	d
ANSI_FG_CYAN	include/utils.h	/^#define ANSI_FG_CYAN /;"	d
ANSI_FG_GREEN	include/utils.h	/^#define ANSI_FG_GREEN /;"	d
ANSI_FG_MAGENTA	include/utils.h	/^#define ANSI_FG_MAGENTA /;"	d
ANSI_FG_RED	include/utils.h	/^#define ANSI_FG_RED /;"	d
ANSI_FG_WHITE	include/utils.h	/^#define ANSI_FG_WHITE /;"	d
ANSI_FG_YELLOW	include/utils.h	/^#define ANSI_FG_YELLOW /;"	d
ANSI_FMT	include/utils.h	/^#define ANSI_FMT(/;"	d
ANSI_NONE	include/utils.h	/^#define ANSI_NONE /;"	d
ARGS_DIFF	tools/difftest.mk	/^ARGS_DIFF = --diff=$(DIFF_REF_SO)$/;"	m
ARRAY_SIZE	tools/kconfig/preprocess.c	/^#define ARRAY_SIZE(/;"	d	file:
ARRLEN	include/macro.h	/^#define ARRLEN(/;"	d
ASSIGN_VAL	tools/kconfig/build/lexer.lex.c	/^#define ASSIGN_VAL /;"	d	file:
AUDIO_CTL_MMIO	src/device/Kconfig	/^config AUDIO_CTL_MMIO$/;"	c
AUDIO_CTL_PORT	src/device/Kconfig	/^config AUDIO_CTL_PORT$/;"	c
Assert	include/debug.h	/^#define Assert(/;"	d
BATCH_MODE	Makefile	/^BATCH_MODE?=1$/;"	m
BEGIN	tools/kconfig/build/lexer.lex.c	/^#define BEGIN /;"	d	file:
BINARY	scripts/build.mk	/^BINARY   = $(BUILD_DIR)\/$(NAME)$(SO)$/;"	m
BINARY	tools/spike-diff/Makefile	/^BINARY = $(BUILD_DIR)\/$(NAME)$/;"	m
BITMASK	include/macro.h	/^#define BITMASK(/;"	d
BITS	include/macro.h	/^#define BITS(/;"	d
BLOCK_LEN	src/device/sdcard.c	/^#define BLOCK_LEN /;"	d	file:
BUFFER_SIZE	src/monitor/sdb/sdb.c	/^#define BUFFER_SIZE /;"	d	file:
BUF_SIZE	tools/kconfig/lxdialog/dialog.h	/^#define BUF_SIZE /;"	d
BUILD_DIR	scripts/build.mk	/^BUILD_DIR = $(WORK_DIR)\/build$/;"	m
BUILD_DIR	tools/spike-diff/Makefile	/^BUILD_DIR = .\/build$/;"	m
Build Options	Kconfig	/^menu "Build Options"$/;"	m
CC	Kconfig	/^config CC$/;"	c	menu:Build Options
CC	Makefile	/^CC = $(call remove_quote,$(CONFIG_CC))$/;"	m
CC	tools/kconfig/Makefile	/^CC = gcc$/;"	m
CCC_APP_SPEC	src/device/mmc.h	/^#define CCC_APP_SPEC	/;"	d
CCC_BASIC	src/device/mmc.h	/^#define CCC_BASIC	/;"	d
CCC_BLOCK_READ	src/device/mmc.h	/^#define CCC_BLOCK_READ	/;"	d
CCC_BLOCK_WRITE	src/device/mmc.h	/^#define CCC_BLOCK_WRITE	/;"	d
CCC_ERASE	src/device/mmc.h	/^#define CCC_ERASE	/;"	d
CCC_IO_MODE	src/device/mmc.h	/^#define CCC_IO_MODE	/;"	d
CCC_LOCK_CARD	src/device/mmc.h	/^#define CCC_LOCK_CARD	/;"	d
CCC_STREAM_READ	src/device/mmc.h	/^#define CCC_STREAM_READ	/;"	d
CCC_STREAM_WRITE	src/device/mmc.h	/^#define CCC_STREAM_WRITE	/;"	d
CCC_SWITCH	src/device/mmc.h	/^#define CCC_SWITCH	/;"	d
CCC_WRITE_PROT	src/device/mmc.h	/^#define CCC_WRITE_PROT	/;"	d
CC_ASAN	Kconfig	/^config CC_ASAN$/;"	c	menu:Build Options
CC_CLANG	Kconfig	/^config CC_CLANG$/;"	c	choice:Build Options""choice8014d1a60604
CC_DEBUG	Kconfig	/^config CC_DEBUG$/;"	c	menu:Build Options
CC_GCC	Kconfig	/^config CC_GCC$/;"	c	choice:Build Options""choice8014d1a60604
CC_GPP	Kconfig	/^config CC_GPP$/;"	c	choice:Build Options""choice8014d1a60604
CC_LTO	Kconfig	/^config CC_LTO$/;"	c	menu:Build Options
CC_O0	Kconfig	/^config CC_O0$/;"	c	choice:Build Options""choice8014d1a60704
CC_O1	Kconfig	/^config CC_O1$/;"	c	choice:Build Options""choice8014d1a60704
CC_O2	Kconfig	/^config CC_O2$/;"	c	choice:Build Options""choice8014d1a60704
CC_O3	Kconfig	/^config CC_O3$/;"	c	choice:Build Options""choice8014d1a60704
CC_OPT	Kconfig	/^config CC_OPT$/;"	c	menu:Build Options
CFLAGS	scripts/build.mk	/^CFLAGS  := -O2 -MMD -Wall -Werror  $(INCLUDES)  $(CFLAGS)$/;"	m
CFLAGS	scripts/build.mk	/^CFLAGS  := -O2 -MMD -Wall -Werror $(INCLUDES) $(CFLAGS)$/;"	m
CHECKLIST_HEIGTH_MIN	tools/kconfig/lxdialog/dialog.h	/^#define CHECKLIST_HEIGTH_MIN /;"	d
CHECKLIST_WIDTH_MIN	tools/kconfig/lxdialog/dialog.h	/^#define CHECKLIST_WIDTH_MIN /;"	d
CHOOSE2nd	include/macro.h	/^#define CHOOSE2nd(/;"	d
CH_OFFSET	src/device/serial.c	/^#define CH_OFFSET /;"	d	file:
COLOR_END	scripts/config.mk	/^COLOR_END := $(shell echo "\\033[0m")$/;"	m
COLOR_RED	scripts/config.mk	/^COLOR_RED := $(shell echo "\\033[1;31m")$/;"	m
CONF	scripts/config.mk	/^CONF   := $(KCONFIG_PATH)\/build\/conf$/;"	m
CONFIG_	tools/kconfig/lkc.h	/^#define CONFIG_ /;"	d
CONFIG_AUDIO_CTL_MMIO	src/device/Kconfig	/^config AUDIO_CTL_MMIO$/;"	c
CONFIG_AUDIO_CTL_PORT	src/device/Kconfig	/^config AUDIO_CTL_PORT$/;"	c
CONFIG_CC	Kconfig	/^config CC$/;"	c	menu:Build Options
CONFIG_CC	include/config/auto.conf	/^CONFIG_CC="gcc"$/;"	k
CONFIG_CC	include/generated/autoconf.h	/^#define CONFIG_CC /;"	d
CONFIG_CC_ASAN	Kconfig	/^config CC_ASAN$/;"	c	menu:Build Options
CONFIG_CC_ASAN	include/config/auto.conf	/^CONFIG_CC_ASAN=y$/;"	k
CONFIG_CC_ASAN	include/generated/autoconf.h	/^#define CONFIG_CC_ASAN /;"	d
CONFIG_CC_CLANG	Kconfig	/^config CC_CLANG$/;"	c	choice:Build Options""choice8014d1a60604
CONFIG_CC_DEBUG	Kconfig	/^config CC_DEBUG$/;"	c	menu:Build Options
CONFIG_CC_DEBUG	include/config/auto.conf	/^CONFIG_CC_DEBUG=y$/;"	k
CONFIG_CC_DEBUG	include/generated/autoconf.h	/^#define CONFIG_CC_DEBUG /;"	d
CONFIG_CC_GCC	Kconfig	/^config CC_GCC$/;"	c	choice:Build Options""choice8014d1a60604
CONFIG_CC_GCC	include/config/auto.conf	/^CONFIG_CC_GCC=y$/;"	k
CONFIG_CC_GCC	include/generated/autoconf.h	/^#define CONFIG_CC_GCC /;"	d
CONFIG_CC_GPP	Kconfig	/^config CC_GPP$/;"	c	choice:Build Options""choice8014d1a60604
CONFIG_CC_LTO	Kconfig	/^config CC_LTO$/;"	c	menu:Build Options
CONFIG_CC_O0	Kconfig	/^config CC_O0$/;"	c	choice:Build Options""choice8014d1a60704
CONFIG_CC_O1	Kconfig	/^config CC_O1$/;"	c	choice:Build Options""choice8014d1a60704
CONFIG_CC_O2	Kconfig	/^config CC_O2$/;"	c	choice:Build Options""choice8014d1a60704
CONFIG_CC_O2	include/config/auto.conf	/^CONFIG_CC_O2=y$/;"	k
CONFIG_CC_O2	include/generated/autoconf.h	/^#define CONFIG_CC_O2 /;"	d
CONFIG_CC_O3	Kconfig	/^config CC_O3$/;"	c	choice:Build Options""choice8014d1a60704
CONFIG_CC_OPT	Kconfig	/^config CC_OPT$/;"	c	menu:Build Options
CONFIG_CC_OPT	include/config/auto.conf	/^CONFIG_CC_OPT="-O2"$/;"	k
CONFIG_CC_OPT	include/generated/autoconf.h	/^#define CONFIG_CC_OPT /;"	d
CONFIG_DEVICE	src/device/Kconfig	/^menuconfig DEVICE$/;"	c
CONFIG_DIFFTEST	Kconfig	/^config DIFFTEST$/;"	c	menu:Testing and Debugging
CONFIG_DIFFTEST_REF_KVM	Kconfig	/^config DIFFTEST_REF_KVM$/;"	c	choice:Testing and Debugging""choice8014d1a60804
CONFIG_DIFFTEST_REF_NAME	Kconfig	/^config DIFFTEST_REF_NAME$/;"	c	menu:Testing and Debugging
CONFIG_DIFFTEST_REF_NAME	include/config/auto.conf	/^CONFIG_DIFFTEST_REF_NAME="none"$/;"	k
CONFIG_DIFFTEST_REF_NAME	include/generated/autoconf.h	/^#define CONFIG_DIFFTEST_REF_NAME /;"	d
CONFIG_DIFFTEST_REF_PATH	Kconfig	/^config DIFFTEST_REF_PATH$/;"	c	menu:Testing and Debugging
CONFIG_DIFFTEST_REF_PATH	include/config/auto.conf	/^CONFIG_DIFFTEST_REF_PATH="none"$/;"	k
CONFIG_DIFFTEST_REF_PATH	include/generated/autoconf.h	/^#define CONFIG_DIFFTEST_REF_PATH /;"	d
CONFIG_DIFFTEST_REF_QEMU	Kconfig	/^config DIFFTEST_REF_QEMU$/;"	c	choice:Testing and Debugging""choice8014d1a60804
CONFIG_DIFFTEST_REF_SPIKE	Kconfig	/^config DIFFTEST_REF_SPIKE$/;"	c	choice:Testing and Debugging""choice8014d1a60804
CONFIG_DISK_CTL_MMIO	src/device/Kconfig	/^config DISK_CTL_MMIO$/;"	c
CONFIG_DISK_CTL_PORT	src/device/Kconfig	/^config DISK_CTL_PORT$/;"	c
CONFIG_DISK_IMG_PATH	src/device/Kconfig	/^config DISK_IMG_PATH$/;"	c
CONFIG_ENGINE	Kconfig	/^config ENGINE$/;"	c
CONFIG_ENGINE	include/config/auto.conf	/^CONFIG_ENGINE="interpreter"$/;"	k
CONFIG_ENGINE	include/generated/autoconf.h	/^#define CONFIG_ENGINE /;"	d
CONFIG_ENGINE_INTERPRETER	Kconfig	/^config ENGINE_INTERPRETER$/;"	c	choice:choice8014d1a60304
CONFIG_ENGINE_INTERPRETER	include/config/auto.conf	/^CONFIG_ENGINE_INTERPRETER=y$/;"	k
CONFIG_ENGINE_INTERPRETER	include/generated/autoconf.h	/^#define CONFIG_ENGINE_INTERPRETER /;"	d
CONFIG_FB_ADDR	src/device/Kconfig	/^config FB_ADDR$/;"	c
CONFIG_HAS_AUDIO	src/device/Kconfig	/^menuconfig HAS_AUDIO$/;"	c
CONFIG_HAS_DISK	src/device/Kconfig	/^menuconfig HAS_DISK$/;"	c
CONFIG_HAS_KEYBOARD	src/device/Kconfig	/^menuconfig HAS_KEYBOARD$/;"	c
CONFIG_HAS_PORT_IO	src/device/Kconfig	/^config HAS_PORT_IO$/;"	c
CONFIG_HAS_SDCARD	src/device/Kconfig	/^menuconfig HAS_SDCARD$/;"	c
CONFIG_HAS_SERIAL	src/device/Kconfig	/^menuconfig HAS_SERIAL$/;"	c
CONFIG_HAS_TIMER	src/device/Kconfig	/^menuconfig HAS_TIMER$/;"	c
CONFIG_HAS_VGA	src/device/Kconfig	/^menuconfig HAS_VGA$/;"	c
CONFIG_I8042_DATA_MMIO	src/device/Kconfig	/^config I8042_DATA_MMIO$/;"	c
CONFIG_I8042_DATA_PORT	src/device/Kconfig	/^config I8042_DATA_PORT$/;"	c
CONFIG_ISA	Kconfig	/^config ISA$/;"	c
CONFIG_ISA	include/config/auto.conf	/^CONFIG_ISA="riscv64"$/;"	k
CONFIG_ISA	include/generated/autoconf.h	/^#define CONFIG_ISA /;"	d
CONFIG_ISA64	Kconfig	/^config ISA64$/;"	c
CONFIG_ISA64	include/config/auto.conf	/^CONFIG_ISA64=y$/;"	k
CONFIG_ISA64	include/generated/autoconf.h	/^#define CONFIG_ISA64 /;"	d
CONFIG_ISA_mips32	Kconfig	/^config ISA_mips32$/;"	c	choice:choice8014d1a60104
CONFIG_ISA_riscv32	Kconfig	/^config ISA_riscv32$/;"	c	choice:choice8014d1a60104
CONFIG_ISA_riscv64	Kconfig	/^config ISA_riscv64$/;"	c	choice:choice8014d1a60104
CONFIG_ISA_riscv64	include/config/auto.conf	/^CONFIG_ISA_riscv64=y$/;"	k
CONFIG_ISA_riscv64	include/generated/autoconf.h	/^#define CONFIG_ISA_riscv64 /;"	d
CONFIG_ISA_x86	Kconfig	/^config ISA_x86$/;"	c	choice:choice8014d1a60104
CONFIG_ITRACE	Kconfig	/^config ITRACE$/;"	c	menu:Testing and Debugging
CONFIG_ITRACE	include/config/auto.conf	/^CONFIG_ITRACE=y$/;"	k
CONFIG_ITRACE	include/generated/autoconf.h	/^#define CONFIG_ITRACE /;"	d
CONFIG_ITRACE_COND	Kconfig	/^config ITRACE_COND$/;"	c	menu:Testing and Debugging
CONFIG_ITRACE_COND	include/config/auto.conf	/^CONFIG_ITRACE_COND="true"$/;"	k
CONFIG_ITRACE_COND	include/generated/autoconf.h	/^#define CONFIG_ITRACE_COND /;"	d
CONFIG_MBASE	include/config/auto.conf	/^CONFIG_MBASE=0x80000000$/;"	k
CONFIG_MBASE	include/generated/autoconf.h	/^#define CONFIG_MBASE /;"	d
CONFIG_MBASE	src/memory/Kconfig	/^config MBASE$/;"	c	menu:Memory Configuration
CONFIG_MEM_RANDOM	include/config/auto.conf	/^CONFIG_MEM_RANDOM=y$/;"	k
CONFIG_MEM_RANDOM	include/generated/autoconf.h	/^#define CONFIG_MEM_RANDOM /;"	d
CONFIG_MEM_RANDOM	src/memory/Kconfig	/^config MEM_RANDOM$/;"	c	menu:Memory Configuration
CONFIG_MODE_SYSTEM	Kconfig	/^config MODE_SYSTEM$/;"	c	choice:choice8014d1a60404
CONFIG_MODE_SYSTEM	include/config/auto.conf	/^CONFIG_MODE_SYSTEM=y$/;"	k
CONFIG_MODE_SYSTEM	include/generated/autoconf.h	/^#define CONFIG_MODE_SYSTEM /;"	d
CONFIG_MSIZE	include/config/auto.conf	/^CONFIG_MSIZE=0x8000000$/;"	k
CONFIG_MSIZE	include/generated/autoconf.h	/^#define CONFIG_MSIZE /;"	d
CONFIG_MSIZE	src/memory/Kconfig	/^config MSIZE$/;"	c	menu:Memory Configuration
CONFIG_NOTWATCHPOINT	Kconfig	/^config NOTWATCHPOINT$/;"	c	choice:choice8014d1a60204
CONFIG_PC_RESET_OFFSET	include/config/auto.conf	/^CONFIG_PC_RESET_OFFSET=0$/;"	k
CONFIG_PC_RESET_OFFSET	include/generated/autoconf.h	/^#define CONFIG_PC_RESET_OFFSET /;"	d
CONFIG_PC_RESET_OFFSET	src/memory/Kconfig	/^config PC_RESET_OFFSET$/;"	c	menu:Memory Configuration
CONFIG_PMEM_GARRAY	include/config/auto.conf	/^CONFIG_PMEM_GARRAY=y$/;"	k
CONFIG_PMEM_GARRAY	include/generated/autoconf.h	/^#define CONFIG_PMEM_GARRAY /;"	d
CONFIG_PMEM_GARRAY	src/memory/Kconfig	/^config PMEM_GARRAY$/;"	c	choice:Memory Configuration""choice57e410a50104
CONFIG_PMEM_MALLOC	src/memory/Kconfig	/^config PMEM_MALLOC$/;"	c	choice:Memory Configuration""choice57e410a50104
CONFIG_RTC_MMIO	src/device/Kconfig	/^config RTC_MMIO$/;"	c
CONFIG_RTC_PORT	src/device/Kconfig	/^config RTC_PORT$/;"	c
CONFIG_RT_CHECK	Kconfig	/^config RT_CHECK$/;"	c	menu:Miscellaneous
CONFIG_RT_CHECK	include/config/auto.conf	/^CONFIG_RT_CHECK=y$/;"	k
CONFIG_RT_CHECK	include/generated/autoconf.h	/^#define CONFIG_RT_CHECK /;"	d
CONFIG_SB_ADDR	src/device/Kconfig	/^config SB_ADDR$/;"	c
CONFIG_SB_SIZE	src/device/Kconfig	/^config SB_SIZE$/;"	c
CONFIG_SDCARD_CTL_MMIO	src/device/Kconfig	/^config SDCARD_CTL_MMIO$/;"	c
CONFIG_SDCARD_IMG_PATH	src/device/Kconfig	/^config SDCARD_IMG_PATH$/;"	c
CONFIG_SERIAL_INPUT_FIFO	src/device/Kconfig	/^config SERIAL_INPUT_FIFO$/;"	c
CONFIG_SERIAL_MMIO	src/device/Kconfig	/^config SERIAL_MMIO$/;"	c
CONFIG_SERIAL_PORT	src/device/Kconfig	/^config SERIAL_PORT$/;"	c
CONFIG_TARGET_AM	Kconfig	/^config TARGET_AM$/;"	c	choice:choice8014d1a60504
CONFIG_TARGET_NATIVE_ELF	Kconfig	/^config TARGET_NATIVE_ELF$/;"	c	choice:choice8014d1a60504
CONFIG_TARGET_NATIVE_ELF	include/config/auto.conf	/^CONFIG_TARGET_NATIVE_ELF=y$/;"	k
CONFIG_TARGET_NATIVE_ELF	include/generated/autoconf.h	/^#define CONFIG_TARGET_NATIVE_ELF /;"	d
CONFIG_TARGET_SHARE	Kconfig	/^config TARGET_SHARE$/;"	c	choice:choice8014d1a60504
CONFIG_TIMER_CLOCK_GETTIME	Kconfig	/^config TIMER_CLOCK_GETTIME$/;"	c	choice:Miscellaneous""choice8014d1a60904
CONFIG_TIMER_GETTIMEOFDAY	Kconfig	/^config TIMER_GETTIMEOFDAY$/;"	c	choice:Miscellaneous""choice8014d1a60904
CONFIG_TIMER_GETTIMEOFDAY	include/config/auto.conf	/^CONFIG_TIMER_GETTIMEOFDAY=y$/;"	k
CONFIG_TIMER_GETTIMEOFDAY	include/generated/autoconf.h	/^#define CONFIG_TIMER_GETTIMEOFDAY /;"	d
CONFIG_TRACE	Kconfig	/^config TRACE$/;"	c	menu:Testing and Debugging
CONFIG_TRACE	include/config/auto.conf	/^CONFIG_TRACE=y$/;"	k
CONFIG_TRACE	include/generated/autoconf.h	/^#define CONFIG_TRACE /;"	d
CONFIG_TRACE_END	Kconfig	/^config TRACE_END$/;"	c	menu:Testing and Debugging
CONFIG_TRACE_END	include/config/auto.conf	/^CONFIG_TRACE_END=10000$/;"	k
CONFIG_TRACE_END	include/generated/autoconf.h	/^#define CONFIG_TRACE_END /;"	d
CONFIG_TRACE_START	Kconfig	/^config TRACE_START$/;"	c	menu:Testing and Debugging
CONFIG_TRACE_START	include/config/auto.conf	/^CONFIG_TRACE_START=0$/;"	k
CONFIG_TRACE_START	include/generated/autoconf.h	/^#define CONFIG_TRACE_START /;"	d
CONFIG_VGA_CTL_MMIO	src/device/Kconfig	/^config VGA_CTL_MMIO$/;"	c
CONFIG_VGA_CTL_PORT	src/device/Kconfig	/^config VGA_CTL_PORT$/;"	c
CONFIG_VGA_SHOW_SCREEN	src/device/Kconfig	/^config VGA_SHOW_SCREEN$/;"	c
CONFIG_VGA_SIZE_400x300	src/device/Kconfig	/^config VGA_SIZE_400x300$/;"	c	choice:choice84acbddc0104
CONFIG_VGA_SIZE_800x600	src/device/Kconfig	/^config VGA_SIZE_800x600$/;"	c	choice:choice84acbddc0104
CONFIG_WATCHPOINT	Kconfig	/^config WATCHPOINT$/;"	c	choice:choice8014d1a60204
CONFIG_WATCHPOINT	include/config/auto.conf	/^CONFIG_WATCHPOINT=y$/;"	k
CONFIG_WATCHPOINT	include/generated/autoconf.h	/^#define CONFIG_WATCHPOINT /;"	d
CONFIG_prefix	tools/kconfig/lkc.h	/^static inline const char *CONFIG_prefix(void)$/;"	f	typeref:typename:const char *
CPU_state	include/isa.h	/^typedef concat(__GUEST_ISA__, _CPU_state) CPU_state;$/;"	t
CR0_PE	tools/kvm-diff/src/kvm.c	/^#define CR0_PE /;"	d	file:
CR0_PG	tools/kvm-diff/src/kvm.c	/^#define CR0_PG /;"	d	file:
CSD_SPEC_VER_0	src/device/mmc.h	/^#define CSD_SPEC_VER_0 /;"	d
CSD_SPEC_VER_1	src/device/mmc.h	/^#define CSD_SPEC_VER_1 /;"	d
CSD_SPEC_VER_2	src/device/mmc.h	/^#define CSD_SPEC_VER_2 /;"	d
CSD_SPEC_VER_3	src/device/mmc.h	/^#define CSD_SPEC_VER_3 /;"	d
CSD_SPEC_VER_4	src/device/mmc.h	/^#define CSD_SPEC_VER_4 /;"	d
CSD_STRUCT_EXT_CSD	src/device/mmc.h	/^#define CSD_STRUCT_EXT_CSD /;"	d
CSD_STRUCT_VER_1_0	src/device/mmc.h	/^#define CSD_STRUCT_VER_1_0 /;"	d
CSD_STRUCT_VER_1_1	src/device/mmc.h	/^#define CSD_STRUCT_VER_1_1 /;"	d
CSD_STRUCT_VER_1_2	src/device/mmc.h	/^#define CSD_STRUCT_VER_1_2 /;"	d
CURS_MACROS	tools/kconfig/lxdialog/dialog.h	/^#define CURS_MACROS$/;"	d
CXX	scripts/build.mk	/^CXX := clang++$/;"	m
CXXSRC	src/utils/filelist.mk	/^CXXSRC = src\/utils\/disasm.cc$/;"	m
C_SIZE	src/device/sdcard.c	/^#define C_SIZE /;"	d	file:
C_SIZE_MULT	src/device/sdcard.c	/^#define C_SIZE_MULT /;"	d	file:
DEBUG_EXPR	tools/kconfig/expr.c	/^#define DEBUG_EXPR	/;"	d	file:
DEBUG_PARSE	tools/kconfig/build/parser.tab.c	/^#define DEBUG_PARSE	/;"	d	file:
DEFAULT_ISA	tools/spike-diff/difftest.cc	/^#define DEFAULT_ISA /;"	d	file:
DEREF	src/monitor/sdb/expr.c	/^  DEREF,$/;"	e	enum:__anonfd0e76cb0103	file:
DEVICE	src/device/Kconfig	/^menuconfig DEVICE$/;"	c
DIFFTEST	Kconfig	/^config DIFFTEST$/;"	c	menu:Testing and Debugging
DIFFTEST_REF_KVM	Kconfig	/^config DIFFTEST_REF_KVM$/;"	c	choice:Testing and Debugging""choice8014d1a60804
DIFFTEST_REF_NAME	Kconfig	/^config DIFFTEST_REF_NAME$/;"	c	menu:Testing and Debugging
DIFFTEST_REF_PATH	Kconfig	/^config DIFFTEST_REF_PATH$/;"	c	menu:Testing and Debugging
DIFFTEST_REF_QEMU	Kconfig	/^config DIFFTEST_REF_QEMU$/;"	c	choice:Testing and Debugging""choice8014d1a60804
DIFFTEST_REF_SPIKE	Kconfig	/^config DIFFTEST_REF_SPIKE$/;"	c	choice:Testing and Debugging""choice8014d1a60804
DIFFTEST_REG_SIZE	include/difftest-def.h	/^# define DIFFTEST_REG_SIZE /;"	d
DIFFTEST_TO_DUT	include/difftest-def.h	/^enum { DIFFTEST_TO_DUT, DIFFTEST_TO_REF };$/;"	e	enum:__anon46fd62430103
DIFFTEST_TO_REF	include/difftest-def.h	/^enum { DIFFTEST_TO_DUT, DIFFTEST_TO_REF };$/;"	e	enum:__anon46fd62430103
DIFF_REF_PATH	tools/difftest.mk	/^DIFF_REF_PATH = $(NEMU_HOME)\/$(call remove_quote,$(CONFIG_DIFFTEST_REF_PATH))$/;"	m
DIFF_REF_SO	tools/difftest.mk	/^DIFF_REF_SO = $(DIFF_REF_PATH)\/build\/$(GUEST_ISA)-$(call remove_quote,$(CONFIG_DIFFTEST_REF_NA/;"	m
DISK_CTL_MMIO	src/device/Kconfig	/^config DISK_CTL_MMIO$/;"	c
DISK_CTL_PORT	src/device/Kconfig	/^config DISK_CTL_PORT$/;"	c
DISK_IMG_PATH	src/device/Kconfig	/^config DISK_IMG_PATH$/;"	c
DLG_COLOR	tools/kconfig/lxdialog/util.c	/^#define DLG_COLOR(/;"	d	file:
Decode	include/cpu/decode.h	/^typedef struct Decode {$/;"	s
Decode	include/cpu/decode.h	/^} Decode;$/;"	t	typeref:struct:Decode
ECHO	tools/kconfig/build/lexer.lex.c	/^#define ECHO /;"	d	file:
ENGINE	Kconfig	/^config ENGINE$/;"	c
ENGINE	Makefile	/^ENGINE ?= $(call remove_quote,$(CONFIG_ENGINE))$/;"	m
ENGINE_INTERPRETER	Kconfig	/^config ENGINE_INTERPRETER$/;"	c	choice:choice8014d1a60304
EOB_ACT_CONTINUE_SCAN	tools/kconfig/build/lexer.lex.c	/^#define EOB_ACT_CONTINUE_SCAN /;"	d	file:
EOB_ACT_END_OF_FILE	tools/kconfig/build/lexer.lex.c	/^#define EOB_ACT_END_OF_FILE /;"	d	file:
EOB_ACT_LAST_MATCH	tools/kconfig/build/lexer.lex.c	/^#define EOB_ACT_LAST_MATCH /;"	d	file:
ERRDISPLAYTOOSMALL	tools/kconfig/lxdialog/dialog.h	/^#define ERRDISPLAYTOOSMALL /;"	d
EXIT_SUCCESS	tools/kconfig/build/parser.tab.c	/^#      define EXIT_SUCCESS /;"	d	file:
EXIT_SUCCESS	tools/kconfig/build/parser.tab.c	/^#    define EXIT_SUCCESS /;"	d	file:
EXPR_AND	tools/kconfig/expr.h	/^#define EXPR_AND(/;"	d
EXPR_H	tools/kconfig/expr.h	/^#define EXPR_H$/;"	d
EXPR_NOT	tools/kconfig/expr.h	/^#define EXPR_NOT(/;"	d
EXPR_OR	tools/kconfig/expr.h	/^#define EXPR_OR(/;"	d
EXT_CSD_AUTO_BKOPS_MASK	src/device/mmc.h	/^#define EXT_CSD_AUTO_BKOPS_MASK	/;"	d
EXT_CSD_BKOPS_EN	src/device/mmc.h	/^#define EXT_CSD_BKOPS_EN	/;"	d
EXT_CSD_BKOPS_LEVEL_2	src/device/mmc.h	/^#define EXT_CSD_BKOPS_LEVEL_2	/;"	d
EXT_CSD_BKOPS_START	src/device/mmc.h	/^#define EXT_CSD_BKOPS_START	/;"	d
EXT_CSD_BKOPS_STATUS	src/device/mmc.h	/^#define EXT_CSD_BKOPS_STATUS	/;"	d
EXT_CSD_BKOPS_SUPPORT	src/device/mmc.h	/^#define EXT_CSD_BKOPS_SUPPORT	/;"	d
EXT_CSD_BOOT_MULT	src/device/mmc.h	/^#define EXT_CSD_BOOT_MULT	/;"	d
EXT_CSD_BOOT_WP	src/device/mmc.h	/^#define EXT_CSD_BOOT_WP	/;"	d
EXT_CSD_BOOT_WP_B_PERM_WP_DIS	src/device/mmc.h	/^#define EXT_CSD_BOOT_WP_B_PERM_WP_DIS	/;"	d
EXT_CSD_BOOT_WP_B_PERM_WP_EN	src/device/mmc.h	/^#define EXT_CSD_BOOT_WP_B_PERM_WP_EN	/;"	d
EXT_CSD_BOOT_WP_B_PWR_WP_DIS	src/device/mmc.h	/^#define EXT_CSD_BOOT_WP_B_PWR_WP_DIS	/;"	d
EXT_CSD_BOOT_WP_B_PWR_WP_EN	src/device/mmc.h	/^#define EXT_CSD_BOOT_WP_B_PWR_WP_EN	/;"	d
EXT_CSD_BUS_WIDTH	src/device/mmc.h	/^#define EXT_CSD_BUS_WIDTH	/;"	d
EXT_CSD_BUS_WIDTH_1	src/device/mmc.h	/^#define EXT_CSD_BUS_WIDTH_1	/;"	d
EXT_CSD_BUS_WIDTH_4	src/device/mmc.h	/^#define EXT_CSD_BUS_WIDTH_4	/;"	d
EXT_CSD_BUS_WIDTH_8	src/device/mmc.h	/^#define EXT_CSD_BUS_WIDTH_8	/;"	d
EXT_CSD_BUS_WIDTH_STROBE	src/device/mmc.h	/^#define EXT_CSD_BUS_WIDTH_STROBE /;"	d
EXT_CSD_CACHE_CTRL	src/device/mmc.h	/^#define EXT_CSD_CACHE_CTRL	/;"	d
EXT_CSD_CACHE_SIZE	src/device/mmc.h	/^#define EXT_CSD_CACHE_SIZE	/;"	d
EXT_CSD_CARD_TYPE	src/device/mmc.h	/^#define EXT_CSD_CARD_TYPE	/;"	d
EXT_CSD_CARD_TYPE_DDR_1_2V	src/device/mmc.h	/^#define EXT_CSD_CARD_TYPE_DDR_1_2V /;"	d
EXT_CSD_CARD_TYPE_DDR_1_8V	src/device/mmc.h	/^#define EXT_CSD_CARD_TYPE_DDR_1_8V /;"	d
EXT_CSD_CARD_TYPE_DDR_52	src/device/mmc.h	/^#define EXT_CSD_CARD_TYPE_DDR_52 /;"	d
EXT_CSD_CARD_TYPE_HS	src/device/mmc.h	/^#define EXT_CSD_CARD_TYPE_HS	/;"	d
EXT_CSD_CARD_TYPE_HS200	src/device/mmc.h	/^#define EXT_CSD_CARD_TYPE_HS200	/;"	d
EXT_CSD_CARD_TYPE_HS200_1_2V	src/device/mmc.h	/^#define EXT_CSD_CARD_TYPE_HS200_1_2V	/;"	d
EXT_CSD_CARD_TYPE_HS200_1_8V	src/device/mmc.h	/^#define EXT_CSD_CARD_TYPE_HS200_1_8V	/;"	d
EXT_CSD_CARD_TYPE_HS400	src/device/mmc.h	/^#define EXT_CSD_CARD_TYPE_HS400	/;"	d
EXT_CSD_CARD_TYPE_HS400ES	src/device/mmc.h	/^#define EXT_CSD_CARD_TYPE_HS400ES	/;"	d
EXT_CSD_CARD_TYPE_HS400_1_2V	src/device/mmc.h	/^#define EXT_CSD_CARD_TYPE_HS400_1_2V	/;"	d
EXT_CSD_CARD_TYPE_HS400_1_8V	src/device/mmc.h	/^#define EXT_CSD_CARD_TYPE_HS400_1_8V	/;"	d
EXT_CSD_CARD_TYPE_HS_26	src/device/mmc.h	/^#define EXT_CSD_CARD_TYPE_HS_26	/;"	d
EXT_CSD_CARD_TYPE_HS_52	src/device/mmc.h	/^#define EXT_CSD_CARD_TYPE_HS_52	/;"	d
EXT_CSD_CMDQ_DEPTH	src/device/mmc.h	/^#define EXT_CSD_CMDQ_DEPTH	/;"	d
EXT_CSD_CMDQ_DEPTH_MASK	src/device/mmc.h	/^#define EXT_CSD_CMDQ_DEPTH_MASK	/;"	d
EXT_CSD_CMDQ_MODE_EN	src/device/mmc.h	/^#define EXT_CSD_CMDQ_MODE_EN	/;"	d
EXT_CSD_CMDQ_MODE_ENABLED	src/device/mmc.h	/^#define EXT_CSD_CMDQ_MODE_ENABLED	/;"	d
EXT_CSD_CMDQ_SUPPORT	src/device/mmc.h	/^#define EXT_CSD_CMDQ_SUPPORT	/;"	d
EXT_CSD_CMDQ_SUPPORTED	src/device/mmc.h	/^#define EXT_CSD_CMDQ_SUPPORTED	/;"	d
EXT_CSD_CMD_SET_CPSECURE	src/device/mmc.h	/^#define EXT_CSD_CMD_SET_CPSECURE	/;"	d
EXT_CSD_CMD_SET_NORMAL	src/device/mmc.h	/^#define EXT_CSD_CMD_SET_NORMAL	/;"	d
EXT_CSD_CMD_SET_SECURE	src/device/mmc.h	/^#define EXT_CSD_CMD_SET_SECURE	/;"	d
EXT_CSD_DATA_SECTOR_SIZE	src/device/mmc.h	/^#define EXT_CSD_DATA_SECTOR_SIZE	/;"	d
EXT_CSD_DATA_TAG_SUPPORT	src/device/mmc.h	/^#define EXT_CSD_DATA_TAG_SUPPORT	/;"	d
EXT_CSD_DDR_BUS_WIDTH_4	src/device/mmc.h	/^#define EXT_CSD_DDR_BUS_WIDTH_4	/;"	d
EXT_CSD_DDR_BUS_WIDTH_8	src/device/mmc.h	/^#define EXT_CSD_DDR_BUS_WIDTH_8	/;"	d
EXT_CSD_DEVICE_LIFE_TIME_EST_TYP_A	src/device/mmc.h	/^#define EXT_CSD_DEVICE_LIFE_TIME_EST_TYP_A	/;"	d
EXT_CSD_DEVICE_LIFE_TIME_EST_TYP_B	src/device/mmc.h	/^#define EXT_CSD_DEVICE_LIFE_TIME_EST_TYP_B	/;"	d
EXT_CSD_DRIVER_STRENGTH	src/device/mmc.h	/^#define EXT_CSD_DRIVER_STRENGTH	/;"	d
EXT_CSD_DRV_STR_SHIFT	src/device/mmc.h	/^#define EXT_CSD_DRV_STR_SHIFT	/;"	d
EXT_CSD_DYNCAP_NEEDED	src/device/mmc.h	/^#define EXT_CSD_DYNCAP_NEEDED	/;"	d
EXT_CSD_ERASED_MEM_CONT	src/device/mmc.h	/^#define EXT_CSD_ERASED_MEM_CONT	/;"	d
EXT_CSD_ERASE_GROUP_DEF	src/device/mmc.h	/^#define EXT_CSD_ERASE_GROUP_DEF	/;"	d
EXT_CSD_ERASE_TIMEOUT_MULT	src/device/mmc.h	/^#define EXT_CSD_ERASE_TIMEOUT_MULT	/;"	d
EXT_CSD_EXP_EVENTS_CTRL	src/device/mmc.h	/^#define EXT_CSD_EXP_EVENTS_CTRL	/;"	d
EXT_CSD_EXP_EVENTS_STATUS	src/device/mmc.h	/^#define EXT_CSD_EXP_EVENTS_STATUS	/;"	d
EXT_CSD_FIRMWARE_VERSION	src/device/mmc.h	/^#define EXT_CSD_FIRMWARE_VERSION	/;"	d
EXT_CSD_FLUSH_CACHE	src/device/mmc.h	/^#define EXT_CSD_FLUSH_CACHE	/;"	d
EXT_CSD_FW_CONFIG	src/device/mmc.h	/^#define EXT_CSD_FW_CONFIG	/;"	d
EXT_CSD_GENERIC_CMD6_TIME	src/device/mmc.h	/^#define EXT_CSD_GENERIC_CMD6_TIME	/;"	d
EXT_CSD_GP_SIZE_MULT	src/device/mmc.h	/^#define EXT_CSD_GP_SIZE_MULT	/;"	d
EXT_CSD_HC_ERASE_GRP_SIZE	src/device/mmc.h	/^#define EXT_CSD_HC_ERASE_GRP_SIZE	/;"	d
EXT_CSD_HC_WP_GRP_SIZE	src/device/mmc.h	/^#define EXT_CSD_HC_WP_GRP_SIZE	/;"	d
EXT_CSD_HPI_FEATURES	src/device/mmc.h	/^#define EXT_CSD_HPI_FEATURES	/;"	d
EXT_CSD_HPI_MGMT	src/device/mmc.h	/^#define EXT_CSD_HPI_MGMT	/;"	d
EXT_CSD_HS_TIMING	src/device/mmc.h	/^#define EXT_CSD_HS_TIMING	/;"	d
EXT_CSD_MANUAL_BKOPS_MASK	src/device/mmc.h	/^#define EXT_CSD_MANUAL_BKOPS_MASK	/;"	d
EXT_CSD_MAX_PACKED_READS	src/device/mmc.h	/^#define EXT_CSD_MAX_PACKED_READS	/;"	d
EXT_CSD_MAX_PACKED_WRITES	src/device/mmc.h	/^#define EXT_CSD_MAX_PACKED_WRITES	/;"	d
EXT_CSD_NO_POWER_NOTIFICATION	src/device/mmc.h	/^#define EXT_CSD_NO_POWER_NOTIFICATION	/;"	d
EXT_CSD_OUT_OF_INTERRUPT_TIME	src/device/mmc.h	/^#define EXT_CSD_OUT_OF_INTERRUPT_TIME	/;"	d
EXT_CSD_PACKED_CMD_STATUS	src/device/mmc.h	/^#define EXT_CSD_PACKED_CMD_STATUS	/;"	d
EXT_CSD_PACKED_EVENT_EN	src/device/mmc.h	/^#define EXT_CSD_PACKED_EVENT_EN	/;"	d
EXT_CSD_PACKED_FAILURE	src/device/mmc.h	/^#define EXT_CSD_PACKED_FAILURE	/;"	d
EXT_CSD_PACKED_FAILURE_INDEX	src/device/mmc.h	/^#define EXT_CSD_PACKED_FAILURE_INDEX	/;"	d
EXT_CSD_PACKED_GENERIC_ERROR	src/device/mmc.h	/^#define EXT_CSD_PACKED_GENERIC_ERROR	/;"	d
EXT_CSD_PACKED_INDEXED_ERROR	src/device/mmc.h	/^#define EXT_CSD_PACKED_INDEXED_ERROR	/;"	d
EXT_CSD_PARTITION_ATTRIBUTE	src/device/mmc.h	/^#define EXT_CSD_PARTITION_ATTRIBUTE	/;"	d
EXT_CSD_PARTITION_SETTING_COMPLETED	src/device/mmc.h	/^#define EXT_CSD_PARTITION_SETTING_COMPLETED /;"	d
EXT_CSD_PARTITION_SUPPORT	src/device/mmc.h	/^#define EXT_CSD_PARTITION_SUPPORT	/;"	d
EXT_CSD_PART_CONFIG	src/device/mmc.h	/^#define EXT_CSD_PART_CONFIG	/;"	d
EXT_CSD_PART_CONFIG_ACC_BOOT0	src/device/mmc.h	/^#define EXT_CSD_PART_CONFIG_ACC_BOOT0	/;"	d
EXT_CSD_PART_CONFIG_ACC_GP0	src/device/mmc.h	/^#define EXT_CSD_PART_CONFIG_ACC_GP0	/;"	d
EXT_CSD_PART_CONFIG_ACC_MASK	src/device/mmc.h	/^#define EXT_CSD_PART_CONFIG_ACC_MASK	/;"	d
EXT_CSD_PART_CONFIG_ACC_RPMB	src/device/mmc.h	/^#define EXT_CSD_PART_CONFIG_ACC_RPMB	/;"	d
EXT_CSD_PART_SETTING_COMPLETED	src/device/mmc.h	/^#define EXT_CSD_PART_SETTING_COMPLETED	/;"	d
EXT_CSD_PART_SUPPORT_PART_EN	src/device/mmc.h	/^#define EXT_CSD_PART_SUPPORT_PART_EN	/;"	d
EXT_CSD_PART_SWITCH_TIME	src/device/mmc.h	/^#define EXT_CSD_PART_SWITCH_TIME /;"	d
EXT_CSD_POWER_CLASS	src/device/mmc.h	/^#define EXT_CSD_POWER_CLASS	/;"	d
EXT_CSD_POWER_OFF_LONG	src/device/mmc.h	/^#define EXT_CSD_POWER_OFF_LONG	/;"	d
EXT_CSD_POWER_OFF_LONG_TIME	src/device/mmc.h	/^#define EXT_CSD_POWER_OFF_LONG_TIME	/;"	d
EXT_CSD_POWER_OFF_NOTIFICATION	src/device/mmc.h	/^#define EXT_CSD_POWER_OFF_NOTIFICATION	/;"	d
EXT_CSD_POWER_OFF_SHORT	src/device/mmc.h	/^#define EXT_CSD_POWER_OFF_SHORT	/;"	d
EXT_CSD_POWER_ON	src/device/mmc.h	/^#define EXT_CSD_POWER_ON	/;"	d
EXT_CSD_PRE_EOL_INFO	src/device/mmc.h	/^#define EXT_CSD_PRE_EOL_INFO	/;"	d
EXT_CSD_PWR_CL_200_195	src/device/mmc.h	/^#define EXT_CSD_PWR_CL_200_195	/;"	d
EXT_CSD_PWR_CL_200_360	src/device/mmc.h	/^#define EXT_CSD_PWR_CL_200_360	/;"	d
EXT_CSD_PWR_CL_26_195	src/device/mmc.h	/^#define EXT_CSD_PWR_CL_26_195	/;"	d
EXT_CSD_PWR_CL_26_360	src/device/mmc.h	/^#define EXT_CSD_PWR_CL_26_360	/;"	d
EXT_CSD_PWR_CL_4BIT_MASK	src/device/mmc.h	/^#define EXT_CSD_PWR_CL_4BIT_MASK	/;"	d
EXT_CSD_PWR_CL_4BIT_SHIFT	src/device/mmc.h	/^#define EXT_CSD_PWR_CL_4BIT_SHIFT	/;"	d
EXT_CSD_PWR_CL_52_195	src/device/mmc.h	/^#define EXT_CSD_PWR_CL_52_195	/;"	d
EXT_CSD_PWR_CL_52_360	src/device/mmc.h	/^#define EXT_CSD_PWR_CL_52_360	/;"	d
EXT_CSD_PWR_CL_8BIT_MASK	src/device/mmc.h	/^#define EXT_CSD_PWR_CL_8BIT_MASK	/;"	d
EXT_CSD_PWR_CL_8BIT_SHIFT	src/device/mmc.h	/^#define EXT_CSD_PWR_CL_8BIT_SHIFT	/;"	d
EXT_CSD_PWR_CL_DDR_200_360	src/device/mmc.h	/^#define EXT_CSD_PWR_CL_DDR_200_360	/;"	d
EXT_CSD_PWR_CL_DDR_52_195	src/device/mmc.h	/^#define EXT_CSD_PWR_CL_DDR_52_195	/;"	d
EXT_CSD_PWR_CL_DDR_52_360	src/device/mmc.h	/^#define EXT_CSD_PWR_CL_DDR_52_360	/;"	d
EXT_CSD_REL_WR_SEC_C	src/device/mmc.h	/^#define EXT_CSD_REL_WR_SEC_C	/;"	d
EXT_CSD_REV	src/device/mmc.h	/^#define EXT_CSD_REV	/;"	d
EXT_CSD_RPMB_MULT	src/device/mmc.h	/^#define EXT_CSD_RPMB_MULT	/;"	d
EXT_CSD_RST_N_ENABLED	src/device/mmc.h	/^#define EXT_CSD_RST_N_ENABLED	/;"	d
EXT_CSD_RST_N_EN_MASK	src/device/mmc.h	/^#define EXT_CSD_RST_N_EN_MASK	/;"	d
EXT_CSD_RST_N_FUNCTION	src/device/mmc.h	/^#define EXT_CSD_RST_N_FUNCTION	/;"	d
EXT_CSD_SANITIZE_START	src/device/mmc.h	/^#define EXT_CSD_SANITIZE_START	/;"	d
EXT_CSD_SEC_BD_BLK_EN	src/device/mmc.h	/^#define EXT_CSD_SEC_BD_BLK_EN	/;"	d
EXT_CSD_SEC_CNT	src/device/mmc.h	/^#define EXT_CSD_SEC_CNT	/;"	d
EXT_CSD_SEC_ERASE_MULT	src/device/mmc.h	/^#define EXT_CSD_SEC_ERASE_MULT	/;"	d
EXT_CSD_SEC_ER_EN	src/device/mmc.h	/^#define EXT_CSD_SEC_ER_EN	/;"	d
EXT_CSD_SEC_FEATURE_SUPPORT	src/device/mmc.h	/^#define EXT_CSD_SEC_FEATURE_SUPPORT	/;"	d
EXT_CSD_SEC_GB_CL_EN	src/device/mmc.h	/^#define EXT_CSD_SEC_GB_CL_EN	/;"	d
EXT_CSD_SEC_SANITIZE	src/device/mmc.h	/^#define EXT_CSD_SEC_SANITIZE	/;"	d
EXT_CSD_SEC_TRIM_MULT	src/device/mmc.h	/^#define EXT_CSD_SEC_TRIM_MULT	/;"	d
EXT_CSD_STROBE_SUPPORT	src/device/mmc.h	/^#define EXT_CSD_STROBE_SUPPORT	/;"	d
EXT_CSD_STRUCTURE	src/device/mmc.h	/^#define EXT_CSD_STRUCTURE	/;"	d
EXT_CSD_SUPPORTED_MODE	src/device/mmc.h	/^#define EXT_CSD_SUPPORTED_MODE	/;"	d
EXT_CSD_SYSPOOL_EXHAUSTED	src/device/mmc.h	/^#define EXT_CSD_SYSPOOL_EXHAUSTED	/;"	d
EXT_CSD_S_A_TIMEOUT	src/device/mmc.h	/^#define EXT_CSD_S_A_TIMEOUT	/;"	d
EXT_CSD_TAG_UNIT_SIZE	src/device/mmc.h	/^#define EXT_CSD_TAG_UNIT_SIZE	/;"	d
EXT_CSD_TIMING_BC	src/device/mmc.h	/^#define EXT_CSD_TIMING_BC	/;"	d
EXT_CSD_TIMING_HS	src/device/mmc.h	/^#define EXT_CSD_TIMING_HS	/;"	d
EXT_CSD_TIMING_HS200	src/device/mmc.h	/^#define EXT_CSD_TIMING_HS200	/;"	d
EXT_CSD_TIMING_HS400	src/device/mmc.h	/^#define EXT_CSD_TIMING_HS400	/;"	d
EXT_CSD_TRIM_MULT	src/device/mmc.h	/^#define EXT_CSD_TRIM_MULT	/;"	d
EXT_CSD_URGENT_BKOPS	src/device/mmc.h	/^#define EXT_CSD_URGENT_BKOPS	/;"	d
EXT_CSD_WR_REL_PARAM	src/device/mmc.h	/^#define EXT_CSD_WR_REL_PARAM	/;"	d
EXT_CSD_WR_REL_PARAM_EN	src/device/mmc.h	/^#define EXT_CSD_WR_REL_PARAM_EN	/;"	d
E_AND	tools/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT,$/;"	e	enum:expr_type
E_EQUAL	tools/kconfig/expr.h	/^	E_EQUAL, E_UNEQUAL, E_LTH, E_LEQ, E_GTH, E_GEQ,$/;"	e	enum:expr_type
E_GEQ	tools/kconfig/expr.h	/^	E_EQUAL, E_UNEQUAL, E_LTH, E_LEQ, E_GTH, E_GEQ,$/;"	e	enum:expr_type
E_GTH	tools/kconfig/expr.h	/^	E_EQUAL, E_UNEQUAL, E_LTH, E_LEQ, E_GTH, E_GEQ,$/;"	e	enum:expr_type
E_LEQ	tools/kconfig/expr.h	/^	E_EQUAL, E_UNEQUAL, E_LTH, E_LEQ, E_GTH, E_GEQ,$/;"	e	enum:expr_type
E_LIST	tools/kconfig/expr.h	/^	E_LIST, E_SYMBOL, E_RANGE$/;"	e	enum:expr_type
E_LTH	tools/kconfig/expr.h	/^	E_EQUAL, E_UNEQUAL, E_LTH, E_LEQ, E_GTH, E_GEQ,$/;"	e	enum:expr_type
E_NONE	tools/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT,$/;"	e	enum:expr_type
E_NOT	tools/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT,$/;"	e	enum:expr_type
E_OR	tools/kconfig/expr.h	/^	E_NONE, E_OR, E_AND, E_NOT,$/;"	e	enum:expr_type
E_RANGE	tools/kconfig/expr.h	/^	E_LIST, E_SYMBOL, E_RANGE$/;"	e	enum:expr_type
E_SYMBOL	tools/kconfig/expr.h	/^	E_LIST, E_SYMBOL, E_RANGE$/;"	e	enum:expr_type
E_UNEQUAL	tools/kconfig/expr.h	/^	E_EQUAL, E_UNEQUAL, E_LTH, E_LEQ, E_GTH, E_GEQ,$/;"	e	enum:expr_type
FB_ADDR	src/device/Kconfig	/^config FB_ADDR$/;"	c
FIFO_READ_THRESHOLD	resource/sdcard/nemu.c	/^#define FIFO_READ_THRESHOLD	/;"	d	file:
FIFO_WRITE_THRESHOLD	resource/sdcard/nemu.c	/^#define FIFO_WRITE_THRESHOLD	/;"	d	file:
FILELIST_MK	Makefile	/^FILELIST_MK = $(shell find .\/src -name "filelist.mk")$/;"	m
FIXDEP	scripts/config.mk	/^FIXDEP := $(FIXDEP_PATH)\/build\/fixdep$/;"	m
FIXDEP_PATH	scripts/config.mk	/^FIXDEP_PATH  := $(NEMU_HOME)\/tools\/fixdep$/;"	m
FLEXINT_H	tools/kconfig/build/lexer.lex.c	/^#define FLEXINT_H$/;"	d	file:
FLEX_BETA	tools/kconfig/build/lexer.lex.c	/^#define FLEX_BETA$/;"	d	file:
FLEX_SCANNER	tools/kconfig/build/lexer.lex.c	/^#define FLEX_SCANNER$/;"	d	file:
FMT_PADDR	include/common.h	/^#define FMT_PADDR /;"	d
FMT_WORD	include/common.h	/^#define FMT_WORD /;"	d
FUNCTION_MAX_ARGS	tools/kconfig/preprocess.c	/^#define FUNCTION_MAX_ARGS	/;"	d	file:
GUEST_ISA	Makefile	/^GUEST_ISA ?= $(call remove_quote,$(CONFIG_ISA))$/;"	m
GUEST_ISA	tools/kvm-diff/Makefile	/^GUEST_ISA = x86$/;"	m
HASHSZ	tools/fixdep/fixdep.c	/^#define HASHSZ /;"	d	file:
HAS_AUDIO	src/device/Kconfig	/^menuconfig HAS_AUDIO$/;"	c
HAS_DISK	src/device/Kconfig	/^menuconfig HAS_DISK$/;"	c
HAS_KEYBOARD	src/device/Kconfig	/^menuconfig HAS_KEYBOARD$/;"	c
HAS_PORT_IO	src/device/Kconfig	/^config HAS_PORT_IO$/;"	c
HAS_SDCARD	src/device/Kconfig	/^menuconfig HAS_SDCARD$/;"	c
HAS_SERIAL	src/device/Kconfig	/^menuconfig HAS_SERIAL$/;"	c
HAS_TIMER	src/device/Kconfig	/^menuconfig HAS_TIMER$/;"	c
HAS_VGA	src/device/Kconfig	/^menuconfig HAS_VGA$/;"	c
HELP	tools/kconfig/build/lexer.lex.c	/^#define HELP /;"	d	file:
HONG	scripts/build.mk	/^HONG:= -D $(BATCH_MODE)$/;"	m
I8042_DATA_MMIO	src/device/Kconfig	/^config I8042_DATA_MMIO$/;"	c
I8042_DATA_PORT	src/device/Kconfig	/^config I8042_DATA_PORT$/;"	c
IFDEF	include/macro.h	/^#define IFDEF(/;"	d
IFNDEF	include/macro.h	/^#define IFNDEF(/;"	d
IFONE	include/macro.h	/^#define IFONE(/;"	d
IFZERO	include/macro.h	/^#define IFZERO(/;"	d
INCLUDES	scripts/build.mk	/^INCLUDES = $(addprefix -I, $(INC_PATH))$/;"	m
INC_LIBS	tools/spike-diff/Makefile	/^INC_LIBS  = $(addprefix $(REPO_PATH)\/build\/, $(lib_dependencies))$/;"	m
INC_PATH	scripts/build.mk	/^INC_PATH := $(WORK_DIR)\/include $(INC_PATH)$/;"	m
INC_PATH	tools/spike-diff/Makefile	/^INC_PATH  = -I$(REPO_PATH) $(addprefix -I$(REPO_PATH)\/, $(inc_dependencies))$/;"	m
INITIAL	tools/kconfig/build/lexer.lex.c	/^#define INITIAL /;"	d	file:
INPUTBOX_HEIGTH_MIN	tools/kconfig/lxdialog/dialog.h	/^#define INPUTBOX_HEIGTH_MIN /;"	d
INPUTBOX_WIDTH_MIN	tools/kconfig/lxdialog/dialog.h	/^#define INPUTBOX_WIDTH_MIN /;"	d
INSTPAT	include/cpu/decode.h	/^#define INSTPAT(/;"	d
INSTPAT_END	include/cpu/decode.h	/^#define INSTPAT_END(/;"	d
INSTPAT_INST	src/isa/riscv32/inst.c	/^#define INSTPAT_INST(/;"	d	file:
INSTPAT_INST	src/isa/riscv64/inst.c	/^#define INSTPAT_INST(/;"	d	file:
INSTPAT_MATCH	src/isa/riscv32/inst.c	/^#define INSTPAT_MATCH(/;"	d	file:
INSTPAT_MATCH	src/isa/riscv64/inst.c	/^#define INSTPAT_MATCH(/;"	d	file:
INSTPAT_START	include/cpu/decode.h	/^#define INSTPAT_START(/;"	d
INT16_MAX	tools/kconfig/build/lexer.lex.c	/^#define INT16_MAX /;"	d	file:
INT16_MIN	tools/kconfig/build/lexer.lex.c	/^#define INT16_MIN /;"	d	file:
INT32_MAX	tools/kconfig/build/lexer.lex.c	/^#define INT32_MAX /;"	d	file:
INT32_MIN	tools/kconfig/build/lexer.lex.c	/^#define INT32_MIN /;"	d	file:
INT8_MAX	tools/kconfig/build/lexer.lex.c	/^#define INT8_MAX /;"	d	file:
INT8_MIN	tools/kconfig/build/lexer.lex.c	/^#define INT8_MIN /;"	d	file:
INTR_EMPTY	include/isa.h	/^#define INTR_EMPTY /;"	d
INV	include/cpu/cpu.h	/^#define INV(/;"	d
IOMap	include/device/map.h	/^} IOMap;$/;"	t	typeref:struct:__anon4777232b0108
IO_SPACE_MAX	src/device/io/map.c	/^#define IO_SPACE_MAX /;"	d	file:
ISA	Kconfig	/^config ISA$/;"	c
ISA64	Kconfig	/^config ISA64$/;"	c
ISADecodeInfo	include/isa.h	/^typedef concat(__GUEST_ISA__, _ISADecodeInfo) ISADecodeInfo;$/;"	t
ISA_QEMU_ARGS	tools/qemu-diff/include/isa.h	/^#define ISA_QEMU_ARGS /;"	d
ISA_QEMU_ARGS	tools/qemu-diff/include/isa.h	/^#define ISA_QEMU_ARGS$/;"	d
ISA_QEMU_BIN	tools/qemu-diff/include/isa.h	/^#define ISA_QEMU_BIN /;"	d
ISA_mips32	Kconfig	/^config ISA_mips32$/;"	c	choice:choice8014d1a60104
ISA_riscv32	Kconfig	/^config ISA_riscv32$/;"	c	choice:choice8014d1a60104
ISA_riscv64	Kconfig	/^config ISA_riscv64$/;"	c	choice:choice8014d1a60104
ISA_x86	Kconfig	/^config ISA_x86$/;"	c	choice:choice8014d1a60104
ISDEF	include/macro.h	/^#define ISDEF(/;"	d
ISNDEF	include/macro.h	/^#define ISNDEF(/;"	d
ISONE	include/macro.h	/^#define ISONE(/;"	d
ISZERO	include/macro.h	/^#define ISZERO(/;"	d
ITRACE	Kconfig	/^config ITRACE$/;"	c	menu:Testing and Debugging
ITRACE_COND	Kconfig	/^config ITRACE_COND$/;"	c	menu:Testing and Debugging
JUMP_NB	tools/kconfig/expr.h	/^#define JUMP_NB	/;"	d
KCONFIG_PATH	scripts/config.mk	/^KCONFIG_PATH := $(NEMU_HOME)\/tools\/kconfig$/;"	m
KEYDOWN_MASK	src/device/keyboard.c	/^#define KEYDOWN_MASK /;"	d	file:
KEY_ESC	tools/kconfig/lxdialog/dialog.h	/^#define KEY_ESC /;"	d
KEY_QUEUE_LEN	src/device/keyboard.c	/^#define KEY_QUEUE_LEN /;"	d	file:
Kconfig	scripts/config.mk	/^Kconfig      := $(NEMU_HOME)\/Kconfig$/;"	m
LDFLAGS	scripts/build.mk	/^LDFLAGS := -O2 $(LDFLAGS)$/;"	m
LINE_GROWTH	tools/kconfig/confdata.c	/^#define LINE_GROWTH /;"	d	file:
LINUX_MMC_MMC_H	src/device/mmc.h	/^#define LINUX_MMC_MMC_H$/;"	d
LIST_H	tools/kconfig/list.h	/^#define LIST_H$/;"	d
LIST_HEAD	tools/kconfig/list.h	/^#define LIST_HEAD(/;"	d
LIST_HEAD_INIT	tools/kconfig/list.h	/^#define LIST_HEAD_INIT(/;"	d
LIST_POISON1	tools/kconfig/list.h	/^#define LIST_POISON1 /;"	d
LIST_POISON2	tools/kconfig/list.h	/^#define LIST_POISON2 /;"	d
LKC_H	tools/kconfig/lkc.h	/^#define LKC_H$/;"	d
Log	include/debug.h	/^#define Log(/;"	d
MAP	include/macro.h	/^#define MAP(/;"	d
MAP	src/device/keyboard.c	/^  MAP(_KEYS, _KEY_NAME)$/;"	e	enum:__anondae01fbd0103	file:
MAX	tools/kconfig/lxdialog/dialog.h	/^#define MAX(/;"	d
MAXITEMSTR	tools/kconfig/lxdialog/dialog.h	/^#define MAXITEMSTR /;"	d
MAX_HANDLER	src/device/alarm.c	/^#define MAX_HANDLER /;"	d	file:
MAX_INST_TO_PRINT	src/cpu/cpu-exec.c	/^#define MAX_INST_TO_PRINT /;"	d	file:
MAX_LEN	tools/kconfig/lxdialog/dialog.h	/^#define MAX_LEN /;"	d
MBASE	src/memory/Kconfig	/^config MBASE$/;"	c	menu:Memory Configuration
MCONF	scripts/config.mk	/^MCONF  := $(KCONFIG_PATH)\/build\/mconf$/;"	m
MEMORY_SIZE	src/device/sdcard.c	/^#define MEMORY_SIZE /;"	d	file:
MEM_RANDOM	src/memory/Kconfig	/^config MEM_RANDOM$/;"	c	menu:Memory Configuration
MEM_RET_CROSS_PAGE	include/isa.h	/^enum { MEM_RET_OK, MEM_RET_FAIL, MEM_RET_CROSS_PAGE };$/;"	e	enum:__anona577a74b0303
MEM_RET_FAIL	include/isa.h	/^enum { MEM_RET_OK, MEM_RET_FAIL, MEM_RET_CROSS_PAGE };$/;"	e	enum:__anona577a74b0303
MEM_RET_OK	include/isa.h	/^enum { MEM_RET_OK, MEM_RET_FAIL, MEM_RET_CROSS_PAGE };$/;"	e	enum:__anona577a74b0303
MEM_TYPE_IFETCH	include/isa.h	/^enum { MEM_TYPE_IFETCH, MEM_TYPE_READ, MEM_TYPE_WRITE };$/;"	e	enum:__anona577a74b0203
MEM_TYPE_READ	include/isa.h	/^enum { MEM_TYPE_IFETCH, MEM_TYPE_READ, MEM_TYPE_WRITE };$/;"	e	enum:__anona577a74b0203
MEM_TYPE_WRITE	include/isa.h	/^enum { MEM_TYPE_IFETCH, MEM_TYPE_READ, MEM_TYPE_WRITE };$/;"	e	enum:__anona577a74b0203
MENUBOX_HEIGTH_MIN	tools/kconfig/lxdialog/dialog.h	/^#define MENUBOX_HEIGTH_MIN /;"	d
MENUBOX_WIDTH_MIN	tools/kconfig/lxdialog/dialog.h	/^#define MENUBOX_WIDTH_MIN /;"	d
MENU_CHANGED	tools/kconfig/expr.h	/^#define MENU_CHANGED	/;"	d
MENU_ROOT	tools/kconfig/expr.h	/^#define MENU_ROOT	/;"	d
MIN	tools/kconfig/lxdialog/dialog.h	/^#define MIN(/;"	d
MKFLAGS	tools/difftest.mk	/^MKFLAGS = GUEST_ISA=$(GUEST_ISA) SHARE=1 ENGINE=interpreter$/;"	m
MMC_ALL_SEND_CID	src/device/mmc.h	/^#define MMC_ALL_SEND_CID /;"	d
MMC_APP_CMD	src/device/mmc.h	/^#define MMC_APP_CMD /;"	d
MMC_BUS_TEST_R	src/device/mmc.h	/^#define MMC_BUS_TEST_R /;"	d
MMC_BUS_TEST_W	src/device/mmc.h	/^#define MMC_BUS_TEST_W /;"	d
MMC_CARD_BUSY	src/device/mmc.h	/^#define MMC_CARD_BUSY	/;"	d
MMC_CLR_WRITE_PROT	src/device/mmc.h	/^#define MMC_CLR_WRITE_PROT /;"	d
MMC_CMDQ_TASK_MGMT	src/device/mmc.h	/^#define MMC_CMDQ_TASK_MGMT /;"	d
MMC_DISCARD_ARG	src/device/mmc.h	/^#define MMC_DISCARD_ARG	/;"	d
MMC_ERASE	src/device/mmc.h	/^#define MMC_ERASE /;"	d
MMC_ERASE_ARG	src/device/mmc.h	/^#define MMC_ERASE_ARG	/;"	d
MMC_ERASE_GROUP_END	src/device/mmc.h	/^#define MMC_ERASE_GROUP_END /;"	d
MMC_ERASE_GROUP_START	src/device/mmc.h	/^#define MMC_ERASE_GROUP_START /;"	d
MMC_EXECUTE_READ_TASK	src/device/mmc.h	/^#define MMC_EXECUTE_READ_TASK /;"	d
MMC_EXECUTE_WRITE_TASK	src/device/mmc.h	/^#define MMC_EXECUTE_WRITE_TASK /;"	d
MMC_FAST_IO	src/device/mmc.h	/^#define MMC_FAST_IO /;"	d
MMC_GEN_CMD	src/device/mmc.h	/^#define MMC_GEN_CMD /;"	d
MMC_GO_IDLE_STATE	src/device/mmc.h	/^#define MMC_GO_IDLE_STATE /;"	d
MMC_GO_INACTIVE_STATE	src/device/mmc.h	/^#define MMC_GO_INACTIVE_STATE /;"	d
MMC_GO_IRQ_STATE	src/device/mmc.h	/^#define MMC_GO_IRQ_STATE /;"	d
MMC_LOCK_UNLOCK	src/device/mmc.h	/^#define MMC_LOCK_UNLOCK /;"	d
MMC_PROGRAM_CID	src/device/mmc.h	/^#define MMC_PROGRAM_CID /;"	d
MMC_PROGRAM_CSD	src/device/mmc.h	/^#define MMC_PROGRAM_CSD /;"	d
MMC_QUE_TASK_ADDR	src/device/mmc.h	/^#define MMC_QUE_TASK_ADDR /;"	d
MMC_QUE_TASK_PARAMS	src/device/mmc.h	/^#define MMC_QUE_TASK_PARAMS /;"	d
MMC_READ_DAT_UNTIL_STOP	src/device/mmc.h	/^#define MMC_READ_DAT_UNTIL_STOP /;"	d
MMC_READ_MULTIPLE_BLOCK	src/device/mmc.h	/^#define MMC_READ_MULTIPLE_BLOCK /;"	d
MMC_READ_SINGLE_BLOCK	src/device/mmc.h	/^#define MMC_READ_SINGLE_BLOCK /;"	d
MMC_SECURE_ARGS	src/device/mmc.h	/^#define MMC_SECURE_ARGS	/;"	d
MMC_SECURE_ERASE_ARG	src/device/mmc.h	/^#define MMC_SECURE_ERASE_ARG	/;"	d
MMC_SECURE_TRIM1_ARG	src/device/mmc.h	/^#define MMC_SECURE_TRIM1_ARG	/;"	d
MMC_SECURE_TRIM2_ARG	src/device/mmc.h	/^#define MMC_SECURE_TRIM2_ARG	/;"	d
MMC_SELECT_CARD	src/device/mmc.h	/^#define MMC_SELECT_CARD /;"	d
MMC_SEND_CID	src/device/mmc.h	/^#define MMC_SEND_CID /;"	d
MMC_SEND_CSD	src/device/mmc.h	/^#define MMC_SEND_CSD /;"	d
MMC_SEND_EXT_CSD	src/device/mmc.h	/^#define MMC_SEND_EXT_CSD /;"	d
MMC_SEND_OP_COND	src/device/mmc.h	/^#define MMC_SEND_OP_COND /;"	d
MMC_SEND_STATUS	src/device/mmc.h	/^#define MMC_SEND_STATUS /;"	d
MMC_SEND_TUNING_BLOCK	src/device/mmc.h	/^#define MMC_SEND_TUNING_BLOCK /;"	d
MMC_SEND_TUNING_BLOCK_HS200	src/device/mmc.h	/^#define MMC_SEND_TUNING_BLOCK_HS200	/;"	d
MMC_SEND_WRITE_PROT	src/device/mmc.h	/^#define MMC_SEND_WRITE_PROT /;"	d
MMC_SET_BLOCKLEN	src/device/mmc.h	/^#define MMC_SET_BLOCKLEN /;"	d
MMC_SET_BLOCK_COUNT	src/device/mmc.h	/^#define MMC_SET_BLOCK_COUNT /;"	d
MMC_SET_DSR	src/device/mmc.h	/^#define MMC_SET_DSR /;"	d
MMC_SET_RELATIVE_ADDR	src/device/mmc.h	/^#define MMC_SET_RELATIVE_ADDR /;"	d
MMC_SET_WRITE_PROT	src/device/mmc.h	/^#define MMC_SET_WRITE_PROT /;"	d
MMC_SLEEP_AWAKE	src/device/mmc.h	/^#define MMC_SLEEP_AWAKE	/;"	d
MMC_SPI_CRC_ON_OFF	src/device/mmc.h	/^#define MMC_SPI_CRC_ON_OFF /;"	d
MMC_SPI_READ_OCR	src/device/mmc.h	/^#define MMC_SPI_READ_OCR /;"	d
MMC_STOP_TRANSMISSION	src/device/mmc.h	/^#define MMC_STOP_TRANSMISSION /;"	d
MMC_SWITCH	src/device/mmc.h	/^#define MMC_SWITCH /;"	d
MMC_SWITCH_MODE_CLEAR_BITS	src/device/mmc.h	/^#define MMC_SWITCH_MODE_CLEAR_BITS	/;"	d
MMC_SWITCH_MODE_CMD_SET	src/device/mmc.h	/^#define MMC_SWITCH_MODE_CMD_SET	/;"	d
MMC_SWITCH_MODE_SET_BITS	src/device/mmc.h	/^#define MMC_SWITCH_MODE_SET_BITS	/;"	d
MMC_SWITCH_MODE_WRITE_BYTE	src/device/mmc.h	/^#define MMC_SWITCH_MODE_WRITE_BYTE	/;"	d
MMC_TRIM_ARG	src/device/mmc.h	/^#define MMC_TRIM_ARG	/;"	d
MMC_TRIM_ARGS	src/device/mmc.h	/^#define MMC_TRIM_ARGS	/;"	d
MMC_WRITE_BLOCK	src/device/mmc.h	/^#define MMC_WRITE_BLOCK /;"	d
MMC_WRITE_DAT_UNTIL_STOP	src/device/mmc.h	/^#define MMC_WRITE_DAT_UNTIL_STOP /;"	d
MMC_WRITE_MULTIPLE_BLOCK	src/device/mmc.h	/^#define MMC_WRITE_MULTIPLE_BLOCK /;"	d
MMU_DIRECT	include/isa.h	/^enum { MMU_DIRECT, MMU_TRANSLATE, MMU_FAIL };$/;"	e	enum:__anona577a74b0103
MMU_FAIL	include/isa.h	/^enum { MMU_DIRECT, MMU_TRANSLATE, MMU_FAIL };$/;"	e	enum:__anona577a74b0103
MMU_TRANSLATE	include/isa.h	/^enum { MMU_DIRECT, MMU_TRANSLATE, MMU_FAIL };$/;"	e	enum:__anona577a74b0103
MODE_SYSTEM	Kconfig	/^config MODE_SYSTEM$/;"	c	choice:choice8014d1a60404
MSIZE	src/memory/Kconfig	/^config MSIZE$/;"	c	menu:Memory Configuration
MULT	src/device/sdcard.c	/^#define MULT /;"	d	file:
MUXDEF	include/macro.h	/^#define MUXDEF(/;"	d
MUXNDEF	include/macro.h	/^#define MUXNDEF(/;"	d
MUXONE	include/macro.h	/^#define MUXONE(/;"	d
MUXZERO	include/macro.h	/^#define MUXZERO(/;"	d
MUX_MACRO_PROPERTY	include/macro.h	/^#define MUX_MACRO_PROPERTY(/;"	d
MUX_WITH_COMMA	include/macro.h	/^#define MUX_WITH_COMMA(/;"	d
M_EVENT	tools/kconfig/lxdialog/dialog.h	/^#define M_EVENT /;"	d
Memory Configuration	src/memory/Kconfig	/^menu "Memory Configuration"$/;"	m
Miscellaneous	Kconfig	/^menu "Miscellaneous"$/;"	m
Mr	src/isa/riscv32/inst.c	/^#define Mr /;"	d	file:
Mr	src/isa/riscv64/inst.c	/^#define Mr /;"	d	file:
Mw	src/isa/riscv32/inst.c	/^#define Mw /;"	d	file:
Mw	src/isa/riscv64/inst.c	/^#define Mw /;"	d	file:
NAME	Makefile	/^NAME    = $(GUEST_ISA)-nemu-$(ENGINE)$/;"	m
NAME	tools/fixdep/Makefile	/^NAME = fixdep$/;"	m
NAME	tools/gen-expr/Makefile	/^NAME = gen-expr$/;"	m
NAME	tools/kconfig/Makefile	/^NAME = conf$/;"	m
NAME	tools/kvm-diff/Makefile	/^NAME  = x86-kvm$/;"	m
NAME	tools/qemu-diff/Makefile	/^NAME  = $(GUEST_ISA)-qemu$/;"	m
NAME	tools/spike-diff/Makefile	/^NAME = $(GUEST_ISA)-spike-so$/;"	m
NEG	src/monitor/sdb/expr.c	/^  NEG $/;"	e	enum:__anonfd0e76cb0103	file:
NEMU	README.md	/^# NEMU$/;"	c
NEMU Configuration Menu	Kconfig	/^mainmenu "NEMU Configuration Menu"$/;"	M
NEMU sdhost驱动	resource/sdcard/README.md	/^# NEMU sdhost驱动$/;"	c
NEMUState	include/utils.h	/^} NEMUState;$/;"	t	typeref:struct:__anon80c1a05f0208
NEMUTRAP	include/cpu/cpu.h	/^#define NEMUTRAP(/;"	d
NEMU_ABORT	include/utils.h	/^enum { NEMU_RUNNING, NEMU_STOP, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon80c1a05f0103
NEMU_END	include/utils.h	/^enum { NEMU_RUNNING, NEMU_STOP, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon80c1a05f0103
NEMU_EXEC	scripts/native.mk	/^NEMU_EXEC := $(BINARY) $(ARGS) $(IMG)$/;"	m
NEMU_QUIT	include/utils.h	/^enum { NEMU_RUNNING, NEMU_STOP, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon80c1a05f0103
NEMU_RUNNING	include/utils.h	/^enum { NEMU_RUNNING, NEMU_STOP, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon80c1a05f0103
NEMU_STOP	include/utils.h	/^enum { NEMU_RUNNING, NEMU_STOP, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon80c1a05f0103
NO	src/monitor/sdb/sdb.c	/^  int NO;$/;"	m	struct:watchpoint	typeref:typename:int	file:
NO	src/monitor/sdb/watchpoint.c	/^  int NO;$/;"	m	struct:watchpoint	typeref:typename:int	file:
NOTWATCHPOINT	Kconfig	/^config NOTWATCHPOINT$/;"	c	choice:choice8014d1a60204
NR_BLOCK	src/device/sdcard.c	/^#define NR_BLOCK /;"	d	file:
NR_CMD	src/monitor/sdb/sdb.c	/^#define NR_CMD /;"	d	file:
NR_MAP	src/device/io/mmio.c	/^#define NR_MAP /;"	d	file:
NR_MAP	src/device/io/port-io.c	/^#define NR_MAP /;"	d	file:
NR_REGEX	src/monitor/sdb/expr.c	/^#define NR_REGEX /;"	d	file:
NR_WP	src/monitor/sdb/watchpoint.c	/^#define NR_WP /;"	d	file:
NUMBERIC_FMT	src/cpu/cpu-exec.c	/^#define NUMBERIC_FMT /;"	d	file:
OBJS	scripts/build.mk	/^OBJS = $(SRCS:%.c=$(OBJ_DIR)\/%.o) $(CXXSRC:%.cc=$(OBJ_DIR)\/%.o)$/;"	m
OBJ_DIR	scripts/build.mk	/^OBJ_DIR  = $(BUILD_DIR)\/obj-$(NAME)$(SO)$/;"	m
OLD_NCURSES	tools/kconfig/lxdialog/dialog.h	/^#define OLD_NCURSES /;"	d
PACKAGE	tools/kconfig/lkc.h	/^#define PACKAGE /;"	d
PAGE_MASK	include/memory/vaddr.h	/^#define PAGE_MASK /;"	d
PAGE_SHIFT	include/memory/vaddr.h	/^#define PAGE_SHIFT /;"	d
PAGE_SIZE	include/memory/vaddr.h	/^#define PAGE_SIZE /;"	d
PC_RESET_OFFSET	src/memory/Kconfig	/^config PC_RESET_OFFSET$/;"	c	menu:Memory Configuration
PG_ALIGN	include/macro.h	/^#define PG_ALIGN /;"	d
PIO_THRESHOLD	resource/sdcard/nemu.c	/^#define PIO_THRESHOLD	/;"	d	file:
PMEM64	include/common.h	/^#define PMEM64 /;"	d
PMEM_GARRAY	src/memory/Kconfig	/^config PMEM_GARRAY$/;"	c	choice:Memory Configuration""choice57e410a50104
PMEM_LEFT	include/memory/paddr.h	/^#define PMEM_LEFT /;"	d
PMEM_MALLOC	src/memory/Kconfig	/^config PMEM_MALLOC$/;"	c	choice:Memory Configuration""choice57e410a50104
PMEM_RIGHT	include/memory/paddr.h	/^#define PMEM_RIGHT /;"	d
PORT_IO_SPACE_MAX	src/device/io/port-io.c	/^#define PORT_IO_SPACE_MAX /;"	d	file:
PRINTD	tools/kconfig/build/parser.tab.c	/^#define PRINTD	/;"	d	file:
P_CHOICE	tools/kconfig/expr.h	/^	P_CHOICE,   \/* choice value *\/$/;"	e	enum:prop_type
P_COMMENT	tools/kconfig/expr.h	/^	P_COMMENT,  \/* text associated with a comment *\/$/;"	e	enum:prop_type
P_DEFAULT	tools/kconfig/expr.h	/^	P_DEFAULT,  \/* default y *\/$/;"	e	enum:prop_type
P_IMPLY	tools/kconfig/expr.h	/^	P_IMPLY,    \/* imply BAR *\/$/;"	e	enum:prop_type
P_MENU	tools/kconfig/expr.h	/^	P_MENU,     \/* prompt associated with a menu or menuconfig symbol *\/$/;"	e	enum:prop_type
P_PROMPT	tools/kconfig/expr.h	/^	P_PROMPT,   \/* prompt "foo prompt" or "BAZ Value" *\/$/;"	e	enum:prop_type
P_RANGE	tools/kconfig/expr.h	/^	P_RANGE,    \/* range 7..100 (for a symbol) *\/$/;"	e	enum:prop_type
P_SELECT	tools/kconfig/expr.h	/^	P_SELECT,   \/* select BAR *\/$/;"	e	enum:prop_type
P_SYMBOL	tools/kconfig/expr.h	/^	P_SYMBOL,   \/* where a symbol is defined *\/$/;"	e	enum:prop_type
P_UNKNOWN	tools/kconfig/expr.h	/^	P_UNKNOWN,$/;"	e	enum:prop_type
P_operator	src/monitor/sdb/expr.c	/^static Token * P_operator(Token *p,Token *q){$/;"	f	typeref:typename:Token *	file:
Q	scripts/config.mk	/^Q            := @$/;"	m
R	src/isa/riscv32/inst.c	/^#define R(/;"	d	file:
R	src/isa/riscv64/inst.c	/^#define R(/;"	d	file:
R1_ADDRESS_ERROR	src/device/mmc.h	/^#define R1_ADDRESS_ERROR	/;"	d
R1_APP_CMD	src/device/mmc.h	/^#define R1_APP_CMD	/;"	d
R1_BLOCK_LEN_ERROR	src/device/mmc.h	/^#define R1_BLOCK_LEN_ERROR	/;"	d
R1_CARD_ECC_DISABLED	src/device/mmc.h	/^#define R1_CARD_ECC_DISABLED	/;"	d
R1_CARD_ECC_FAILED	src/device/mmc.h	/^#define R1_CARD_ECC_FAILED	/;"	d
R1_CARD_IS_LOCKED	src/device/mmc.h	/^#define R1_CARD_IS_LOCKED	/;"	d
R1_CC_ERROR	src/device/mmc.h	/^#define R1_CC_ERROR	/;"	d
R1_CID_CSD_OVERWRITE	src/device/mmc.h	/^#define R1_CID_CSD_OVERWRITE	/;"	d
R1_COM_CRC_ERROR	src/device/mmc.h	/^#define R1_COM_CRC_ERROR	/;"	d
R1_CURRENT_STATE	src/device/mmc.h	/^#define R1_CURRENT_STATE(/;"	d
R1_ERASE_PARAM	src/device/mmc.h	/^#define R1_ERASE_PARAM	/;"	d
R1_ERASE_RESET	src/device/mmc.h	/^#define R1_ERASE_RESET	/;"	d
R1_ERASE_SEQ_ERROR	src/device/mmc.h	/^#define R1_ERASE_SEQ_ERROR /;"	d
R1_ERROR	src/device/mmc.h	/^#define R1_ERROR	/;"	d
R1_EXCEPTION_EVENT	src/device/mmc.h	/^#define R1_EXCEPTION_EVENT	/;"	d
R1_ILLEGAL_COMMAND	src/device/mmc.h	/^#define R1_ILLEGAL_COMMAND	/;"	d
R1_LOCK_UNLOCK_FAILED	src/device/mmc.h	/^#define R1_LOCK_UNLOCK_FAILED	/;"	d
R1_OUT_OF_RANGE	src/device/mmc.h	/^#define R1_OUT_OF_RANGE	/;"	d
R1_OVERRUN	src/device/mmc.h	/^#define R1_OVERRUN	/;"	d
R1_READY_FOR_DATA	src/device/mmc.h	/^#define R1_READY_FOR_DATA	/;"	d
R1_SPI_ADDRESS	src/device/mmc.h	/^#define R1_SPI_ADDRESS	/;"	d
R1_SPI_COM_CRC	src/device/mmc.h	/^#define R1_SPI_COM_CRC	/;"	d
R1_SPI_ERASE_RESET	src/device/mmc.h	/^#define R1_SPI_ERASE_RESET	/;"	d
R1_SPI_ERASE_SEQ	src/device/mmc.h	/^#define R1_SPI_ERASE_SEQ	/;"	d
R1_SPI_IDLE	src/device/mmc.h	/^#define R1_SPI_IDLE	/;"	d
R1_SPI_ILLEGAL_COMMAND	src/device/mmc.h	/^#define R1_SPI_ILLEGAL_COMMAND	/;"	d
R1_SPI_PARAMETER	src/device/mmc.h	/^#define R1_SPI_PARAMETER	/;"	d
R1_STATE_DATA	src/device/mmc.h	/^#define R1_STATE_DATA	/;"	d
R1_STATE_DIS	src/device/mmc.h	/^#define R1_STATE_DIS	/;"	d
R1_STATE_IDENT	src/device/mmc.h	/^#define R1_STATE_IDENT	/;"	d
R1_STATE_IDLE	src/device/mmc.h	/^#define R1_STATE_IDLE	/;"	d
R1_STATE_PRG	src/device/mmc.h	/^#define R1_STATE_PRG	/;"	d
R1_STATE_RCV	src/device/mmc.h	/^#define R1_STATE_RCV	/;"	d
R1_STATE_READY	src/device/mmc.h	/^#define R1_STATE_READY	/;"	d
R1_STATE_STBY	src/device/mmc.h	/^#define R1_STATE_STBY	/;"	d
R1_STATE_TRAN	src/device/mmc.h	/^#define R1_STATE_TRAN	/;"	d
R1_STATUS	src/device/mmc.h	/^#define R1_STATUS(/;"	d
R1_SWITCH_ERROR	src/device/mmc.h	/^#define R1_SWITCH_ERROR	/;"	d
R1_UNDERRUN	src/device/mmc.h	/^#define R1_UNDERRUN	/;"	d
R1_WP_ERASE_SKIP	src/device/mmc.h	/^#define R1_WP_ERASE_SKIP	/;"	d
R1_WP_VIOLATION	src/device/mmc.h	/^#define R1_WP_VIOLATION	/;"	d
R2_SPI_CARD_ECC_ERROR	src/device/mmc.h	/^#define R2_SPI_CARD_ECC_ERROR	/;"	d
R2_SPI_CARD_LOCKED	src/device/mmc.h	/^#define R2_SPI_CARD_LOCKED	/;"	d
R2_SPI_CC_ERROR	src/device/mmc.h	/^#define R2_SPI_CC_ERROR	/;"	d
R2_SPI_CSD_OVERWRITE	src/device/mmc.h	/^#define R2_SPI_CSD_OVERWRITE	/;"	d
R2_SPI_ERASE_PARAM	src/device/mmc.h	/^#define R2_SPI_ERASE_PARAM	/;"	d
R2_SPI_ERROR	src/device/mmc.h	/^#define R2_SPI_ERROR	/;"	d
R2_SPI_LOCK_UNLOCK_FAIL	src/device/mmc.h	/^#define R2_SPI_LOCK_UNLOCK_FAIL	/;"	d
R2_SPI_OUT_OF_RANGE	src/device/mmc.h	/^#define R2_SPI_OUT_OF_RANGE	/;"	d
R2_SPI_WP_ERASE_SKIP	src/device/mmc.h	/^#define R2_SPI_WP_ERASE_SKIP	/;"	d
R2_SPI_WP_VIOLATION	src/device/mmc.h	/^#define R2_SPI_WP_VIOLATION	/;"	d
READ_BL_LEN	src/device/sdcard.c	/^#define READ_BL_LEN /;"	d	file:
REJECT	tools/kconfig/build/lexer.lex.c	/^#define REJECT /;"	d	file:
REPO_BUILD_PATH	tools/spike-diff/Makefile	/^REPO_BUILD_PATH = $(REPO_PATH)\/build$/;"	m
REPO_MAKEFILE	tools/spike-diff/Makefile	/^REPO_MAKEFILE = $(REPO_BUILD_PATH)\/Makefile$/;"	m
REPO_PATH	tools/spike-diff/Makefile	/^REPO_PATH = repo$/;"	m
RESET_VECTOR	include/memory/paddr.h	/^#define RESET_VECTOR /;"	d
RESULTMAXSIZE	src/monitor/sdb/watchpoint.c	/^#define RESULTMAXSIZE /;"	d	file:
RESULTSIZE	src/monitor/sdb/expr.c	/^#define RESULTSIZE /;"	d	file:
RESULTSIZE	src/monitor/sdb/sdb.c	/^#define RESULTSIZE /;"	d	file:
RFLAGS_AC	tools/kvm-diff/src/kvm.c	/^#define RFLAGS_AC /;"	d	file:
RFLAGS_AF	tools/kvm-diff/src/kvm.c	/^#define RFLAGS_AF /;"	d	file:
RFLAGS_FIX_MASK	tools/kvm-diff/src/kvm.c	/^#define RFLAGS_FIX_MASK /;"	d	file:
RFLAGS_ID	tools/kvm-diff/src/kvm.c	/^#define RFLAGS_ID /;"	d	file:
RFLAGS_RF	tools/kvm-diff/src/kvm.c	/^#define RFLAGS_RF /;"	d	file:
RFLAGS_TF	tools/kvm-diff/src/kvm.c	/^#define RFLAGS_TF /;"	d	file:
ROUNDDOWN	include/macro.h	/^#define ROUNDDOWN(/;"	d
ROUNDUP	include/macro.h	/^#define ROUNDUP(/;"	d
RTC_MMIO	src/device/Kconfig	/^config RTC_MMIO$/;"	c
RTC_PORT	src/device/Kconfig	/^config RTC_PORT$/;"	c
RT_CHECK	Kconfig	/^config RT_CHECK$/;"	c	menu:Miscellaneous
SB_ADDR	src/device/Kconfig	/^config SB_ADDR$/;"	c
SB_SIZE	src/device/Kconfig	/^config SB_SIZE$/;"	c
SCREEN_H	src/device/vga.c	/^#define SCREEN_H /;"	d	file:
SCREEN_W	src/device/vga.c	/^#define SCREEN_W /;"	d	file:
SDARG	resource/sdcard/nemu.c	/^#define SDARG /;"	d	file:
SDARG	src/device/sdcard.c	/^  SDCMD, SDARG, SDTOUT, SDCDIV,$/;"	e	enum:__anon34a54b7d0103	file:
SDCARD_CTL_MMIO	src/device/Kconfig	/^config SDCARD_CTL_MMIO$/;"	c
SDCARD_IMG_PATH	src/device/Kconfig	/^config SDCARD_IMG_PATH$/;"	c
SDCDIV	resource/sdcard/nemu.c	/^#define SDCDIV /;"	d	file:
SDCDIV	src/device/sdcard.c	/^  SDCMD, SDARG, SDTOUT, SDCDIV,$/;"	e	enum:__anon34a54b7d0103	file:
SDCDIV_MAX_CDIV	resource/sdcard/nemu.c	/^#define SDCDIV_MAX_CDIV	/;"	d	file:
SDCMD	resource/sdcard/nemu.c	/^#define SDCMD /;"	d	file:
SDCMD	src/device/sdcard.c	/^  SDCMD, SDARG, SDTOUT, SDCDIV,$/;"	e	enum:__anon34a54b7d0103	file:
SDCMD_BUSYWAIT	resource/sdcard/nemu.c	/^#define SDCMD_BUSYWAIT	/;"	d	file:
SDCMD_CMD_MASK	resource/sdcard/nemu.c	/^#define SDCMD_CMD_MASK	/;"	d	file:
SDCMD_FAIL_FLAG	resource/sdcard/nemu.c	/^#define SDCMD_FAIL_FLAG	/;"	d	file:
SDCMD_LONG_RESPONSE	resource/sdcard/nemu.c	/^#define SDCMD_LONG_RESPONSE	/;"	d	file:
SDCMD_NEW_FLAG	resource/sdcard/nemu.c	/^#define SDCMD_NEW_FLAG	/;"	d	file:
SDCMD_NO_RESPONSE	resource/sdcard/nemu.c	/^#define SDCMD_NO_RESPONSE	/;"	d	file:
SDCMD_READ_CMD	resource/sdcard/nemu.c	/^#define SDCMD_READ_CMD	/;"	d	file:
SDCMD_WRITE_CMD	resource/sdcard/nemu.c	/^#define SDCMD_WRITE_CMD	/;"	d	file:
SDDATA	resource/sdcard/nemu.c	/^#define SDDATA /;"	d	file:
SDDATA	src/device/sdcard.c	/^  SDDATA, __PAD10, __PAD11, __PAD12,$/;"	e	enum:__anon34a54b7d0103	file:
SDDATA_FIFO_PIO_BURST	resource/sdcard/nemu.c	/^#define SDDATA_FIFO_PIO_BURST	/;"	d	file:
SDDATA_FIFO_WORDS	resource/sdcard/nemu.c	/^#define SDDATA_FIFO_WORDS	/;"	d	file:
SDEDM	resource/sdcard/nemu.c	/^#define SDEDM /;"	d	file:
SDEDM	src/device/sdcard.c	/^  SDVDD, SDEDM, SDHCFG, SDHBCT,$/;"	e	enum:__anon34a54b7d0103	file:
SDHBCT	resource/sdcard/nemu.c	/^#define SDHBCT /;"	d	file:
SDHBCT	src/device/sdcard.c	/^  SDVDD, SDEDM, SDHCFG, SDHBCT,$/;"	e	enum:__anon34a54b7d0103	file:
SDHBLC	resource/sdcard/nemu.c	/^#define SDHBLC /;"	d	file:
SDHBLC	src/device/sdcard.c	/^  SDHBLC$/;"	e	enum:__anon34a54b7d0103	file:
SDHCFG	resource/sdcard/nemu.c	/^#define SDHCFG /;"	d	file:
SDHCFG	src/device/sdcard.c	/^  SDVDD, SDEDM, SDHCFG, SDHBCT,$/;"	e	enum:__anon34a54b7d0103	file:
SDHSTS	resource/sdcard/nemu.c	/^#define SDHSTS /;"	d	file:
SDHSTS	src/device/sdcard.c	/^  SDHSTS, __PAD0, __PAD1, __PAD2,$/;"	e	enum:__anon34a54b7d0103	file:
SDL_KEYMAP	src/device/keyboard.c	/^#define SDL_KEYMAP(/;"	d	file:
SDRSP0	resource/sdcard/nemu.c	/^#define SDRSP0 /;"	d	file:
SDRSP0	src/device/sdcard.c	/^  SDRSP0, SDRSP1, SDRSP2, SDRSP3,$/;"	e	enum:__anon34a54b7d0103	file:
SDRSP1	resource/sdcard/nemu.c	/^#define SDRSP1 /;"	d	file:
SDRSP1	src/device/sdcard.c	/^  SDRSP0, SDRSP1, SDRSP2, SDRSP3,$/;"	e	enum:__anon34a54b7d0103	file:
SDRSP2	resource/sdcard/nemu.c	/^#define SDRSP2 /;"	d	file:
SDRSP2	src/device/sdcard.c	/^  SDRSP0, SDRSP1, SDRSP2, SDRSP3,$/;"	e	enum:__anon34a54b7d0103	file:
SDRSP3	resource/sdcard/nemu.c	/^#define SDRSP3 /;"	d	file:
SDRSP3	src/device/sdcard.c	/^  SDRSP0, SDRSP1, SDRSP2, SDRSP3,$/;"	e	enum:__anon34a54b7d0103	file:
SDTOUT	resource/sdcard/nemu.c	/^#define SDTOUT /;"	d	file:
SDTOUT	src/device/sdcard.c	/^  SDCMD, SDARG, SDTOUT, SDCDIV,$/;"	e	enum:__anon34a54b7d0103	file:
SDVDD	resource/sdcard/nemu.c	/^#define SDVDD /;"	d	file:
SDVDD	src/device/sdcard.c	/^  SDVDD, SDEDM, SDHCFG, SDHBCT,$/;"	e	enum:__anon34a54b7d0103	file:
SERIAL_INPUT_FIFO	src/device/Kconfig	/^config SERIAL_INPUT_FIFO$/;"	c
SERIAL_MMIO	src/device/Kconfig	/^config SERIAL_MMIO$/;"	c
SERIAL_PORT	src/device/Kconfig	/^config SERIAL_PORT$/;"	c
SEXT	include/macro.h	/^#define SEXT(/;"	d
SHARE	src/filelist.mk	/^SHARE = $(if $(CONFIG_TARGET_SHARE),1,0)$/;"	m
SHARE	tools/kvm-diff/Makefile	/^SHARE = 1$/;"	m
SHARE	tools/qemu-diff/Makefile	/^SHARE = 1$/;"	m
SIZE_MAX	tools/kconfig/build/lexer.lex.c	/^#define SIZE_MAX /;"	d	file:
SO	scripts/build.mk	/^SO = -so$/;"	m
SPIKE	tools/spike-diff/Makefile	/^SPIKE = $(REPO_BUILD_PATH)\/spike$/;"	m
SRCS	Makefile	/^SRCS = $(filter-out $(SRCS-BLACKLIST-y),$(SRCS-y))$/;"	m
SRCS	tools/fixdep/Makefile	/^SRCS = fixdep.c$/;"	m
SRCS	tools/gen-expr/Makefile	/^SRCS = gen-expr.c$/;"	m
SRCS	tools/kvm-diff/Makefile	/^SRCS  = $(shell find src\/ -name "*.c")$/;"	m
SRCS	tools/qemu-diff/Makefile	/^SRCS  = $(shell find src\/ -name "*.c")$/;"	m
SRCS	tools/spike-diff/Makefile	/^SRCS = difftest.cc$/;"	m
SRCTREE	tools/kconfig/lkc.h	/^#define SRCTREE /;"	d
START_STRSIZE	tools/kconfig/build/lexer.lex.c	/^#define START_STRSIZE	/;"	d	file:
STATE_IDLE	tools/kvm-diff/src/kvm.c	/^  STATE_IDLE,      \/\/ if encounter an int instruction, then set watchpoint$/;"	e	enum:__anonf66cb03e0103	file:
STATE_INT_INST	tools/kvm-diff/src/kvm.c	/^  STATE_INT_INST, \/\/ if hit the watchpoint, then delete the watchpoint$/;"	e	enum:__anonf66cb03e0103	file:
STATE_IRET_INST	tools/kvm-diff/src/kvm.c	/^  STATE_IRET_INST,\/\/ if hit the watchpoint, then delete the watchpoint$/;"	e	enum:__anonf66cb03e0103	file:
STRING	tools/kconfig/build/lexer.lex.c	/^#define STRING /;"	d	file:
STRLEN	include/macro.h	/^#define STRLEN(/;"	d
SYMBOL_ALLNOCONFIG_Y	tools/kconfig/expr.h	/^#define SYMBOL_ALLNOCONFIG_Y /;"	d
SYMBOL_CHANGED	tools/kconfig/expr.h	/^#define SYMBOL_CHANGED /;"	d
SYMBOL_CHECK	tools/kconfig/expr.h	/^#define SYMBOL_CHECK /;"	d
SYMBOL_CHECKED	tools/kconfig/expr.h	/^#define SYMBOL_CHECKED /;"	d
SYMBOL_CHOICE	tools/kconfig/expr.h	/^#define SYMBOL_CHOICE /;"	d
SYMBOL_CHOICEVAL	tools/kconfig/expr.h	/^#define SYMBOL_CHOICEVAL /;"	d
SYMBOL_CONST	tools/kconfig/expr.h	/^#define SYMBOL_CONST /;"	d
SYMBOL_DEF	tools/kconfig/expr.h	/^#define SYMBOL_DEF /;"	d
SYMBOL_DEF3	tools/kconfig/expr.h	/^#define SYMBOL_DEF3 /;"	d
SYMBOL_DEF4	tools/kconfig/expr.h	/^#define SYMBOL_DEF4 /;"	d
SYMBOL_DEF_AUTO	tools/kconfig/expr.h	/^#define SYMBOL_DEF_AUTO /;"	d
SYMBOL_DEF_USER	tools/kconfig/expr.h	/^#define SYMBOL_DEF_USER /;"	d
SYMBOL_HASHSIZE	tools/kconfig/expr.h	/^#define SYMBOL_HASHSIZE	/;"	d
SYMBOL_MAXLENGTH	tools/kconfig/expr.h	/^#define SYMBOL_MAXLENGTH	/;"	d
SYMBOL_NEED_SET_CHOICE_VALUES	tools/kconfig/expr.h	/^#define SYMBOL_NEED_SET_CHOICE_VALUES /;"	d
SYMBOL_NO_WRITE	tools/kconfig/expr.h	/^#define SYMBOL_NO_WRITE /;"	d
SYMBOL_OPTIONAL	tools/kconfig/expr.h	/^#define SYMBOL_OPTIONAL /;"	d
SYMBOL_VALID	tools/kconfig/expr.h	/^#define SYMBOL_VALID /;"	d
SYMBOL_WARNED	tools/kconfig/expr.h	/^#define SYMBOL_WARNED /;"	d
SYMBOL_WRITE	tools/kconfig/expr.h	/^#define SYMBOL_WRITE /;"	d
SYMBOL_WRITTEN	tools/kconfig/expr.h	/^#define SYMBOL_WRITTEN /;"	d
S_BOOLEAN	tools/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING$/;"	e	enum:symbol_type
S_DEF_AUTO	tools/kconfig/expr.h	/^	S_DEF_AUTO,		\/* values read from auto.conf *\/$/;"	e	enum:__anon00b8194a0103
S_DEF_COUNT	tools/kconfig/expr.h	/^	S_DEF_COUNT$/;"	e	enum:__anon00b8194a0103
S_DEF_DEF3	tools/kconfig/expr.h	/^	S_DEF_DEF3,		\/* Reserved for UI usage *\/$/;"	e	enum:__anon00b8194a0103
S_DEF_DEF4	tools/kconfig/expr.h	/^	S_DEF_DEF4,		\/* Reserved for UI usage *\/$/;"	e	enum:__anon00b8194a0103
S_DEF_USER	tools/kconfig/expr.h	/^	S_DEF_USER,		\/* main user value *\/$/;"	e	enum:__anon00b8194a0103
S_HEX	tools/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING$/;"	e	enum:symbol_type
S_INT	tools/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING$/;"	e	enum:symbol_type
S_STRING	tools/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING$/;"	e	enum:symbol_type
S_TRISTATE	tools/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING$/;"	e	enum:symbol_type
S_UNKNOWN	tools/kconfig/expr.h	/^	S_UNKNOWN, S_BOOLEAN, S_TRISTATE, S_INT, S_HEX, S_STRING$/;"	e	enum:symbol_type
TAB	tools/kconfig/lxdialog/dialog.h	/^#define TAB /;"	d
TARGET_AM	Kconfig	/^config TARGET_AM$/;"	c	choice:choice8014d1a60504
TARGET_NATIVE_ELF	Kconfig	/^config TARGET_NATIVE_ELF$/;"	c	choice:choice8014d1a60504
TARGET_SHARE	Kconfig	/^config TARGET_SHARE$/;"	c	choice:choice8014d1a60504
TEXTBOX_HEIGTH_MIN	tools/kconfig/lxdialog/dialog.h	/^#define TEXTBOX_HEIGTH_MIN /;"	d
TEXTBOX_WIDTH_MIN	tools/kconfig/lxdialog/dialog.h	/^#define TEXTBOX_WIDTH_MIN /;"	d
TIMER_CLOCK_GETTIME	Kconfig	/^config TIMER_CLOCK_GETTIME$/;"	c	choice:Miscellaneous""choice8014d1a60904
TIMER_GETTIMEOFDAY	Kconfig	/^config TIMER_GETTIMEOFDAY$/;"	c	choice:Miscellaneous""choice8014d1a60904
TIMER_HZ	include/device/alarm.h	/^#define TIMER_HZ /;"	d
TK_AND	src/monitor/sdb/expr.c	/^  TK_AND,$/;"	e	enum:__anonfd0e76cb0103	file:
TK_BK	src/monitor/sdb/expr.c	/^  TK_BK,$/;"	e	enum:__anonfd0e76cb0103	file:
TK_EQ	src/monitor/sdb/expr.c	/^  TK_NOTYPE = 256, TK_EQ,$/;"	e	enum:__anonfd0e76cb0103	file:
TK_NEQ	src/monitor/sdb/expr.c	/^  TK_NEQ,$/;"	e	enum:__anonfd0e76cb0103	file:
TK_NOTYPE	src/monitor/sdb/expr.c	/^  TK_NOTYPE = 256, TK_EQ,$/;"	e	enum:__anonfd0e76cb0103	file:
TK_NUM	src/monitor/sdb/expr.c	/^  TK_NUM,$/;"	e	enum:__anonfd0e76cb0103	file:
TK_REG	src/monitor/sdb/expr.c	/^  TK_REG,$/;"	e	enum:__anonfd0e76cb0103	file:
TK_XNUM	src/monitor/sdb/expr.c	/^  TK_XNUM,$/;"	e	enum:__anonfd0e76cb0103	file:
TODO	include/debug.h	/^#define TODO(/;"	d
TR	tools/kconfig/lxdialog/dialog.h	/^#define TR(/;"	d
TRACE	Kconfig	/^config TRACE$/;"	c	menu:Testing and Debugging
TRACE_END	Kconfig	/^config TRACE_END$/;"	c	menu:Testing and Debugging
TRACE_START	Kconfig	/^config TRACE_START$/;"	c	menu:Testing and Debugging
TYPE_B	src/isa/riscv64/inst.c	/^  TYPE_B$/;"	e	enum:__anon9ad9ae570103	file:
TYPE_I	src/isa/riscv32/inst.c	/^  TYPE_I, TYPE_U, TYPE_S,$/;"	e	enum:__anon64e0b1920103	file:
TYPE_I	src/isa/riscv64/inst.c	/^  TYPE_I, TYPE_U, TYPE_S,$/;"	e	enum:__anon9ad9ae570103	file:
TYPE_J	src/isa/riscv64/inst.c	/^  TYPE_N, TYPE_J,TYPE_R ,$/;"	e	enum:__anon9ad9ae570103	file:
TYPE_N	src/isa/riscv32/inst.c	/^  TYPE_N, \/\/ none$/;"	e	enum:__anon64e0b1920103	file:
TYPE_N	src/isa/riscv64/inst.c	/^  TYPE_N, TYPE_J,TYPE_R ,$/;"	e	enum:__anon9ad9ae570103	file:
TYPE_R	src/isa/riscv64/inst.c	/^  TYPE_N, TYPE_J,TYPE_R ,$/;"	e	enum:__anon9ad9ae570103	file:
TYPE_S	src/isa/riscv32/inst.c	/^  TYPE_I, TYPE_U, TYPE_S,$/;"	e	enum:__anon64e0b1920103	file:
TYPE_S	src/isa/riscv64/inst.c	/^  TYPE_I, TYPE_U, TYPE_S,$/;"	e	enum:__anon9ad9ae570103	file:
TYPE_U	src/isa/riscv32/inst.c	/^  TYPE_I, TYPE_U, TYPE_S,$/;"	e	enum:__anon64e0b1920103	file:
TYPE_U	src/isa/riscv64/inst.c	/^  TYPE_I, TYPE_U, TYPE_S,$/;"	e	enum:__anon9ad9ae570103	file:
T_ALLNOCONFIG_Y	tools/kconfig/build/parser.tab.h	/^    T_ALLNOCONFIG_Y = 261,         \/* T_ALLNOCONFIG_Y  *\/$/;"	e	enum:yytokentype
T_AND	tools/kconfig/build/parser.tab.h	/^    T_AND = 300,                   \/* T_AND  *\/$/;"	e	enum:yytokentype
T_ASSIGN_VAL	tools/kconfig/build/parser.tab.h	/^    T_ASSIGN_VAL = 298,            \/* T_ASSIGN_VAL  *\/$/;"	e	enum:yytokentype
T_BOOL	tools/kconfig/build/parser.tab.h	/^    T_BOOL = 262,                  \/* T_BOOL  *\/$/;"	e	enum:yytokentype
T_CHOICE	tools/kconfig/build/parser.tab.h	/^    T_CHOICE = 263,                \/* T_CHOICE  *\/$/;"	e	enum:yytokentype
T_CLOSE_PAREN	tools/kconfig/build/parser.tab.h	/^    T_CLOSE_PAREN = 264,           \/* T_CLOSE_PAREN  *\/$/;"	e	enum:yytokentype
T_COLON_EQUAL	tools/kconfig/build/parser.tab.h	/^    T_COLON_EQUAL = 265,           \/* T_COLON_EQUAL  *\/$/;"	e	enum:yytokentype
T_COMMENT	tools/kconfig/build/parser.tab.h	/^    T_COMMENT = 266,               \/* T_COMMENT  *\/$/;"	e	enum:yytokentype
T_CONFIG	tools/kconfig/build/parser.tab.h	/^    T_CONFIG = 267,                \/* T_CONFIG  *\/$/;"	e	enum:yytokentype
T_DEFAULT	tools/kconfig/build/parser.tab.h	/^    T_DEFAULT = 268,               \/* T_DEFAULT  *\/$/;"	e	enum:yytokentype
T_DEFCONFIG_LIST	tools/kconfig/build/parser.tab.h	/^    T_DEFCONFIG_LIST = 269,        \/* T_DEFCONFIG_LIST  *\/$/;"	e	enum:yytokentype
T_DEF_BOOL	tools/kconfig/build/parser.tab.h	/^    T_DEF_BOOL = 270,              \/* T_DEF_BOOL  *\/$/;"	e	enum:yytokentype
T_DEF_TRISTATE	tools/kconfig/build/parser.tab.h	/^    T_DEF_TRISTATE = 271,          \/* T_DEF_TRISTATE  *\/$/;"	e	enum:yytokentype
T_DEPENDS	tools/kconfig/build/parser.tab.h	/^    T_DEPENDS = 272,               \/* T_DEPENDS  *\/$/;"	e	enum:yytokentype
T_ENDCHOICE	tools/kconfig/build/parser.tab.h	/^    T_ENDCHOICE = 273,             \/* T_ENDCHOICE  *\/$/;"	e	enum:yytokentype
T_ENDIF	tools/kconfig/build/parser.tab.h	/^    T_ENDIF = 274,                 \/* T_ENDIF  *\/$/;"	e	enum:yytokentype
T_ENDMENU	tools/kconfig/build/parser.tab.h	/^    T_ENDMENU = 275,               \/* T_ENDMENU  *\/$/;"	e	enum:yytokentype
T_EOL	tools/kconfig/build/parser.tab.h	/^    T_EOL = 297,                   \/* T_EOL  *\/$/;"	e	enum:yytokentype
T_EQUAL	tools/kconfig/build/parser.tab.h	/^    T_EQUAL = 301,                 \/* T_EQUAL  *\/$/;"	e	enum:yytokentype
T_GREATER	tools/kconfig/build/parser.tab.h	/^    T_GREATER = 305,               \/* T_GREATER  *\/$/;"	e	enum:yytokentype
T_GREATER_EQUAL	tools/kconfig/build/parser.tab.h	/^    T_GREATER_EQUAL = 306,         \/* T_GREATER_EQUAL  *\/$/;"	e	enum:yytokentype
T_HELP	tools/kconfig/build/parser.tab.h	/^    T_HELP = 276,                  \/* T_HELP  *\/$/;"	e	enum:yytokentype
T_HELPTEXT	tools/kconfig/build/parser.tab.h	/^    T_HELPTEXT = 258,              \/* T_HELPTEXT  *\/$/;"	e	enum:yytokentype
T_HEX	tools/kconfig/build/parser.tab.h	/^    T_HEX = 277,                   \/* T_HEX  *\/$/;"	e	enum:yytokentype
T_IF	tools/kconfig/build/parser.tab.h	/^    T_IF = 278,                    \/* T_IF  *\/$/;"	e	enum:yytokentype
T_IMPLY	tools/kconfig/build/parser.tab.h	/^    T_IMPLY = 279,                 \/* T_IMPLY  *\/$/;"	e	enum:yytokentype
T_INT	tools/kconfig/build/parser.tab.h	/^    T_INT = 280,                   \/* T_INT  *\/$/;"	e	enum:yytokentype
T_LESS	tools/kconfig/build/parser.tab.h	/^    T_LESS = 303,                  \/* T_LESS  *\/$/;"	e	enum:yytokentype
T_LESS_EQUAL	tools/kconfig/build/parser.tab.h	/^    T_LESS_EQUAL = 304,            \/* T_LESS_EQUAL  *\/$/;"	e	enum:yytokentype
T_MAINMENU	tools/kconfig/build/parser.tab.h	/^    T_MAINMENU = 281,              \/* T_MAINMENU  *\/$/;"	e	enum:yytokentype
T_MENU	tools/kconfig/build/parser.tab.h	/^    T_MENU = 282,                  \/* T_MENU  *\/$/;"	e	enum:yytokentype
T_MENUCONFIG	tools/kconfig/build/parser.tab.h	/^    T_MENUCONFIG = 283,            \/* T_MENUCONFIG  *\/$/;"	e	enum:yytokentype
T_MODULES	tools/kconfig/build/parser.tab.h	/^    T_MODULES = 284,               \/* T_MODULES  *\/$/;"	e	enum:yytokentype
T_NOT	tools/kconfig/build/parser.tab.h	/^    T_NOT = 307                    \/* T_NOT  *\/$/;"	e	enum:yytokentype
T_ON	tools/kconfig/build/parser.tab.h	/^    T_ON = 285,                    \/* T_ON  *\/$/;"	e	enum:yytokentype
T_OPEN_PAREN	tools/kconfig/build/parser.tab.h	/^    T_OPEN_PAREN = 286,            \/* T_OPEN_PAREN  *\/$/;"	e	enum:yytokentype
T_OPTION	tools/kconfig/build/parser.tab.h	/^    T_OPTION = 287,                \/* T_OPTION  *\/$/;"	e	enum:yytokentype
T_OPTIONAL	tools/kconfig/build/parser.tab.h	/^    T_OPTIONAL = 288,              \/* T_OPTIONAL  *\/$/;"	e	enum:yytokentype
T_OR	tools/kconfig/build/parser.tab.h	/^    T_OR = 299,                    \/* T_OR  *\/$/;"	e	enum:yytokentype
T_PLUS_EQUAL	tools/kconfig/build/parser.tab.h	/^    T_PLUS_EQUAL = 289,            \/* T_PLUS_EQUAL  *\/$/;"	e	enum:yytokentype
T_PROMPT	tools/kconfig/build/parser.tab.h	/^    T_PROMPT = 290,                \/* T_PROMPT  *\/$/;"	e	enum:yytokentype
T_RANGE	tools/kconfig/build/parser.tab.h	/^    T_RANGE = 291,                 \/* T_RANGE  *\/$/;"	e	enum:yytokentype
T_SELECT	tools/kconfig/build/parser.tab.h	/^    T_SELECT = 292,                \/* T_SELECT  *\/$/;"	e	enum:yytokentype
T_SOURCE	tools/kconfig/build/parser.tab.h	/^    T_SOURCE = 293,                \/* T_SOURCE  *\/$/;"	e	enum:yytokentype
T_STRING	tools/kconfig/build/parser.tab.h	/^    T_STRING = 294,                \/* T_STRING  *\/$/;"	e	enum:yytokentype
T_TRISTATE	tools/kconfig/build/parser.tab.h	/^    T_TRISTATE = 295,              \/* T_TRISTATE  *\/$/;"	e	enum:yytokentype
T_UNEQUAL	tools/kconfig/build/parser.tab.h	/^    T_UNEQUAL = 302,               \/* T_UNEQUAL  *\/$/;"	e	enum:yytokentype
T_VISIBLE	tools/kconfig/build/parser.tab.h	/^    T_VISIBLE = 296,               \/* T_VISIBLE  *\/$/;"	e	enum:yytokentype
T_WORD	tools/kconfig/build/parser.tab.h	/^    T_WORD = 259,                  \/* T_WORD  *\/$/;"	e	enum:yytokentype
T_WORD_QUOTE	tools/kconfig/build/parser.tab.h	/^    T_WORD_QUOTE = 260,            \/* T_WORD_QUOTE  *\/$/;"	e	enum:yytokentype
Testing and Debugging	Kconfig	/^menu "Testing and Debugging"$/;"	m
Token	src/monitor/sdb/expr.c	/^} Token;$/;"	t	typeref:struct:token	file:
UINT16_MAX	tools/kconfig/build/lexer.lex.c	/^#define UINT16_MAX /;"	d	file:
UINT32_MAX	tools/kconfig/build/lexer.lex.c	/^#define UINT32_MAX /;"	d	file:
UINT8_MAX	tools/kconfig/build/lexer.lex.c	/^#define UINT8_MAX /;"	d	file:
UINT_LEAST16_MAX	tools/kconfig/build/parser.tab.c	/^# define UINT_LEAST16_MAX /;"	d	file:
UINT_LEAST8_MAX	tools/kconfig/build/parser.tab.c	/^# define UINT_LEAST8_MAX /;"	d	file:
VAR_APPEND	tools/kconfig/lkc_proto.h	/^	VAR_APPEND,$/;"	e	enum:variable_flavor
VAR_RECURSIVE	tools/kconfig/lkc_proto.h	/^	VAR_RECURSIVE,$/;"	e	enum:variable_flavor
VAR_SIMPLE	tools/kconfig/lkc_proto.h	/^	VAR_SIMPLE,$/;"	e	enum:variable_flavor
VGA_CTL_MMIO	src/device/Kconfig	/^config VGA_CTL_MMIO$/;"	c
VGA_CTL_PORT	src/device/Kconfig	/^config VGA_CTL_PORT$/;"	c
VGA_SHOW_SCREEN	src/device/Kconfig	/^config VGA_SHOW_SCREEN$/;"	c
VGA_SIZE_400x300	src/device/Kconfig	/^config VGA_SIZE_400x300$/;"	c	choice:choice84acbddc0104
VGA_SIZE_800x600	src/device/Kconfig	/^config VGA_SIZE_800x600$/;"	c	choice:choice84acbddc0104
WATCHPOINT	Kconfig	/^config WATCHPOINT$/;"	c	choice:choice8014d1a60204
WINDOW_HEIGTH_MIN	tools/kconfig/lxdialog/dialog.h	/^#define WINDOW_HEIGTH_MIN /;"	d
WINDOW_WIDTH_MIN	tools/kconfig/lxdialog/dialog.h	/^#define WINDOW_WIDTH_MIN /;"	d
WORK_DIR	scripts/build.mk	/^WORK_DIR  = $(shell pwd)$/;"	m
WP	src/monitor/sdb/sdb.c	/^} WP;$/;"	t	typeref:struct:watchpoint	file:
WP	src/monitor/sdb/watchpoint.c	/^} WP;$/;"	t	typeref:struct:watchpoint	file:
YESNO_HEIGTH_MIN	tools/kconfig/lxdialog/dialog.h	/^#define YESNO_HEIGTH_MIN /;"	d
YESNO_WIDTH_MIN	tools/kconfig/lxdialog/dialog.h	/^#define YESNO_WIDTH_MIN /;"	d
YYABORT	tools/kconfig/build/parser.tab.c	/^#define YYABORT /;"	d	file:
YYACCEPT	tools/kconfig/build/parser.tab.c	/^#define YYACCEPT /;"	d	file:
YYBACKUP	tools/kconfig/build/parser.tab.c	/^#define YYBACKUP(/;"	d	file:
YYBISON	tools/kconfig/build/parser.tab.c	/^#define YYBISON /;"	d	file:
YYBISON_VERSION	tools/kconfig/build/parser.tab.c	/^#define YYBISON_VERSION /;"	d	file:
YYCOPY	tools/kconfig/build/parser.tab.c	/^#   define YYCOPY(/;"	d	file:
YYCOPY_NEEDED	tools/kconfig/build/parser.tab.c	/^# define YYCOPY_NEEDED /;"	d	file:
YYDEBUG	tools/kconfig/build/parser.tab.h	/^# define YYDEBUG /;"	d
YYDPRINTF	tools/kconfig/build/parser.tab.c	/^# define YYDPRINTF(/;"	d	file:
YYEMPTY	tools/kconfig/build/parser.tab.h	/^    YYEMPTY = -2,$/;"	e	enum:yytokentype
YYENOMEM	tools/kconfig/build/parser.tab.c	/^enum { YYENOMEM = -2 };$/;"	e	enum:__anon39e4f0b70103	file:
YYEOF	tools/kconfig/build/parser.tab.h	/^    YYEOF = 0,                     \/* "end of file"  *\/$/;"	e	enum:yytokentype
YYERRCODE	tools/kconfig/build/parser.tab.c	/^#define YYERRCODE /;"	d	file:
YYERROR	tools/kconfig/build/parser.tab.c	/^#define YYERROR /;"	d	file:
YYFINAL	tools/kconfig/build/parser.tab.c	/^#define YYFINAL /;"	d	file:
YYFPRINTF	tools/kconfig/build/parser.tab.c	/^#  define YYFPRINTF /;"	d	file:
YYFREE	tools/kconfig/build/parser.tab.c	/^#   define YYFREE /;"	d	file:
YYINITDEPTH	tools/kconfig/build/parser.tab.c	/^# define YYINITDEPTH /;"	d	file:
YYLAST	tools/kconfig/build/parser.tab.c	/^#define YYLAST /;"	d	file:
YYMALLOC	tools/kconfig/build/parser.tab.c	/^#   define YYMALLOC /;"	d	file:
YYMAXDEPTH	tools/kconfig/build/parser.tab.c	/^# define YYMAXDEPTH /;"	d	file:
YYMAXUTOK	tools/kconfig/build/parser.tab.c	/^#define YYMAXUTOK /;"	d	file:
YYNNTS	tools/kconfig/build/parser.tab.c	/^#define YYNNTS /;"	d	file:
YYNOMEM	tools/kconfig/build/parser.tab.c	/^#define YYNOMEM /;"	d	file:
YYNRULES	tools/kconfig/build/parser.tab.c	/^#define YYNRULES /;"	d	file:
YYNSTATES	tools/kconfig/build/parser.tab.c	/^#define YYNSTATES /;"	d	file:
YYNTOKENS	tools/kconfig/build/parser.tab.c	/^#define YYNTOKENS /;"	d	file:
YYPACT_NINF	tools/kconfig/build/parser.tab.c	/^#define YYPACT_NINF /;"	d	file:
YYPOPSTACK	tools/kconfig/build/parser.tab.c	/^#define YYPOPSTACK(/;"	d	file:
YYPTRDIFF_MAXIMUM	tools/kconfig/build/parser.tab.c	/^#  define YYPTRDIFF_MAXIMUM /;"	d	file:
YYPTRDIFF_T	tools/kconfig/build/parser.tab.c	/^#  define YYPTRDIFF_T /;"	d	file:
YYPULL	tools/kconfig/build/parser.tab.c	/^#define YYPULL /;"	d	file:
YYPURE	tools/kconfig/build/parser.tab.c	/^#define YYPURE /;"	d	file:
YYPUSH	tools/kconfig/build/parser.tab.c	/^#define YYPUSH /;"	d	file:
YYRECOVERING	tools/kconfig/build/parser.tab.c	/^#define YYRECOVERING(/;"	d	file:
YYSIZEOF	tools/kconfig/build/parser.tab.c	/^#define YYSIZEOF(/;"	d	file:
YYSIZE_MAXIMUM	tools/kconfig/build/parser.tab.c	/^#define YYSIZE_MAXIMUM /;"	d	file:
YYSIZE_T	tools/kconfig/build/parser.tab.c	/^#  define YYSIZE_T /;"	d	file:
YYSKELETON_NAME	tools/kconfig/build/parser.tab.c	/^#define YYSKELETON_NAME /;"	d	file:
YYSTACK_ALLOC	tools/kconfig/build/parser.tab.c	/^#    define YYSTACK_ALLOC /;"	d	file:
YYSTACK_ALLOC	tools/kconfig/build/parser.tab.c	/^#  define YYSTACK_ALLOC /;"	d	file:
YYSTACK_ALLOC_MAXIMUM	tools/kconfig/build/parser.tab.c	/^#   define YYSTACK_ALLOC_MAXIMUM /;"	d	file:
YYSTACK_BYTES	tools/kconfig/build/parser.tab.c	/^# define YYSTACK_BYTES(/;"	d	file:
YYSTACK_FREE	tools/kconfig/build/parser.tab.c	/^#  define YYSTACK_FREE /;"	d	file:
YYSTACK_FREE	tools/kconfig/build/parser.tab.c	/^#  define YYSTACK_FREE(/;"	d	file:
YYSTACK_GAP_MAXIMUM	tools/kconfig/build/parser.tab.c	/^# define YYSTACK_GAP_MAXIMUM /;"	d	file:
YYSTACK_RELOCATE	tools/kconfig/build/parser.tab.c	/^# define YYSTACK_RELOCATE(/;"	d	file:
YYSTATE	tools/kconfig/build/lexer.lex.c	/^#define YYSTATE /;"	d	file:
YYSTYPE	tools/kconfig/build/parser.tab.h	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE
YYSTYPE	tools/kconfig/build/parser.tab.h	/^union YYSTYPE$/;"	u
YYSTYPE_IS_DECLARED	tools/kconfig/build/parser.tab.h	/^# define YYSTYPE_IS_DECLARED /;"	d
YYSTYPE_IS_TRIVIAL	tools/kconfig/build/parser.tab.h	/^# define YYSTYPE_IS_TRIVIAL /;"	d
YYSYMBOL_T_ALLNOCONFIG_Y	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_ALLNOCONFIG_Y = 6,            \/* T_ALLNOCONFIG_Y  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_AND	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_AND = 45,                     \/* T_AND  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_ASSIGN_VAL	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_ASSIGN_VAL = 43,              \/* T_ASSIGN_VAL  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_BOOL	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_BOOL = 7,                     \/* T_BOOL  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_CHOICE	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_CHOICE = 8,                   \/* T_CHOICE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_CLOSE_PAREN	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_CLOSE_PAREN = 9,              \/* T_CLOSE_PAREN  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_COLON_EQUAL	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_COLON_EQUAL = 10,             \/* T_COLON_EQUAL  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_COMMENT	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_COMMENT = 11,                 \/* T_COMMENT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_CONFIG	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_CONFIG = 12,                  \/* T_CONFIG  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_DEFAULT	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_DEFAULT = 13,                 \/* T_DEFAULT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_DEFCONFIG_LIST	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_DEFCONFIG_LIST = 14,          \/* T_DEFCONFIG_LIST  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_DEF_BOOL	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_DEF_BOOL = 15,                \/* T_DEF_BOOL  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_DEF_TRISTATE	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_DEF_TRISTATE = 16,            \/* T_DEF_TRISTATE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_DEPENDS	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_DEPENDS = 17,                 \/* T_DEPENDS  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_ENDCHOICE	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_ENDCHOICE = 18,               \/* T_ENDCHOICE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_ENDIF	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_ENDIF = 19,                   \/* T_ENDIF  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_ENDMENU	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_ENDMENU = 20,                 \/* T_ENDMENU  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_EOL	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_EOL = 42,                     \/* T_EOL  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_EQUAL	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_EQUAL = 46,                   \/* T_EQUAL  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_GREATER	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_GREATER = 50,                 \/* T_GREATER  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_GREATER_EQUAL	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_GREATER_EQUAL = 51,           \/* T_GREATER_EQUAL  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_HELP	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_HELP = 21,                    \/* T_HELP  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_HELPTEXT	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_HELPTEXT = 3,                 \/* T_HELPTEXT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_HEX	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_HEX = 22,                     \/* T_HEX  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_IF	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_IF = 23,                      \/* T_IF  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_IMPLY	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_IMPLY = 24,                   \/* T_IMPLY  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_INT	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_INT = 25,                     \/* T_INT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_LESS	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_LESS = 48,                    \/* T_LESS  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_LESS_EQUAL	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_LESS_EQUAL = 49,              \/* T_LESS_EQUAL  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_MAINMENU	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_MAINMENU = 26,                \/* T_MAINMENU  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_MENU	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_MENU = 27,                    \/* T_MENU  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_MENUCONFIG	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_MENUCONFIG = 28,              \/* T_MENUCONFIG  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_MODULES	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_MODULES = 29,                 \/* T_MODULES  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_NOT	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_NOT = 52,                     \/* T_NOT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_ON	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_ON = 30,                      \/* T_ON  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_OPEN_PAREN	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_OPEN_PAREN = 31,              \/* T_OPEN_PAREN  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_OPTION	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_OPTION = 32,                  \/* T_OPTION  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_OPTIONAL	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_OPTIONAL = 33,                \/* T_OPTIONAL  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_OR	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_OR = 44,                      \/* T_OR  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_PLUS_EQUAL	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_PLUS_EQUAL = 34,              \/* T_PLUS_EQUAL  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_PROMPT	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_PROMPT = 35,                  \/* T_PROMPT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_RANGE	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_RANGE = 36,                   \/* T_RANGE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_SELECT	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_SELECT = 37,                  \/* T_SELECT  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_SOURCE	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_SOURCE = 38,                  \/* T_SOURCE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_STRING	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_STRING = 39,                  \/* T_STRING  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_TRISTATE	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_TRISTATE = 40,                \/* T_TRISTATE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_UNEQUAL	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_UNEQUAL = 47,                 \/* T_UNEQUAL  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_VISIBLE	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_VISIBLE = 41,                 \/* T_VISIBLE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_WORD	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_WORD = 4,                     \/* T_WORD  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_T_WORD_QUOTE	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_T_WORD_QUOTE = 5,               \/* T_WORD_QUOTE  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYACCEPT	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_YYACCEPT = 53,                  \/* $accept  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYEMPTY	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_YYEMPTY = -2,$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYEOF	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_YYEOF = 0,                      \/* "end of file"  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYUNDEF	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_YYUNDEF = 2,                    \/* "invalid token"  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_YYerror	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_YYerror = 1,                    \/* error  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_assign_op	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_assign_op = 98,                 \/* assign_op  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_assign_val	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_assign_val = 99                 \/* assign_val  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_assignment_stmt	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_assignment_stmt = 97,           \/* assignment_stmt  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_choice	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_choice = 64,                    \/* choice  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_choice_end	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_choice_end = 66,                \/* choice_end  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_choice_entry	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_choice_entry = 65,              \/* choice_entry  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_choice_option	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_choice_option = 69,             \/* choice_option  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_choice_option_list	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_choice_option_list = 68,        \/* choice_option_list  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_choice_stmt	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_choice_stmt = 67,               \/* choice_stmt  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_comment	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_comment = 83,                   \/* comment  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_comment_option_list	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_comment_option_list = 85,       \/* comment_option_list  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_comment_stmt	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_comment_stmt = 84,              \/* comment_stmt  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_config_entry_start	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_config_entry_start = 58,        \/* config_entry_start  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_config_option	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_config_option = 63,             \/* config_option  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_config_option_list	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_config_option_list = 62,        \/* config_option_list  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_config_stmt	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_config_stmt = 59,               \/* config_stmt  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_default	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_default = 72,                   \/* default  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_depends	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_depends = 88,                   \/* depends  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_end	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_end = 91,                       \/* end  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_expr	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_expr = 93,                      \/* expr  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_help	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_help = 87,                      \/* help  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_help_start	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_help_start = 86,                \/* help_start  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_if_end	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_if_end = 74,                    \/* if_end  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_if_entry	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_if_entry = 73,                  \/* if_entry  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_if_expr	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_if_expr = 92,                   \/* if_expr  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_if_stmt	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_if_stmt = 75,                   \/* if_stmt  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_if_stmt_in_choice	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_if_stmt_in_choice = 76,         \/* if_stmt_in_choice  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_input	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_input = 54,                     \/* input  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_logic_type	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_logic_type = 71,                \/* logic_type  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_mainmenu_stmt	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_mainmenu_stmt = 55,             \/* mainmenu_stmt  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_menu	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_menu = 77,                      \/* menu  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_menu_end	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_menu_end = 79,                  \/* menu_end  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_menu_entry	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_menu_entry = 78,                \/* menu_entry  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_menu_option_list	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_menu_option_list = 81,          \/* menu_option_list  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_menu_stmt	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_menu_stmt = 80,                 \/* menu_stmt  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_menuconfig_entry_start	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_menuconfig_entry_start = 60,    \/* menuconfig_entry_start  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_menuconfig_stmt	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_menuconfig_stmt = 61,           \/* menuconfig_stmt  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_nonconst_symbol	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_nonconst_symbol = 94,           \/* nonconst_symbol  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_prompt_stmt_opt	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_prompt_stmt_opt = 90,           \/* prompt_stmt_opt  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_source_stmt	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_source_stmt = 82,               \/* source_stmt  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_stmt_list	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_stmt_list = 56,                 \/* stmt_list  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_stmt_list_in_choice	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_stmt_list_in_choice = 57,       \/* stmt_list_in_choice  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_symbol	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_symbol = 95,                    \/* symbol  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_type	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_type = 70,                      \/* type  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_visible	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_visible = 89,                   \/* visible  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYSYMBOL_word_opt	tools/kconfig/build/parser.tab.c	/^  YYSYMBOL_word_opt = 96,                  \/* word_opt  *\/$/;"	e	enum:yysymbol_kind_t	file:
YYTABLES_NAME	tools/kconfig/build/lexer.lex.c	/^#define YYTABLES_NAME /;"	d	file:
YYTABLE_NINF	tools/kconfig/build/parser.tab.c	/^#define YYTABLE_NINF /;"	d	file:
YYTOKENTYPE	tools/kconfig/build/parser.tab.h	/^# define YYTOKENTYPE$/;"	d
YYTRANSLATE	tools/kconfig/build/parser.tab.c	/^#define YYTRANSLATE(/;"	d	file:
YYUNDEF	tools/kconfig/build/parser.tab.h	/^    YYUNDEF = 257,                 \/* "invalid token"  *\/$/;"	e	enum:yytokentype
YY_	tools/kconfig/build/parser.tab.c	/^#   define YY_(/;"	d	file:
YY_	tools/kconfig/build/parser.tab.c	/^#  define YY_(/;"	d	file:
YY_ACCESSING_SYMBOL	tools/kconfig/build/parser.tab.c	/^#define YY_ACCESSING_SYMBOL(/;"	d	file:
YY_ASSERT	tools/kconfig/build/parser.tab.c	/^#define YY_ASSERT(/;"	d	file:
YY_ATTRIBUTE_PURE	tools/kconfig/build/parser.tab.c	/^#  define YY_ATTRIBUTE_PURE /;"	d	file:
YY_ATTRIBUTE_PURE	tools/kconfig/build/parser.tab.c	/^#  define YY_ATTRIBUTE_PURE$/;"	d	file:
YY_ATTRIBUTE_UNUSED	tools/kconfig/build/parser.tab.c	/^#  define YY_ATTRIBUTE_UNUSED /;"	d	file:
YY_ATTRIBUTE_UNUSED	tools/kconfig/build/parser.tab.c	/^#  define YY_ATTRIBUTE_UNUSED$/;"	d	file:
YY_AT_BOL	tools/kconfig/build/lexer.lex.c	/^#define YY_AT_BOL(/;"	d	file:
YY_BREAK	tools/kconfig/build/lexer.lex.c	/^#define YY_BREAK /;"	d	file:
YY_BUFFER_EOF_PENDING	tools/kconfig/build/lexer.lex.c	/^#define YY_BUFFER_EOF_PENDING /;"	d	file:
YY_BUFFER_NEW	tools/kconfig/build/lexer.lex.c	/^#define YY_BUFFER_NEW /;"	d	file:
YY_BUFFER_NORMAL	tools/kconfig/build/lexer.lex.c	/^#define YY_BUFFER_NORMAL /;"	d	file:
YY_BUFFER_STATE	tools/kconfig/build/lexer.lex.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state *	file:
YY_BUF_SIZE	tools/kconfig/build/lexer.lex.c	/^#define YY_BUF_SIZE /;"	d	file:
YY_CAST	tools/kconfig/build/parser.tab.c	/^#   define YY_CAST(/;"	d	file:
YY_CHAR	tools/kconfig/build/lexer.lex.c	/^typedef flex_uint8_t YY_CHAR;$/;"	t	typeref:typename:flex_uint8_t	file:
YY_CURRENT_BUFFER	tools/kconfig/build/lexer.lex.c	/^#define YY_CURRENT_BUFFER /;"	d	file:
YY_CURRENT_BUFFER_LVALUE	tools/kconfig/build/lexer.lex.c	/^#define YY_CURRENT_BUFFER_LVALUE /;"	d	file:
YY_DECL	tools/kconfig/build/lexer.lex.c	/^#define YY_DECL	/;"	d	file:
YY_DECL	tools/kconfig/build/lexer.lex.c	/^#define YY_DECL /;"	d	file:
YY_DECL_IS_OURS	tools/kconfig/build/lexer.lex.c	/^#define YY_DECL_IS_OURS /;"	d	file:
YY_DO_BEFORE_ACTION	tools/kconfig/build/lexer.lex.c	/^#define YY_DO_BEFORE_ACTION /;"	d	file:
YY_END_OF_BUFFER	tools/kconfig/build/lexer.lex.c	/^#define YY_END_OF_BUFFER /;"	d	file:
YY_END_OF_BUFFER_CHAR	tools/kconfig/build/lexer.lex.c	/^#define YY_END_OF_BUFFER_CHAR /;"	d	file:
YY_EXIT_FAILURE	tools/kconfig/build/lexer.lex.c	/^#define YY_EXIT_FAILURE /;"	d	file:
YY_EXTRA_TYPE	tools/kconfig/build/lexer.lex.c	/^#define YY_EXTRA_TYPE /;"	d	file:
YY_FATAL_ERROR	tools/kconfig/build/lexer.lex.c	/^#define YY_FATAL_ERROR(/;"	d	file:
YY_FLEX_MAJOR_VERSION	tools/kconfig/build/lexer.lex.c	/^#define YY_FLEX_MAJOR_VERSION /;"	d	file:
YY_FLEX_MINOR_VERSION	tools/kconfig/build/lexer.lex.c	/^#define YY_FLEX_MINOR_VERSION /;"	d	file:
YY_FLEX_SUBMINOR_VERSION	tools/kconfig/build/lexer.lex.c	/^#define YY_FLEX_SUBMINOR_VERSION /;"	d	file:
YY_FLUSH_BUFFER	tools/kconfig/build/lexer.lex.c	/^#define YY_FLUSH_BUFFER /;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	tools/kconfig/build/parser.tab.c	/^#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN /;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	tools/kconfig/build/parser.tab.c	/^# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN$/;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	tools/kconfig/build/parser.tab.c	/^# define YY_IGNORE_MAYBE_UNINITIALIZED_END /;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	tools/kconfig/build/parser.tab.c	/^# define YY_IGNORE_MAYBE_UNINITIALIZED_END$/;"	d	file:
YY_IGNORE_USELESS_CAST_BEGIN	tools/kconfig/build/parser.tab.c	/^# define YY_IGNORE_USELESS_CAST_BEGIN /;"	d	file:
YY_IGNORE_USELESS_CAST_BEGIN	tools/kconfig/build/parser.tab.c	/^# define YY_IGNORE_USELESS_CAST_BEGIN$/;"	d	file:
YY_IGNORE_USELESS_CAST_END	tools/kconfig/build/parser.tab.c	/^# define YY_IGNORE_USELESS_CAST_END /;"	d	file:
YY_IGNORE_USELESS_CAST_END	tools/kconfig/build/parser.tab.c	/^# define YY_IGNORE_USELESS_CAST_END$/;"	d	file:
YY_INITIAL_VALUE	tools/kconfig/build/parser.tab.c	/^# define YY_INITIAL_VALUE(/;"	d	file:
YY_INPUT	tools/kconfig/build/lexer.lex.c	/^#define YY_INPUT(/;"	d	file:
YY_INT_ALIGNED	tools/kconfig/build/lexer.lex.c	/^#define  YY_INT_ALIGNED /;"	d	file:
YY_LESS_LINENO	tools/kconfig/build/lexer.lex.c	/^    #define  YY_LESS_LINENO(/;"	d	file:
YY_LINENO_REWIND_TO	tools/kconfig/build/lexer.lex.c	/^    #define YY_LINENO_REWIND_TO(/;"	d	file:
YY_MORE_ADJ	tools/kconfig/build/lexer.lex.c	/^#define YY_MORE_ADJ /;"	d	file:
YY_NEW_FILE	tools/kconfig/build/lexer.lex.c	/^#define YY_NEW_FILE /;"	d	file:
YY_NULL	tools/kconfig/build/lexer.lex.c	/^#define YY_NULL /;"	d	file:
YY_NULLPTR	tools/kconfig/build/parser.tab.c	/^#    define YY_NULLPTR /;"	d	file:
YY_NULLPTR	tools/kconfig/build/parser.tab.c	/^#   define YY_NULLPTR /;"	d	file:
YY_NUM_RULES	tools/kconfig/build/lexer.lex.c	/^#define YY_NUM_RULES /;"	d	file:
YY_READ_BUF_SIZE	tools/kconfig/build/lexer.lex.c	/^#define YY_READ_BUF_SIZE /;"	d	file:
YY_REDUCE_PRINT	tools/kconfig/build/parser.tab.c	/^# define YY_REDUCE_PRINT(/;"	d	file:
YY_REINTERPRET_CAST	tools/kconfig/build/parser.tab.c	/^#   define YY_REINTERPRET_CAST(/;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	tools/kconfig/build/lexer.lex.c	/^#define YY_RESTORE_YY_MORE_OFFSET$/;"	d	file:
YY_RULE_SETUP	tools/kconfig/build/lexer.lex.c	/^#define YY_RULE_SETUP /;"	d	file:
YY_SC_TO_UI	tools/kconfig/build/lexer.lex.c	/^#define YY_SC_TO_UI(/;"	d	file:
YY_SKIP_YYWRAP	tools/kconfig/build/lexer.lex.c	/^#define YY_SKIP_YYWRAP$/;"	d	file:
YY_STACK_PRINT	tools/kconfig/build/parser.tab.c	/^# define YY_STACK_PRINT(/;"	d	file:
YY_START	tools/kconfig/build/lexer.lex.c	/^#define YY_START /;"	d	file:
YY_START_STACK_INCR	tools/kconfig/build/lexer.lex.c	/^#define YY_START_STACK_INCR /;"	d	file:
YY_STATE_BUF_SIZE	tools/kconfig/build/lexer.lex.c	/^#define YY_STATE_BUF_SIZE /;"	d	file:
YY_STATE_EOF	tools/kconfig/build/lexer.lex.c	/^#define YY_STATE_EOF(/;"	d	file:
YY_STDINT_H	tools/kconfig/build/parser.tab.c	/^#  define YY_STDINT_H$/;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	tools/kconfig/build/lexer.lex.c	/^#define YY_STRUCT_YY_BUFFER_STATE$/;"	d	file:
YY_SYMBOL_PRINT	tools/kconfig/build/parser.tab.c	/^# define YY_SYMBOL_PRINT(/;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	tools/kconfig/build/lexer.lex.c	/^#define YY_TYPEDEF_YY_BUFFER_STATE$/;"	d	file:
YY_TYPEDEF_YY_SIZE_T	tools/kconfig/build/lexer.lex.c	/^#define YY_TYPEDEF_YY_SIZE_T$/;"	d	file:
YY_USE	tools/kconfig/build/parser.tab.c	/^# define YY_USE(/;"	d	file:
YY_USER_ACTION	tools/kconfig/build/lexer.lex.c	/^#define YY_USER_ACTION$/;"	d	file:
YY_YY_BUILD_PARSER_TAB_H_INCLUDED	tools/kconfig/build/parser.tab.h	/^# define YY_YY_BUILD_PARSER_TAB_H_INCLUDED$/;"	d
YYerror	tools/kconfig/build/parser.tab.h	/^    YYerror = 256,                 \/* error  *\/$/;"	e	enum:yytokentype
_KEYS	src/device/keyboard.c	/^#define _KEYS(/;"	d	file:
_KEY_NAME	src/device/keyboard.c	/^#define _KEY_NAME(/;"	d	file:
_KEY_NONE	src/device/keyboard.c	/^  _KEY_NONE = 0,$/;"	e	enum:__anondae01fbd0103	file:
_KEY_NONE	src/device/keyboard.c	/^#define _KEY_NONE /;"	d	file:
_Log	include/utils.h	/^#define _Log(/;"	d
__COMMON_H__	include/common.h	/^#define __COMMON_H__$/;"	d
__COMMON_H__	tools/qemu-diff/include/common.h	/^#define __COMMON_H__$/;"	d
__CPU_CPU_H__	include/cpu/cpu.h	/^#define __CPU_CPU_H__$/;"	d
__CPU_DECODE_H__	include/cpu/decode.h	/^#define __CPU_DECODE_H__$/;"	d
__CPU_DIFFTEST_H__	include/cpu/difftest.h	/^#define __CPU_DIFFTEST_H__$/;"	d
__DEBUG_H__	include/debug.h	/^#define __DEBUG_H__$/;"	d
__DEVICE_ALARM_H__	include/device/alarm.h	/^#define __DEVICE_ALARM_H__$/;"	d
__DEVICE_MAP_H__	include/device/map.h	/^#define __DEVICE_MAP_H__$/;"	d
__DEVICE_MMIO_H__	include/device/mmio.h	/^#define __DEVICE_MMIO_H__$/;"	d
__DIFFTEST_DEF_H__	include/difftest-def.h	/^#define __DIFFTEST_DEF_H__$/;"	d
__IGNORE	include/macro.h	/^#define __IGNORE(/;"	d
__ISA_H__	include/isa.h	/^#define __ISA_H__$/;"	d
__ISA_H__	tools/qemu-diff/include/isa.h	/^#define __ISA_H__$/;"	d
__ISA_RISCV32_H__	src/isa/riscv32/include/isa-def.h	/^#define __ISA_RISCV32_H__$/;"	d
__ISA_RISCV64_H__	src/isa/riscv64/include/isa-def.h	/^#define __ISA_RISCV64_H__$/;"	d
__KEEP	include/macro.h	/^#define __KEEP(/;"	d
__MACRO_H__	include/macro.h	/^#define __MACRO_H__$/;"	d
__MEMORY_HOST_H__	include/memory/host.h	/^#define __MEMORY_HOST_H__$/;"	d
__MEMORY_PADDR_H__	include/memory/paddr.h	/^#define __MEMORY_PADDR_H__$/;"	d
__MEMORY_VADDR_H__	include/memory/vaddr.h	/^#define __MEMORY_VADDR_H__$/;"	d
__PAD0	src/device/sdcard.c	/^  SDHSTS, __PAD0, __PAD1, __PAD2,$/;"	e	enum:__anon34a54b7d0103	file:
__PAD1	src/device/sdcard.c	/^  SDHSTS, __PAD0, __PAD1, __PAD2,$/;"	e	enum:__anon34a54b7d0103	file:
__PAD10	src/device/sdcard.c	/^  SDDATA, __PAD10, __PAD11, __PAD12,$/;"	e	enum:__anon34a54b7d0103	file:
__PAD11	src/device/sdcard.c	/^  SDDATA, __PAD10, __PAD11, __PAD12,$/;"	e	enum:__anon34a54b7d0103	file:
__PAD12	src/device/sdcard.c	/^  SDDATA, __PAD10, __PAD11, __PAD12,$/;"	e	enum:__anon34a54b7d0103	file:
__PAD2	src/device/sdcard.c	/^  SDHSTS, __PAD0, __PAD1, __PAD2,$/;"	e	enum:__anon34a54b7d0103	file:
__P_DEF_0	include/macro.h	/^#define __P_DEF_0 /;"	d
__P_DEF_1	include/macro.h	/^#define __P_DEF_1 /;"	d
__P_ONE_1	include/macro.h	/^#define __P_ONE_1 /;"	d
__P_ZERO_0	include/macro.h	/^#define __P_ZERO_0 /;"	d
__RISCV32_REG_H__	src/isa/riscv32/local-include/reg.h	/^#define __RISCV32_REG_H__$/;"	d
__RISCV64_REG_H__	src/isa/riscv64/local-include/reg.h	/^#define __RISCV64_REG_H__$/;"	d
__SDB_H__	src/monitor/sdb/sdb.h	/^#define __SDB_H__$/;"	d
__STDC_LIMIT_MACROS	tools/kconfig/build/lexer.lex.c	/^#define __STDC_LIMIT_MACROS /;"	d	file:
__UTILS_H__	include/utils.h	/^#define __UTILS_H__$/;"	d
__anon00b8194a0103	tools/kconfig/expr.h	/^enum {$/;"	g
__anon34a54b7d0103	src/device/sdcard.c	/^enum {$/;"	g	file:
__anon39e4f0b70103	tools/kconfig/build/parser.tab.c	/^enum { YYENOMEM = -2 };$/;"	g	file:
__anon46fd62430103	include/difftest-def.h	/^enum { DIFFTEST_TO_DUT, DIFFTEST_TO_REF };$/;"	g
__anon4777232b0108	include/device/map.h	/^typedef struct {$/;"	s
__anon4b6124fe0103	src/device/audio.c	/^enum {$/;"	g	file:
__anon64e0b1920103	src/isa/riscv32/inst.c	/^enum {$/;"	g	file:
__anon80c1a05f0103	include/utils.h	/^enum { NEMU_RUNNING, NEMU_STOP, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	g
__anon80c1a05f0208	include/utils.h	/^typedef struct {$/;"	s
__anon8e9702fc0108	tools/kconfig/build/lexer.lex.c	/^static struct {$/;"	s	file:
__anon9270f98a0108	src/isa/riscv64/include/isa-def.h	/^typedef struct {$/;"	s
__anon9270f98a0208	src/isa/riscv64/include/isa-def.h	/^typedef struct {$/;"	s
__anon9270f98a030a	src/isa/riscv64/include/isa-def.h	/^  union {$/;"	u	struct:__anon9270f98a0208
__anon9ad9ae570103	src/isa/riscv64/inst.c	/^enum {$/;"	g	file:
__anona0204e780108	tools/qemu-diff/include/isa.h	/^  struct {$/;"	s	union:isa_gdb_regs
__anona0204e780208	tools/qemu-diff/include/isa.h	/^  struct {$/;"	s	union:isa_gdb_regs
__anona577a74b0103	include/isa.h	/^enum { MMU_DIRECT, MMU_TRANSLATE, MMU_FAIL };$/;"	g
__anona577a74b0203	include/isa.h	/^enum { MEM_TYPE_IFETCH, MEM_TYPE_READ, MEM_TYPE_WRITE };$/;"	g
__anona577a74b0303	include/isa.h	/^enum { MEM_RET_OK, MEM_RET_FAIL, MEM_RET_CROSS_PAGE };$/;"	g
__anoncc46a1e50108	src/isa/riscv32/include/isa-def.h	/^typedef struct {$/;"	s
__anoncc46a1e50208	src/isa/riscv32/include/isa-def.h	/^typedef struct {$/;"	s
__anoncc46a1e5030a	src/isa/riscv32/include/isa-def.h	/^  union {$/;"	u	struct:__anoncc46a1e50208
__anondae01fbd0103	src/device/keyboard.c	/^enum {$/;"	g	file:
__anonf15764c50108	src/monitor/sdb/sdb.c	/^static struct {$/;"	s	file:
__anonf66cb03e0103	tools/kvm-diff/src/kvm.c	/^enum {$/;"	g	file:
__anonfd0e76cb0103	src/monitor/sdb/expr.c	/^enum {$/;"	g	file:
__expand_string	tools/kconfig/preprocess.c	/^static char *__expand_string(const char **str, bool (*is_end)(char c),$/;"	f	typeref:typename:char *	file:
__expr_eliminate_eq	tools/kconfig/expr.c	/^static void __expr_eliminate_eq(enum expr_type type, struct expr **ep1, struct expr **ep2)$/;"	f	typeref:typename:void	file:
__list_add	tools/kconfig/list.h	/^static inline void __list_add(struct list_head *_new,$/;"	f	typeref:typename:void
__list_del	tools/kconfig/list.h	/^static inline void __list_del(struct list_head *prev, struct list_head *next)$/;"	f	typeref:typename:void
_menu_init	tools/kconfig/menu.c	/^void _menu_init(void)$/;"	f	typeref:typename:void
ack	tools/qemu-diff/src/protocol.c	/^  bool ack;$/;"	m	struct:gdb_conn	typeref:typename:bool	file:
add	src/monitor/sdb/expr.c	/^  add,$/;"	e	enum:__anonfd0e76cb0103	file:
add_alarm_handle	src/device/alarm.c	/^void add_alarm_handle(alarm_handler_t h) {$/;"	f	typeref:typename:void
add_byte	tools/kconfig/confdata.c	/^static int add_byte(int c, char **lineptr, size_t slen, size_t *n)$/;"	f	typeref:typename:int	file:
add_mmio_map	src/device/io/mmio.c	/^void add_mmio_map(const char *name, paddr_t addr, void *space, uint32_t len, io_callback_t callb/;"	f	typeref:typename:void
add_pio_map	src/device/io/port-io.c	/^void add_pio_map(const char *name, ioaddr_t addr, void *space, uint32_t len, io_callback_t callb/;"	f	typeref:typename:void
addr	src/device/sdcard.c	/^static uint32_t addr = 0;$/;"	v	typeref:typename:uint32_t	file:
alarm_handler_t	include/device/alarm.h	/^typedef void (*alarm_handler_t) ();$/;"	t	typeref:typename:void (*)()
alarm_sig_handler	src/device/alarm.c	/^static void alarm_sig_handler(int signum) {$/;"	f	typeref:typename:void	file:
all	tools/spike-diff/Makefile	/^all: $(BINARY)$/;"	t
alldefconfig	tools/kconfig/conf.c	/^	alldefconfig,$/;"	e	enum:input_mode	file:
allmodconfig	tools/kconfig/conf.c	/^	allmodconfig,$/;"	e	enum:input_mode	file:
allnoconfig	tools/kconfig/conf.c	/^	allnoconfig,$/;"	e	enum:input_mode	file:
alloc_string	tools/kconfig/build/lexer.lex.c	/^static void alloc_string(const char *str, int size)$/;"	f	typeref:typename:void	file:
alloca	tools/kconfig/build/parser.tab.c	/^#    define alloca /;"	d	file:
allyesconfig	tools/kconfig/conf.c	/^	allyesconfig,$/;"	e	enum:input_mode	file:
am_init_monitor	src/monitor/monitor.c	/^void am_init_monitor() {$/;"	f	typeref:typename:void
app	scripts/build.mk	/^app: $(BINARY)$/;"	t
append_expanded_string	tools/kconfig/build/lexer.lex.c	/^static void append_expanded_string(const char *str)$/;"	f	typeref:typename:void	file:
append_string	tools/kconfig/build/lexer.lex.c	/^static void append_string(const char *str, int size)$/;"	f	typeref:typename:void	file:
arg	src/monitor/sdb/sdb.c	/^  char *arg;$/;"	m	struct:watchpoint	typeref:typename:char *	file:
arg	src/monitor/sdb/watchpoint.c	/^  char *arg;$/;"	m	struct:watchpoint	typeref:typename:char *	file:
array	tools/qemu-diff/include/isa.h	/^    uint32_t array[77];$/;"	m	struct:isa_gdb_regs::__anona0204e780208	typeref:typename:uint32_t[77]
assert_fail_msg	src/cpu/cpu-exec.c	/^void assert_fail_msg() {$/;"	f	typeref:typename:void
assign_op	tools/kconfig/parser.y	/^assign_op:$/;"	l
assign_val	tools/kconfig/parser.y	/^assign_val:$/;"	l
assignment_stmt	tools/kconfig/parser.y	/^assignment_stmt:  T_WORD assign_op assign_val T_EOL	{ variable_add($1, $3, $2); free($1); free($/;"	l
atr	tools/kconfig/lxdialog/dialog.h	/^	chtype atr;	\/* Color attribute *\/$/;"	m	struct:dialog_color	typeref:typename:chtype
attr_clear	tools/kconfig/lxdialog/util.c	/^void attr_clear(WINDOW * win, int height, int width, chtype attr)$/;"	f	typeref:typename:void
audio_base	src/device/audio.c	/^static uint32_t *audio_base = NULL;$/;"	v	typeref:typename:uint32_t *	file:
audio_io_handler	src/device/audio.c	/^static void audio_io_handler(uint32_t offset, int len, bool is_write) {$/;"	f	typeref:typename:void	file:
back_lines	tools/kconfig/lxdialog/textbox.c	/^static void back_lines(int n)$/;"	f	typeref:typename:void	file:
backtitle	tools/kconfig/lxdialog/dialog.h	/^	const char *backtitle;$/;"	m	struct:dialog_info	typeref:typename:const char *
badvaddr	tools/qemu-diff/include/isa.h	/^    uint32_t status, lo, hi, badvaddr, cause, pc;$/;"	m	struct:isa_gdb_regs::__anona0204e780108	typeref:typename:uint32_t
base	src/device/sdcard.c	/^static uint32_t *base = NULL;$/;"	v	typeref:typename:uint32_t *	file:
begin_reached	tools/kconfig/lxdialog/textbox.c	/^static int begin_reached, end_reached, page_length;$/;"	v	typeref:typename:int	file:
bg	tools/kconfig/lxdialog/dialog.h	/^	int bg;		\/* background *\/$/;"	m	struct:dialog_color	typeref:typename:int
bin_end	src/am-bin.S	/^bin_end:$/;"	l
bin_start	src/am-bin.S	/^bin_start:$/;"	l
blk_addr	src/device/sdcard.c	/^static long blk_addr = 0;$/;"	v	typeref:typename:long	file:
blkcnt	src/device/sdcard.c	/^static uint32_t blkcnt = 0;$/;"	v	typeref:typename:uint32_t	file:
blocks	resource/sdcard/nemu.c	/^	unsigned int		blocks;		\/* remaining PIO blocks *\/$/;"	m	struct:nemu_host	typeref:typename:unsigned int	file:
boot_time	src/utils/timer.c	/^static uint64_t boot_time = 0;$/;"	v	typeref:typename:uint64_t	file:
border	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color border;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
buf	tools/gen-expr/gen-expr.c	/^static char buf[65536] = {};$/;"	v	typeref:typename:char[65536]	file:
buf	tools/kconfig/lxdialog/textbox.c	/^static char *buf;$/;"	v	typeref:typename:char *	file:
buffer	tools/kconfig/build/lexer.lex.c	/^struct buffer {$/;"	s	file:
build_conf	tools/kconfig/mconf.c	/^static void build_conf(struct menu *menu)$/;"	f	typeref:typename:void	file:
button_active	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color button_active;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
button_inactive	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color button_inactive;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
button_key_active	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color button_key_active;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
button_key_inactive	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color button_key_inactive;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
button_label_active	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color button_label_active;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
button_label_inactive	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color button_label_inactive;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
call_fixdep	scripts/config.mk	/^define call_fixdep$/;"	m
callback	include/device/map.h	/^  io_callback_t callback;$/;"	m	struct:__anon4777232b0108	typeref:typename:io_callback_t
cause	tools/qemu-diff/include/isa.h	/^    uint32_t status, lo, hi, badvaddr, cause, pc;$/;"	m	struct:isa_gdb_regs::__anona0204e780108	typeref:typename:uint32_t
cdebug	tools/kconfig/build/parser.tab.c	/^int cdebug = PRINTD;$/;"	v	typeref:typename:int
check	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color check;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
check_bound	src/device/io/map.c	/^static void check_bound(IOMap *map, paddr_t addr) {$/;"	f	typeref:typename:void	file:
check_conf	tools/kconfig/conf.c	/^static void check_conf(struct menu *menu)$/;"	f	typeref:typename:void	file:
check_parentheses	src/monitor/sdb/expr.c	/^static bool check_parentheses(Token *p,Token *q){$/;"	f	typeref:typename:bool	file:
check_reg_idx	src/isa/riscv32/local-include/reg.h	/^static inline int check_reg_idx(int idx) {$/;"	f	typeref:typename:int
check_reg_idx	src/isa/riscv64/local-include/reg.h	/^static inline int check_reg_idx(int idx) {$/;"	f	typeref:typename:int
check_selected	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color check_selected;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
check_top	tools/kconfig/symbol.c	/^} *check_top;$/;"	v	typeref:struct:dep_stack *
check_x	tools/kconfig/lxdialog/checklist.c	/^static int list_width, check_x, item_x;$/;"	v	typeref:typename:int	file:
checkregs	src/cpu/difftest/dut.c	/^static void checkregs(CPU_state *ref, vaddr_t pc) {$/;"	f	typeref:typename:void	file:
child_count	tools/kconfig/mconf.c	/^static int child_count;$/;"	v	typeref:typename:int	file:
choice	tools/kconfig/parser.y	/^choice: T_CHOICE word_opt T_EOL$/;"	l
choice57e410a50104	src/memory/Kconfig	/^choice$/;"	C	menu:Memory Configuration
choice8014d1a60104	Kconfig	/^choice$/;"	C
choice8014d1a60204	Kconfig	/^choice$/;"	C
choice8014d1a60304	Kconfig	/^choice$/;"	C
choice8014d1a60404	Kconfig	/^choice$/;"	C
choice8014d1a60504	Kconfig	/^choice$/;"	C
choice8014d1a60604	Kconfig	/^choice$/;"	C	menu:Build Options
choice8014d1a60704	Kconfig	/^choice$/;"	C	menu:Build Options
choice8014d1a60804	Kconfig	/^choice$/;"	C	menu:Testing and Debugging
choice8014d1a60904	Kconfig	/^choice$/;"	C	menu:Miscellaneous
choice84acbddc0104	src/device/Kconfig	/^choice$/;"	C
choice_end	tools/kconfig/parser.y	/^choice_end: end$/;"	l
choice_entry	tools/kconfig/parser.y	/^choice_entry: choice choice_option_list$/;"	l
choice_option	tools/kconfig/parser.y	/^choice_option: T_DEFAULT nonconst_symbol if_expr T_EOL$/;"	l
choice_option	tools/kconfig/parser.y	/^choice_option: T_OPTIONAL T_EOL$/;"	l
choice_option	tools/kconfig/parser.y	/^choice_option: T_PROMPT T_WORD_QUOTE if_expr T_EOL$/;"	l
choice_option	tools/kconfig/parser.y	/^choice_option: logic_type prompt_stmt_opt T_EOL$/;"	l
choice_option_list	tools/kconfig/parser.y	/^choice_option_list:$/;"	l
choice_stmt	tools/kconfig/parser.y	/^choice_stmt: choice_entry stmt_list_in_choice choice_end$/;"	l
choose	tools/gen-expr/gen-expr.c	/^uint64_t choose(uint64_t n){$/;"	f	typeref:typename:uint64_t
clean	scripts/build.mk	/^clean:$/;"	t
clean	tools/spike-diff/Makefile	/^clean:$/;"	t
clean-all	scripts/native.mk	/^clean-all: clean distclean clean-tools$/;"	t
clean-tools	scripts/native.mk	/^clean-tools = $(dir $(shell find .\/tools -maxdepth 2 -mindepth 2 -name "Makefile"))$/;"	m
clean-tools	scripts/native.mk	/^clean-tools: $(clean-tools)$/;"	t
clock	resource/sdcard/nemu.c	/^	int			clock;		\/* Current clock speed *\/$/;"	m	struct:nemu_host	typeref:typename:int	file:
cmd	resource/sdcard/nemu.c	/^	struct mmc_command	*cmd;		\/* Current command *\/$/;"	m	struct:nemu_host	typeref:struct:mmc_command *	file:
cmd_c	src/monitor/sdb/sdb.c	/^static int cmd_c(char *args) {$/;"	f	typeref:typename:int	file:
cmd_d	src/monitor/sdb/sdb.c	/^static int cmd_d(){$/;"	f	typeref:typename:int	file:
cmd_help	src/monitor/sdb/sdb.c	/^static int cmd_help(char *args) {$/;"	f	typeref:typename:int	file:
cmd_info	src/monitor/sdb/sdb.c	/^static int cmd_info(char *args) {$/;"	f	typeref:typename:int	file:
cmd_p	src/monitor/sdb/sdb.c	/^static int cmd_p(char *args) {$/;"	f	typeref:typename:int	file:
cmd_ptest	src/monitor/sdb/sdb.c	/^static int cmd_ptest(){$/;"	f	typeref:typename:int	file:
cmd_q	src/monitor/sdb/sdb.c	/^static int cmd_q(char *args) {$/;"	f	typeref:typename:int	file:
cmd_si	src/monitor/sdb/sdb.c	/^static int cmd_si(char *args) {$/;"	f	typeref:typename:int	file:
cmd_table	src/monitor/sdb/sdb.c	/^} cmd_table [] = {$/;"	v	typeref:struct:__anonf15764c50108[]
cmd_w	src/monitor/sdb/sdb.c	/^static int cmd_w(char *args){$/;"	f	typeref:typename:int	file:
cmd_x	src/monitor/sdb/sdb.c	/^static int cmd_x(char *args){$/;"	f	typeref:typename:int	file:
code_buf	tools/gen-expr/gen-expr.c	/^static char code_buf[65536 + 128] = {}; \/\/ a little larger than `buf`$/;"	v	typeref:typename:char[]	file:
code_format	tools/gen-expr/gen-expr.c	/^static char *code_format =$/;"	v	typeref:typename:char *	file:
color_setup	tools/kconfig/lxdialog/util.c	/^static void color_setup(const char *theme)$/;"	f	typeref:typename:void	file:
comment	tools/kconfig/parser.y	/^comment: T_COMMENT T_WORD_QUOTE T_EOL$/;"	l
comment_option_list	tools/kconfig/parser.y	/^comment_option_list:$/;"	l
comment_stmt	tools/kconfig/parser.y	/^comment_stmt: comment comment_option_list$/;"	l
compat_getline	tools/kconfig/confdata.c	/^static ssize_t compat_getline(char **lineptr, size_t *n, FILE *stream)$/;"	f	typeref:typename:ssize_t	file:
compile_git	scripts/native.mk	/^compile_git:$/;"	t
concat	include/macro.h	/^#define concat(/;"	d
concat3	include/macro.h	/^#define concat3(/;"	d
concat4	include/macro.h	/^#define concat4(/;"	d
concat5	include/macro.h	/^#define concat5(/;"	d
concat_temp	include/macro.h	/^#define concat_temp(/;"	d
conf	tools/kconfig/Makefile	/^conf:$/;"	t
conf	tools/kconfig/conf.c	/^static void conf(struct menu *menu)$/;"	f	typeref:typename:void	file:
conf	tools/kconfig/mconf.c	/^static void conf(struct menu *menu, struct menu *active_menu)$/;"	f	typeref:typename:void	file:
conf_askvalue	tools/kconfig/conf.c	/^static int conf_askvalue(struct symbol *sym, const char *def)$/;"	f	typeref:typename:int	file:
conf_changed_callback	tools/kconfig/confdata.c	/^static void (*conf_changed_callback)(void);$/;"	v	typeref:typename:void (*)(void)	file:
conf_choice	tools/kconfig/conf.c	/^static int conf_choice(struct menu *menu)$/;"	f	typeref:typename:int	file:
conf_choice	tools/kconfig/mconf.c	/^static void conf_choice(struct menu *menu)$/;"	f	typeref:typename:void	file:
conf_cnt	tools/kconfig/conf.c	/^static int conf_cnt;$/;"	v	typeref:typename:int	file:
conf_def_mode	tools/kconfig/lkc.h	/^enum conf_def_mode {$/;"	g
conf_default_message_callback	tools/kconfig/confdata.c	/^static void conf_default_message_callback(const char *s)$/;"	f	typeref:typename:void	file:
conf_filename	tools/kconfig/confdata.c	/^static const char *conf_filename;$/;"	v	typeref:typename:const char *	file:
conf_get_autoconfig_name	tools/kconfig/confdata.c	/^static const char *conf_get_autoconfig_name(void)$/;"	f	typeref:typename:const char *	file:
conf_get_changed	tools/kconfig/confdata.c	/^bool conf_get_changed(void)$/;"	f	typeref:typename:bool
conf_get_configname	tools/kconfig/confdata.c	/^const char *conf_get_configname(void)$/;"	f	typeref:typename:const char *
conf_lineno	tools/kconfig/confdata.c	/^static int conf_lineno, conf_warnings;$/;"	v	typeref:typename:int	file:
conf_load	tools/kconfig/mconf.c	/^static void conf_load(void)$/;"	f	typeref:typename:void	file:
conf_message	tools/kconfig/confdata.c	/^static void conf_message(const char *fmt, ...)$/;"	f	typeref:typename:void	file:
conf_message_callback	tools/kconfig/confdata.c	/^static void (*conf_message_callback)(const char *s) =$/;"	v	typeref:typename:void (*)(const char * s)	file:
conf_message_callback	tools/kconfig/mconf.c	/^static void conf_message_callback(const char *s)$/;"	f	typeref:typename:void	file:
conf_parse	tools/kconfig/build/parser.tab.c	/^void conf_parse(const char *name)$/;"	f	typeref:typename:void
conf_printer	tools/kconfig/confdata.c	/^struct conf_printer {$/;"	s	file:
conf_read	tools/kconfig/confdata.c	/^int conf_read(const char *name)$/;"	f	typeref:typename:int
conf_read_simple	tools/kconfig/confdata.c	/^int conf_read_simple(const char *name, int def)$/;"	f	typeref:typename:int
conf_rewrite_mod_or_yes	tools/kconfig/confdata.c	/^void conf_rewrite_mod_or_yes(enum conf_def_mode mode)$/;"	f	typeref:typename:void
conf_save	tools/kconfig/mconf.c	/^static void conf_save(void)$/;"	f	typeref:typename:void	file:
conf_set_all_new_symbols	tools/kconfig/confdata.c	/^bool conf_set_all_new_symbols(enum conf_def_mode mode)$/;"	f	typeref:typename:bool
conf_set_changed_callback	tools/kconfig/confdata.c	/^void conf_set_changed_callback(void (*fn)(void))$/;"	f	typeref:typename:void
conf_set_message_callback	tools/kconfig/confdata.c	/^void conf_set_message_callback(void (*fn)(const char *s))$/;"	f	typeref:typename:void
conf_set_sym_val	tools/kconfig/confdata.c	/^static int conf_set_sym_val(struct symbol *sym, int def, int def_flags, char *p)$/;"	f	typeref:typename:int	file:
conf_string	tools/kconfig/conf.c	/^static int conf_string(struct menu *menu)$/;"	f	typeref:typename:int	file:
conf_string	tools/kconfig/mconf.c	/^static void conf_string(struct menu *menu)$/;"	f	typeref:typename:void	file:
conf_sym	tools/kconfig/conf.c	/^static int conf_sym(struct menu *menu)$/;"	f	typeref:typename:int	file:
conf_touch_dep	tools/kconfig/confdata.c	/^static int conf_touch_dep(const char *name)$/;"	f	typeref:typename:int	file:
conf_touch_deps	tools/kconfig/confdata.c	/^static int conf_touch_deps(void)$/;"	f	typeref:typename:int	file:
conf_usage	tools/kconfig/conf.c	/^static void conf_usage(const char *progname)$/;"	f	typeref:typename:void	file:
conf_warning	tools/kconfig/confdata.c	/^static void conf_warning(const char *fmt, ...)$/;"	f	typeref:typename:void	file:
conf_warnings	tools/kconfig/confdata.c	/^static int conf_lineno, conf_warnings;$/;"	v	typeref:typename:int	file:
conf_write	tools/kconfig/confdata.c	/^int conf_write(const char *name)$/;"	f	typeref:typename:int
conf_write_autoconf	tools/kconfig/confdata.c	/^int conf_write_autoconf(int overwrite)$/;"	f	typeref:typename:int
conf_write_defconfig	tools/kconfig/confdata.c	/^int conf_write_defconfig(const char *filename)$/;"	f	typeref:typename:int
conf_write_dep	tools/kconfig/confdata.c	/^static int conf_write_dep(const char *name)$/;"	f	typeref:typename:int	file:
conf_write_heading	tools/kconfig/confdata.c	/^conf_write_heading(FILE *fp, struct conf_printer *printer, void *printer_arg)$/;"	f	typeref:typename:void	file:
conf_write_symbol	tools/kconfig/confdata.c	/^static void conf_write_symbol(FILE *fp, struct symbol *sym,$/;"	f	typeref:typename:void	file:
config_entry_start	tools/kconfig/parser.y	/^config_entry_start: T_CONFIG nonconst_symbol T_EOL$/;"	l
config_option	tools/kconfig/parser.y	/^config_option: T_IMPLY nonconst_symbol if_expr T_EOL$/;"	l
config_option	tools/kconfig/parser.y	/^config_option: T_OPTION T_ALLNOCONFIG_Y T_EOL$/;"	l
config_option	tools/kconfig/parser.y	/^config_option: T_OPTION T_DEFCONFIG_LIST T_EOL$/;"	l
config_option	tools/kconfig/parser.y	/^config_option: T_OPTION T_MODULES T_EOL$/;"	l
config_option	tools/kconfig/parser.y	/^config_option: T_PROMPT T_WORD_QUOTE if_expr T_EOL$/;"	l
config_option	tools/kconfig/parser.y	/^config_option: T_RANGE symbol symbol if_expr T_EOL$/;"	l
config_option	tools/kconfig/parser.y	/^config_option: T_SELECT nonconst_symbol if_expr T_EOL$/;"	l
config_option	tools/kconfig/parser.y	/^config_option: default expr if_expr T_EOL$/;"	l
config_option	tools/kconfig/parser.y	/^config_option: type prompt_stmt_opt T_EOL$/;"	l
config_option_list	tools/kconfig/parser.y	/^config_option_list:$/;"	l
config_stmt	tools/kconfig/parser.y	/^config_stmt: config_entry_start config_option_list$/;"	l
conn	tools/qemu-diff/src/gdb-host.c	/^static struct gdb_conn *conn;$/;"	v	typeref:struct:gdb_conn *	file:
container_of	tools/kconfig/list.h	/^#define container_of(/;"	d
cpu	src/cpu/cpu-exec.c	/^CPU_state cpu = {};$/;"	v	typeref:typename:CPU_state
cpu_exec	src/cpu/cpu-exec.c	/^void cpu_exec(uint64_t n) {$/;"	f	typeref:typename:void
create_mem	tools/kvm-diff/src/kvm.c	/^static void* create_mem(int slot, uintptr_t base, size_t mem_size) {$/;"	f	typeref:typename:void *	file:
curr	tools/kconfig/expr.h	/^	struct symbol_value curr;$/;"	m	struct:symbol	typeref:struct:symbol_value
current_buf	tools/kconfig/build/lexer.lex.c	/^static struct buffer *current_buf;$/;"	v	typeref:struct:buffer *	file:
current_entry	tools/kconfig/build/parser.tab.c	/^static struct menu *current_menu, *current_entry;$/;"	v	typeref:struct:menu *	file:
current_file	tools/kconfig/menu.c	/^struct file *current_file;$/;"	v	typeref:struct:file *
current_menu	tools/kconfig/build/parser.tab.c	/^static struct menu *current_menu, *current_entry;$/;"	v	typeref:struct:menu *	file:
current_menu	tools/kconfig/mconf.c	/^static struct menu *current_menu;$/;"	v	typeref:struct:menu *	file:
current_pos	tools/kconfig/build/lexer.lex.c	/^} current_pos;$/;"	v	typeref:struct:__anon8e9702fc0108
darrow	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color darrow;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
data	resource/sdcard/nemu.c	/^	struct mmc_data		*data;		\/* Current data request *\/$/;"	m	struct:nemu_host	typeref:struct:mmc_data *	file:
data	tools/kconfig/expr.h	/^	void *data;$/;"	m	struct:menu	typeref:typename:void *
data	tools/kconfig/lxdialog/dialog.h	/^	void *data;	\/* pointer to menu item - used by menubox+checklist *\/$/;"	m	struct:dialog_item	typeref:typename:void *
data_complete	resource/sdcard/nemu.c	/^	bool			data_complete:1;\/* Data finished before cmd *\/$/;"	m	struct:nemu_host	typeref:typename:bool:1	file:
decode_exec	src/isa/riscv32/inst.c	/^static int decode_exec(Decode *s) {$/;"	f	typeref:typename:int	file:
decode_exec	src/isa/riscv64/inst.c	/^static int decode_exec(Decode *s) {$/;"	f	typeref:typename:int	file:
decode_operand	src/isa/riscv32/inst.c	/^static void decode_operand(Decode *s, int *dest, word_t *src1, word_t *src2, word_t *imm, int ty/;"	f	typeref:typename:void	file:
decode_operand	src/isa/riscv64/inst.c	/^static void decode_operand(Decode *s, int *dest, word_t *src1, word_t *src2, word_t *imm, int ty/;"	f	typeref:typename:void	file:
def	tools/kconfig/expr.h	/^	struct symbol_value def[S_DEF_COUNT];$/;"	m	struct:symbol	typeref:struct:symbol_value[]
def_default	tools/kconfig/lkc.h	/^	def_default,$/;"	e	enum:conf_def_mode
def_m2y	tools/kconfig/lkc.h	/^	def_m2y,$/;"	e	enum:conf_def_mode
def_mod	tools/kconfig/lkc.h	/^	def_mod,$/;"	e	enum:conf_def_mode
def_no	tools/kconfig/lkc.h	/^	def_no,$/;"	e	enum:conf_def_mode
def_random	tools/kconfig/lkc.h	/^	def_random$/;"	e	enum:conf_def_mode
def_y2m	tools/kconfig/lkc.h	/^	def_y2m,$/;"	e	enum:conf_def_mode
def_yes	tools/kconfig/lkc.h	/^	def_yes,$/;"	e	enum:conf_def_mode
default	tools/kconfig/parser.y	/^default:$/;"	l
defconfig	tools/kconfig/conf.c	/^	defconfig,$/;"	e	enum:input_mode	file:
define_config	tools/fixdep/fixdep.c	/^static void define_config(const char *name, int len, unsigned int hash)$/;"	f	typeref:typename:void	file:
dep	tools/kconfig/expr.h	/^	struct expr *dep;$/;"	m	struct:menu	typeref:struct:expr *
dep_stack	tools/kconfig/symbol.c	/^static struct dep_stack {$/;"	s	file:
dep_stack_insert	tools/kconfig/symbol.c	/^static void dep_stack_insert(struct dep_stack *stack, struct symbol *sym)$/;"	f	typeref:typename:void	file:
dep_stack_remove	tools/kconfig/symbol.c	/^static void dep_stack_remove(void)$/;"	f	typeref:typename:void	file:
depends	tools/kconfig/parser.y	/^depends: T_DEPENDS T_ON expr T_EOL$/;"	l
depfile_path	tools/kconfig/confdata.c	/^static char depfile_path[PATH_MAX];$/;"	v	typeref:typename:char[]	file:
depfile_prefix_len	tools/kconfig/confdata.c	/^static size_t depfile_prefix_len;$/;"	v	typeref:typename:size_t	file:
description	src/monitor/sdb/sdb.c	/^  const char *description;$/;"	m	struct:__anonf15764c50108	typeref:typename:const char *	file:
dev_raise_intr	src/device/intr.c	/^void dev_raise_intr() {$/;"	f	typeref:typename:void
device_update	src/device/device.c	/^void device_update() {$/;"	f	typeref:typename:void
dialog	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color dialog;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
dialog_checklist	tools/kconfig/lxdialog/checklist.c	/^int dialog_checklist(const char *title, const char *prompt, int height,$/;"	f	typeref:typename:int
dialog_clear	tools/kconfig/lxdialog/util.c	/^void dialog_clear(void)$/;"	f	typeref:typename:void
dialog_color	tools/kconfig/lxdialog/dialog.h	/^struct dialog_color {$/;"	s
dialog_info	tools/kconfig/lxdialog/dialog.h	/^struct dialog_info {$/;"	s
dialog_input_result	tools/kconfig/lxdialog/inputbox.c	/^char dialog_input_result[MAX_LEN + 1];$/;"	v	typeref:typename:char[]
dialog_inputbox	tools/kconfig/lxdialog/inputbox.c	/^int dialog_inputbox(const char *title, const char *prompt, int height, int width,$/;"	f	typeref:typename:int
dialog_item	tools/kconfig/lxdialog/dialog.h	/^struct dialog_item {$/;"	s
dialog_list	tools/kconfig/lxdialog/dialog.h	/^struct dialog_list {$/;"	s
dialog_menu	tools/kconfig/lxdialog/menubox.c	/^int dialog_menu(const char *title, const char *prompt,$/;"	f	typeref:typename:int
dialog_textbox	tools/kconfig/lxdialog/textbox.c	/^int dialog_textbox(const char *title, char *tbuf, int initial_height,$/;"	f	typeref:typename:int
dialog_yesno	tools/kconfig/lxdialog/yesno.c	/^int dialog_yesno(const char *title, const char *prompt, int height, int width)$/;"	f	typeref:typename:int
diff_context_t	tools/spike-diff/difftest.cc	/^struct diff_context_t {$/;"	s	file:
diff_get_regs	tools/spike-diff/difftest.cc	/^void sim_t::diff_get_regs(void* diff_context) {$/;"	f	class:sim_t	typeref:typename:void
diff_init	tools/spike-diff/difftest.cc	/^void sim_t::diff_init(int port) {$/;"	f	class:sim_t	typeref:typename:void
diff_memcpy	tools/spike-diff/difftest.cc	/^void sim_t::diff_memcpy(reg_t dest, void* src, size_t n) {$/;"	f	class:sim_t	typeref:typename:void
diff_set_regs	tools/spike-diff/difftest.cc	/^void sim_t::diff_set_regs(void* diff_context) {$/;"	f	class:sim_t	typeref:typename:void
diff_so_file	src/monitor/monitor.c	/^static char *diff_so_file = NULL;$/;"	v	typeref:typename:char *	file:
diff_step	tools/spike-diff/difftest.cc	/^void sim_t::diff_step(uint64_t n) {$/;"	f	class:sim_t	typeref:typename:void
difftest_attach	include/cpu/difftest.h	/^static inline void difftest_attach() {}$/;"	f	typeref:typename:void
difftest_check_reg	include/cpu/difftest.h	/^static inline bool difftest_check_reg(const char *name, vaddr_t pc, word_t ref, word_t dut) {$/;"	f	typeref:typename:bool
difftest_detach	include/cpu/difftest.h	/^static inline void difftest_detach() {}$/;"	f	typeref:typename:void
difftest_dm_config	tools/spike-diff/difftest.cc	/^static debug_module_config_t difftest_dm_config = {$/;"	v	typeref:typename:debug_module_config_t	file:
difftest_exec	src/cpu/difftest/ref.c	/^void difftest_exec(uint64_t n) {$/;"	f	typeref:typename:void
difftest_exec	tools/kvm-diff/src/kvm.c	/^void difftest_exec(uint64_t n) {$/;"	f	typeref:typename:void
difftest_exec	tools/qemu-diff/src/diff-test.c	/^void difftest_exec(uint64_t n) {$/;"	f	typeref:typename:void
difftest_exec	tools/spike-diff/difftest.cc	/^void difftest_exec(uint64_t n) {$/;"	f	typeref:typename:void
difftest_hartids	tools/spike-diff/difftest.cc	/^static std::vector<int> difftest_hartids;$/;"	v	typeref:typename:std::vector<int>	file:
difftest_htif_args	tools/spike-diff/difftest.cc	/^static std::vector<std::string> difftest_htif_args;$/;"	v	typeref:typename:std::vector<std::string>	file:
difftest_init	src/cpu/difftest/ref.c	/^void difftest_init(int port) {$/;"	f	typeref:typename:void
difftest_init	tools/kvm-diff/src/kvm.c	/^void difftest_init(int port) {$/;"	f	typeref:typename:void
difftest_init	tools/qemu-diff/src/diff-test.c	/^void difftest_init(int port) {$/;"	f	typeref:typename:void
difftest_init	tools/spike-diff/difftest.cc	/^void difftest_init(int port) {$/;"	f	typeref:typename:void
difftest_memcpy	src/cpu/difftest/ref.c	/^void difftest_memcpy(paddr_t addr, void *buf, size_t n, bool direction) {$/;"	f	typeref:typename:void
difftest_memcpy	tools/kvm-diff/src/kvm.c	/^void difftest_memcpy(paddr_t addr, void *buf, size_t n, bool direction) {$/;"	f	typeref:typename:void
difftest_memcpy	tools/qemu-diff/src/diff-test.c	/^void difftest_memcpy(paddr_t addr, void *buf, size_t n, bool direction) {$/;"	f	typeref:typename:void
difftest_memcpy	tools/spike-diff/difftest.cc	/^void difftest_memcpy(paddr_t addr, void *buf, size_t n, bool direction) {$/;"	f	typeref:typename:void
difftest_plugin_devices	tools/spike-diff/difftest.cc	/^static std::vector<std::pair<reg_t, abstract_device_t*>> difftest_plugin_devices;$/;"	v	typeref:typename:std::vector<std::pair<reg_t,abstract_device_t * >>	file:
difftest_port	src/monitor/monitor.c	/^static int difftest_port = 1234;$/;"	v	typeref:typename:int	file:
difftest_raise_intr	src/cpu/difftest/ref.c	/^void difftest_raise_intr(word_t NO) {$/;"	f	typeref:typename:void
difftest_raise_intr	tools/kvm-diff/src/kvm.c	/^void difftest_raise_intr(word_t NO) {$/;"	f	typeref:typename:void
difftest_raise_intr	tools/qemu-diff/src/diff-test.c	/^void difftest_raise_intr(uint64_t NO) {$/;"	f	typeref:typename:void
difftest_raise_intr	tools/spike-diff/difftest.cc	/^void difftest_raise_intr(uint64_t NO) {$/;"	f	typeref:typename:void
difftest_regcpy	src/cpu/difftest/ref.c	/^void difftest_regcpy(void *dut, bool direction) {$/;"	f	typeref:typename:void
difftest_regcpy	tools/kvm-diff/src/kvm.c	/^void difftest_regcpy(void *r, bool direction) {$/;"	f	typeref:typename:void
difftest_regcpy	tools/qemu-diff/src/diff-test.c	/^void difftest_regcpy(void *dut, bool direction) {$/;"	f	typeref:typename:void
difftest_regcpy	tools/spike-diff/difftest.cc	/^void difftest_regcpy(void* dut, bool direction) {$/;"	f	typeref:typename:void
difftest_set_patch	include/cpu/difftest.h	/^static inline void difftest_set_patch(void (*fn)(void *arg), void *arg) {}$/;"	f	typeref:typename:void
difftest_skip_dut	include/cpu/difftest.h	/^static inline void difftest_skip_dut(int nr_ref, int nr_dut) {}$/;"	f	typeref:typename:void
difftest_skip_dut	src/cpu/difftest/dut.c	/^void difftest_skip_dut(int nr_ref, int nr_dut) {$/;"	f	typeref:typename:void
difftest_skip_ref	include/cpu/difftest.h	/^static inline void difftest_skip_ref() {}$/;"	f	typeref:typename:void
difftest_skip_ref	src/cpu/difftest/dut.c	/^void difftest_skip_ref() {$/;"	f	typeref:typename:void
difftest_step	include/cpu/difftest.h	/^static inline void difftest_step(vaddr_t pc, vaddr_t npc) {}$/;"	f	typeref:typename:void
difftest_step	src/cpu/difftest/dut.c	/^void difftest_step(vaddr_t pc, vaddr_t npc) {$/;"	f	typeref:typename:void
dir_dep	tools/kconfig/expr.h	/^	struct expr_value dir_dep;$/;"	m	struct:symbol	typeref:struct:expr_value
disassemble	src/utils/disasm.cc	/^extern "C" void disassemble(char *str, int size, uint64_t pc, uint8_t *code, int nbyte) {$/;"	f	typeref:typename:void
distclean	scripts/config.mk	/^distclean: clean$/;"	t
dlg	tools/kconfig/lxdialog/util.c	/^struct dialog_info dlg;$/;"	v	typeref:struct:dialog_info
dnpc	include/cpu/decode.h	/^  vaddr_t dnpc; \/\/ dynamic next pc$/;"	m	struct:Decode	typeref:typename:vaddr_t
do_error_if	tools/kconfig/preprocess.c	/^static char *do_error_if(int argc, char *argv[])$/;"	f	typeref:typename:char *	file:
do_filename	tools/kconfig/preprocess.c	/^static char *do_filename(int argc, char *argv[])$/;"	f	typeref:typename:char *	file:
do_info	tools/kconfig/preprocess.c	/^static char *do_info(int argc, char *argv[])$/;"	f	typeref:typename:char *	file:
do_lineno	tools/kconfig/preprocess.c	/^static char *do_lineno(int argc, char *argv[])$/;"	f	typeref:typename:char *	file:
do_print_item	tools/kconfig/lxdialog/menubox.c	/^static void do_print_item(WINDOW * win, const char *item, int line_y,$/;"	f	typeref:typename:void	file:
do_scroll	tools/kconfig/lxdialog/menubox.c	/^static void do_scroll(WINDOW *win, int *scroll, int n)$/;"	f	typeref:typename:void	file:
do_shell	tools/kconfig/preprocess.c	/^static char *do_shell(int argc, char *argv[])$/;"	f	typeref:typename:char *	file:
do_warning_if	tools/kconfig/preprocess.c	/^static char *do_warning_if(int argc, char *argv[])$/;"	f	typeref:typename:char *	file:
draw_box	tools/kconfig/lxdialog/util.c	/^draw_box(WINDOW * win, int y, int x, int height, int width,$/;"	f	typeref:typename:void
draw_shadow	tools/kconfig/lxdialog/util.c	/^void draw_shadow(WINDOW * win, int y, int x, int height, int width)$/;"	f	typeref:typename:void
e1	tools/kconfig/expr.c	/^#define e1 /;"	d	file:
e2	tools/kconfig/expr.c	/^#define e2 /;"	d	file:
end	tools/kconfig/parser.y	/^end:	  T_ENDMENU T_EOL	{ $$ = "menu"; }$/;"	l
end_dialog	tools/kconfig/lxdialog/util.c	/^void end_dialog(int x, int y)$/;"	f	typeref:typename:void
end_reached	tools/kconfig/lxdialog/textbox.c	/^static int begin_reached, end_reached, page_length;$/;"	v	typeref:typename:int	file:
engine_start	src/engine/interpreter/init.c	/^void engine_start() {$/;"	f	typeref:typename:void
entries	tools/kconfig/expr.h	/^	struct list_head entries;$/;"	m	struct:jump_key	typeref:struct:list_head
entries	tools/kconfig/mconf.c	/^	struct list_head entries;$/;"	m	struct:subtitle_part	typeref:struct:list_head	file:
entry	tools/kvm-diff/src/kvm.c	/^  uint32_t entry;$/;"	m	struct:vcpu	typeref:typename:uint32_t	file:
env	tools/kconfig/preprocess.c	/^struct env {$/;"	s	file:
env_add	tools/kconfig/preprocess.c	/^static void env_add(const char *name, const char *value)$/;"	f	typeref:typename:void	file:
env_del	tools/kconfig/preprocess.c	/^static void env_del(struct env *e)$/;"	f	typeref:typename:void	file:
env_expand	tools/kconfig/preprocess.c	/^static char *env_expand(const char *name)$/;"	f	typeref:typename:char *	file:
env_write_dep	tools/kconfig/preprocess.c	/^void env_write_dep(FILE *f, const char *autoconfig_name)$/;"	f	typeref:typename:void
eo	tools/kconfig/symbol.c	/^	off_t		so, eo;$/;"	m	struct:sym_match	typeref:typename:off_t	file:
eval	src/monitor/sdb/expr.c	/^static uint64_t eval(Token *p, Token *q) {$/;"	f	typeref:typename:uint64_t	file:
eval_clause	tools/kconfig/preprocess.c	/^static char *eval_clause(const char *str, size_t len, int argc, char *argv[])$/;"	f	typeref:typename:char *	file:
exec_once	src/cpu/cpu-exec.c	/^static void exec_once(Decode *s, vaddr_t pc) {$/;"	f	typeref:typename:void	file:
execute	src/cpu/cpu-exec.c	/^static void execute(uint64_t n) {$/;"	f	typeref:typename:void	file:
exp_count	tools/kconfig/preprocess.c	/^	int exp_count;$/;"	m	struct:variable	typeref:typename:int	file:
expand_dollar	tools/kconfig/preprocess.c	/^char *expand_dollar(const char **str)$/;"	f	typeref:typename:char *
expand_dollar_with_args	tools/kconfig/preprocess.c	/^static char *expand_dollar_with_args(const char **str, int argc, char *argv[])$/;"	f	typeref:typename:char *	file:
expand_one_token	tools/kconfig/preprocess.c	/^char *expand_one_token(const char **str)$/;"	f	typeref:typename:char *
expand_string	tools/kconfig/preprocess.c	/^static char *expand_string(const char *in)$/;"	f	typeref:typename:char *	file:
expand_string_with_args	tools/kconfig/preprocess.c	/^static char *expand_string_with_args(const char *in, int argc, char *argv[])$/;"	f	typeref:typename:char *	file:
expand_token	tools/kconfig/build/lexer.lex.c	/^static char *expand_token(const char *in, size_t n)$/;"	f	typeref:typename:char *	file:
expr	src/monitor/sdb/expr.c	/^word_t expr(char *e, bool *success) {$/;"	f	typeref:typename:word_t
expr	tools/kconfig/build/parser.tab.h	/^	struct expr *expr;$/;"	m	union:YYSTYPE	typeref:struct:expr *
expr	tools/kconfig/expr.h	/^	struct expr *expr;         \/* the optional conditional part of the property *\/$/;"	m	struct:property	typeref:struct:expr *
expr	tools/kconfig/expr.h	/^	struct expr *expr;$/;"	m	struct:expr_value	typeref:struct:expr *
expr	tools/kconfig/expr.h	/^	struct expr *expr;$/;"	m	union:expr_data	typeref:struct:expr *
expr	tools/kconfig/expr.h	/^struct expr {$/;"	s
expr	tools/kconfig/parser.y	/^expr:	  symbol				{ $$ = expr_alloc_symbol($1); }$/;"	l
expr	tools/kconfig/symbol.c	/^	struct expr **expr;$/;"	m	struct:dep_stack	typeref:struct:expr **	file:
expr_alloc_and	tools/kconfig/expr.c	/^struct expr *expr_alloc_and(struct expr *e1, struct expr *e2)$/;"	f	typeref:struct:expr *
expr_alloc_comp	tools/kconfig/expr.c	/^struct expr *expr_alloc_comp(enum expr_type type, struct symbol *s1, struct symbol *s2)$/;"	f	typeref:struct:expr *
expr_alloc_one	tools/kconfig/expr.c	/^struct expr *expr_alloc_one(enum expr_type type, struct expr *ce)$/;"	f	typeref:struct:expr *
expr_alloc_or	tools/kconfig/expr.c	/^struct expr *expr_alloc_or(struct expr *e1, struct expr *e2)$/;"	f	typeref:struct:expr *
expr_alloc_symbol	tools/kconfig/expr.c	/^struct expr *expr_alloc_symbol(struct symbol *sym)$/;"	f	typeref:struct:expr *
expr_alloc_two	tools/kconfig/expr.c	/^struct expr *expr_alloc_two(enum expr_type type, struct expr *e1, struct expr *e2)$/;"	f	typeref:struct:expr *
expr_calc_value	tools/kconfig/expr.c	/^tristate expr_calc_value(struct expr *e)$/;"	f	typeref:typename:tristate
expr_compare_type	tools/kconfig/expr.c	/^static int expr_compare_type(enum expr_type t1, enum expr_type t2)$/;"	f	typeref:typename:int	file:
expr_contains_symbol	tools/kconfig/expr.c	/^int expr_contains_symbol(struct expr *dep, struct symbol *sym)$/;"	f	typeref:typename:int
expr_copy	tools/kconfig/expr.c	/^struct expr *expr_copy(const struct expr *org)$/;"	f	typeref:struct:expr *
expr_data	tools/kconfig/expr.h	/^union expr_data {$/;"	u
expr_depends_symbol	tools/kconfig/expr.c	/^bool expr_depends_symbol(struct expr *dep, struct symbol *sym)$/;"	f	typeref:typename:bool
expr_eliminate_dups	tools/kconfig/expr.c	/^struct expr *expr_eliminate_dups(struct expr *e)$/;"	f	typeref:struct:expr *
expr_eliminate_dups1	tools/kconfig/expr.c	/^static void expr_eliminate_dups1(enum expr_type type, struct expr **ep1, struct expr **ep2)$/;"	f	typeref:typename:void	file:
expr_eliminate_eq	tools/kconfig/expr.c	/^void expr_eliminate_eq(struct expr **ep1, struct expr **ep2)$/;"	f	typeref:typename:void
expr_eliminate_yn	tools/kconfig/expr.c	/^static struct expr *expr_eliminate_yn(struct expr *e)$/;"	f	typeref:struct:expr *	file:
expr_eq	tools/kconfig/expr.c	/^int expr_eq(struct expr *e1, struct expr *e2)$/;"	f	typeref:typename:int
expr_fprint	tools/kconfig/expr.c	/^void expr_fprint(struct expr *e, FILE *out)$/;"	f	typeref:typename:void
expr_free	tools/kconfig/expr.c	/^void expr_free(struct expr *e)$/;"	f	typeref:typename:void
expr_gstr_print	tools/kconfig/expr.c	/^void expr_gstr_print(struct expr *e, struct gstr *gs)$/;"	f	typeref:typename:void
expr_gstr_print_revdep	tools/kconfig/expr.c	/^void expr_gstr_print_revdep(struct expr *e, struct gstr *gs,$/;"	f	typeref:typename:void
expr_is_no	tools/kconfig/expr.h	/^static inline int expr_is_no(struct expr *e)$/;"	f	typeref:typename:int
expr_is_yes	tools/kconfig/expr.h	/^static inline int expr_is_yes(struct expr *e)$/;"	f	typeref:typename:int
expr_join_and	tools/kconfig/expr.c	/^static struct expr *expr_join_and(struct expr *e1, struct expr *e2)$/;"	f	typeref:struct:expr *	file:
expr_join_or	tools/kconfig/expr.c	/^static struct expr *expr_join_or(struct expr *e1, struct expr *e2)$/;"	f	typeref:struct:expr *	file:
expr_list_for_each_sym	tools/kconfig/expr.h	/^#define expr_list_for_each_sym(/;"	d
expr_parse_string	tools/kconfig/expr.c	/^static enum string_value_kind expr_parse_string(const char *str,$/;"	f	typeref:enum:string_value_kind	file:
expr_print	tools/kconfig/expr.c	/^void expr_print(struct expr *e,$/;"	f	typeref:typename:void
expr_print_file_helper	tools/kconfig/expr.c	/^static void expr_print_file_helper(void *data, struct symbol *sym, const char *str)$/;"	f	typeref:typename:void	file:
expr_print_gstr_helper	tools/kconfig/expr.c	/^static void expr_print_gstr_helper(void *data, struct symbol *sym, const char *str)$/;"	f	typeref:typename:void	file:
expr_print_revdep	tools/kconfig/expr.c	/^static void expr_print_revdep(struct expr *e,$/;"	f	typeref:typename:void	file:
expr_trans_bool	tools/kconfig/expr.c	/^struct expr *expr_trans_bool(struct expr *e)$/;"	f	typeref:struct:expr *
expr_trans_compare	tools/kconfig/expr.c	/^struct expr *expr_trans_compare(struct expr *e, enum expr_type type, struct symbol *sym)$/;"	f	typeref:struct:expr *
expr_transform	tools/kconfig/expr.c	/^struct expr *expr_transform(struct expr *e)$/;"	f	typeref:struct:expr *
expr_type	tools/kconfig/expr.h	/^enum expr_type {$/;"	g
expr_value	tools/kconfig/expr.h	/^struct expr_value {$/;"	s
fd	tools/kvm-diff/src/kvm.c	/^  int fd;$/;"	m	struct:vcpu	typeref:typename:int	file:
fd	tools/kvm-diff/src/kvm.c	/^  int fd;$/;"	m	struct:vm	typeref:typename:int	file:
fetch_mmio_map	src/device/io/mmio.c	/^static IOMap* fetch_mmio_map(paddr_t addr) {$/;"	f	typeref:typename:IOMap *	file:
fg	tools/kconfig/lxdialog/dialog.h	/^	int fg;		\/* foreground *\/$/;"	m	struct:dialog_color	typeref:typename:int
file	tools/kconfig/build/lexer.lex.c	/^	struct file *file;$/;"	m	struct:__anon8e9702fc0108	typeref:struct:file *	file:
file	tools/kconfig/expr.h	/^	struct file *file;         \/* what file was this property defined *\/$/;"	m	struct:property	typeref:struct:file *
file	tools/kconfig/expr.h	/^	struct file *file;$/;"	m	struct:menu	typeref:struct:file *
file	tools/kconfig/expr.h	/^struct file {$/;"	s
file_list	tools/kconfig/menu.c	/^struct file *file_list;$/;"	v	typeref:struct:file *
file_lookup	tools/kconfig/util.c	/^struct file *file_lookup(const char *name)$/;"	f	typeref:struct:file *
filename	tools/kconfig/mconf.c	/^static char filename[PATH_MAX+1];$/;"	v	typeref:typename:char[]	file:
files.associations	.vscode/settings.json	/^    "files.associations": {$/;"	o
find_mapid_by_addr	include/device/map.h	/^static inline int find_mapid_by_addr(IOMap *maps, int size, paddr_t addr) {$/;"	f	typeref:typename:int
first_alpha	tools/kconfig/lxdialog/util.c	/^int first_alpha(const char *string, const char *exempt)$/;"	f	typeref:typename:int
first_ts	tools/kconfig/build/lexer.lex.c	/^static int last_ts, first_ts;$/;"	v	typeref:typename:int	file:
fix_push_sreg	tools/kvm-diff/src/kvm.c	/^static void fix_push_sreg() {$/;"	f	typeref:typename:void	file:
flags	tools/kconfig/expr.h	/^	int flags;$/;"	m	struct:symbol	typeref:typename:int
flags	tools/kconfig/expr.h	/^	unsigned int flags;$/;"	m	struct:menu	typeref:typename:unsigned int
flavor	tools/kconfig/build/parser.tab.h	/^	enum variable_flavor flavor;$/;"	m	union:YYSTYPE	typeref:enum:variable_flavor
flavor	tools/kconfig/preprocess.c	/^	enum variable_flavor flavor;$/;"	m	struct:variable	typeref:enum:variable_flavor	file:
flex_int16_t	tools/kconfig/build/lexer.lex.c	/^typedef int16_t flex_int16_t;$/;"	t	typeref:typename:int16_t	file:
flex_int16_t	tools/kconfig/build/lexer.lex.c	/^typedef short int flex_int16_t;$/;"	t	typeref:typename:short int	file:
flex_int32_t	tools/kconfig/build/lexer.lex.c	/^typedef int flex_int32_t;$/;"	t	typeref:typename:int	file:
flex_int32_t	tools/kconfig/build/lexer.lex.c	/^typedef int32_t flex_int32_t;$/;"	t	typeref:typename:int32_t	file:
flex_int8_t	tools/kconfig/build/lexer.lex.c	/^typedef int8_t flex_int8_t;$/;"	t	typeref:typename:int8_t	file:
flex_int8_t	tools/kconfig/build/lexer.lex.c	/^typedef signed char flex_int8_t;$/;"	t	typeref:typename:signed char	file:
flex_uint16_t	tools/kconfig/build/lexer.lex.c	/^typedef uint16_t flex_uint16_t;$/;"	t	typeref:typename:uint16_t	file:
flex_uint16_t	tools/kconfig/build/lexer.lex.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	typeref:typename:unsigned short int	file:
flex_uint32_t	tools/kconfig/build/lexer.lex.c	/^typedef uint32_t flex_uint32_t;$/;"	t	typeref:typename:uint32_t	file:
flex_uint32_t	tools/kconfig/build/lexer.lex.c	/^typedef unsigned int flex_uint32_t;$/;"	t	typeref:typename:unsigned int	file:
flex_uint8_t	tools/kconfig/build/lexer.lex.c	/^typedef uint8_t flex_uint8_t;$/;"	t	typeref:typename:uint8_t	file:
flex_uint8_t	tools/kconfig/build/lexer.lex.c	/^typedef unsigned char flex_uint8_t; $/;"	t	typeref:typename:unsigned char	file:
for_all_choices	tools/kconfig/expr.h	/^#define for_all_choices(/;"	d
for_all_defaults	tools/kconfig/expr.h	/^#define for_all_defaults(/;"	d
for_all_prompts	tools/kconfig/expr.h	/^#define for_all_prompts(/;"	d
for_all_properties	tools/kconfig/expr.h	/^#define for_all_properties(/;"	d
for_all_symbols	tools/kconfig/expr.h	/^#define for_all_symbols(/;"	d
fp	src/device/sdcard.c	/^static FILE *fp = NULL;$/;"	v	typeref:typename:FILE *	file:
free_	src/monitor/sdb/watchpoint.c	/^static WP *head = NULL, *free_ = NULL;$/;"	v	typeref:typename:WP *	file:
free_wp	src/monitor/sdb/watchpoint.c	/^WP *free_wp(WP *wp){$/;"	f	typeref:typename:WP *
func	tools/kconfig/preprocess.c	/^	char *(*func)(int argc, char *argv[]);$/;"	m	struct:function	typeref:typename:char * (*)(int argc,char * argv[])	file:
function	tools/kconfig/preprocess.c	/^struct function {$/;"	s	file:
function_expand	tools/kconfig/preprocess.c	/^static char *function_expand(const char *name, int argc, char *argv[])$/;"	f	typeref:typename:char *	file:
function_table	tools/kconfig/preprocess.c	/^static const struct function function_table[] = {$/;"	v	typeref:typename:const struct function[]	file:
gDisassembler	src/utils/disasm.cc	/^static llvm::MCDisassembler *gDisassembler = nullptr;$/;"	v	typeref:typename:llvm::MCDisassembler *	file:
gIP	src/utils/disasm.cc	/^static llvm::MCInstPrinter *gIP = nullptr;$/;"	v	typeref:typename:llvm::MCInstPrinter *	file:
gSTI	src/utils/disasm.cc	/^static llvm::MCSubtargetInfo *gSTI = nullptr;$/;"	v	typeref:typename:llvm::MCSubtargetInfo *	file:
g_nr_guest_inst	src/cpu/cpu-exec.c	/^uint64_t g_nr_guest_inst = 0;$/;"	v	typeref:typename:uint64_t
g_print_step	src/cpu/cpu-exec.c	/^static bool g_print_step = false;$/;"	v	typeref:typename:bool	file:
g_timer	src/cpu/cpu-exec.c	/^static uint64_t g_timer = 0; \/\/ unit: us$/;"	v	typeref:typename:uint64_t	file:
gdb	scripts/native.mk	/^gdb: run-env$/;"	t
gdb_begin	tools/qemu-diff/src/protocol.c	/^static struct gdb_conn* gdb_begin(int fd) {$/;"	f	typeref:struct:gdb_conn *	file:
gdb_begin_inet	tools/qemu-diff/src/protocol.c	/^struct gdb_conn* gdb_begin_inet(const char *addr, uint16_t port) {$/;"	f	typeref:struct:gdb_conn *
gdb_conn	tools/qemu-diff/src/protocol.c	/^struct gdb_conn {$/;"	s	file:
gdb_connect_qemu	tools/qemu-diff/src/gdb-host.c	/^bool gdb_connect_qemu(int port) {$/;"	f	typeref:typename:bool
gdb_decode_hex	tools/qemu-diff/src/protocol.c	/^uint16_t gdb_decode_hex(uint8_t msb, uint8_t lsb) {$/;"	f	typeref:typename:uint16_t
gdb_decode_hex_str	tools/qemu-diff/src/protocol.c	/^uint64_t gdb_decode_hex_str(uint8_t *bytes) {$/;"	f	typeref:typename:uint64_t
gdb_end	tools/qemu-diff/src/protocol.c	/^void gdb_end(struct gdb_conn *conn) {$/;"	f	typeref:typename:void
gdb_exit	tools/qemu-diff/src/gdb-host.c	/^void gdb_exit() {$/;"	f	typeref:typename:void
gdb_getregs	tools/qemu-diff/src/gdb-host.c	/^bool gdb_getregs(union isa_gdb_regs *r) {$/;"	f	typeref:typename:bool
gdb_memcpy_to_qemu	tools/qemu-diff/src/gdb-host.c	/^bool gdb_memcpy_to_qemu(uint32_t dest, void *src, int len) {$/;"	f	typeref:typename:bool
gdb_memcpy_to_qemu_small	tools/qemu-diff/src/gdb-host.c	/^static bool gdb_memcpy_to_qemu_small(uint32_t dest, void *src, int len) {$/;"	f	typeref:typename:bool	file:
gdb_recv	tools/qemu-diff/src/protocol.c	/^uint8_t* gdb_recv(struct gdb_conn *conn, size_t *size) {$/;"	f	typeref:typename:uint8_t *
gdb_send	tools/qemu-diff/src/protocol.c	/^void gdb_send(struct gdb_conn *conn, const uint8_t *command, size_t size) {$/;"	f	typeref:typename:void
gdb_setregs	tools/qemu-diff/src/gdb-host.c	/^bool gdb_setregs(union isa_gdb_regs *r) {$/;"	f	typeref:typename:bool
gdb_si	tools/qemu-diff/src/gdb-host.c	/^bool gdb_si() {$/;"	f	typeref:typename:bool
gdb_start_noack	tools/qemu-diff/src/protocol.c	/^const char* gdb_start_noack(struct gdb_conn *conn) {$/;"	f	typeref:typename:const char *
gen	tools/gen-expr/gen-expr.c	/^static void gen(char kh){$/;"	f	typeref:typename:void	file:
gen_num	tools/gen-expr/gen-expr.c	/^static void gen_num(){$/;"	f	typeref:typename:void	file:
gen_rand_expr	tools/gen-expr/gen-expr.c	/^static void gen_rand_expr() {$/;"	f	typeref:typename:void	file:
gen_rand_op	tools/gen-expr/gen-expr.c	/^static void gen_rand_op(){$/;"	f	typeref:typename:void	file:
get_def_str	tools/kconfig/menu.c	/^static void get_def_str(struct gstr *r, struct menu *menu)$/;"	f	typeref:typename:void	file:
get_dep_str	tools/kconfig/menu.c	/^static void get_dep_str(struct gstr *r, struct expr *expr, const char *prefix)$/;"	f	typeref:typename:void	file:
get_line	tools/kconfig/lxdialog/textbox.c	/^static char *get_line(void)$/;"	f	typeref:typename:char *	file:
get_prompt_str	tools/kconfig/menu.c	/^static void get_prompt_str(struct gstr *r, struct property *prop,$/;"	f	typeref:typename:void	file:
get_relations_str	tools/kconfig/menu.c	/^struct gstr get_relations_str(struct symbol **sym_arr, struct list_head *head)$/;"	f	typeref:struct:gstr
get_symbol_props_str	tools/kconfig/menu.c	/^static void get_symbol_props_str(struct gstr *r, struct symbol *sym,$/;"	f	typeref:typename:void	file:
get_symbol_str	tools/kconfig/menu.c	/^static void get_symbol_str(struct gstr *r, struct symbol *sym,$/;"	f	typeref:typename:void	file:
get_time	src/utils/timer.c	/^uint64_t get_time() {$/;"	f	typeref:typename:uint64_t
get_time_internal	src/utils/timer.c	/^static uint64_t get_time_internal() {$/;"	f	typeref:typename:uint64_t	file:
gpr	src/isa/riscv32/include/isa-def.h	/^  word_t gpr[32];$/;"	m	struct:__anoncc46a1e50108	typeref:typename:word_t[32]
gpr	src/isa/riscv32/local-include/reg.h	/^#define gpr(/;"	d
gpr	src/isa/riscv64/include/isa-def.h	/^  word_t gpr[32];$/;"	m	struct:__anon9270f98a0108	typeref:typename:word_t[32]
gpr	src/isa/riscv64/local-include/reg.h	/^#define gpr(/;"	d
gpr	tools/qemu-diff/include/isa.h	/^    uint32_t gpr[32];$/;"	m	struct:isa_gdb_regs::__anona0204e780108	typeref:typename:uint32_t[32]
gpr	tools/spike-diff/difftest.cc	/^  word_t gpr[32];$/;"	m	struct:diff_context_t	typeref:typename:word_t[32]	file:
gstr	tools/kconfig/lkc.h	/^struct gstr {$/;"	s
guest_to_host	src/memory/paddr.c	/^uint8_t* guest_to_host(paddr_t paddr) { return pmem + paddr - CONFIG_MBASE; }$/;"	f	typeref:typename:uint8_t *
halt_pc	include/utils.h	/^  vaddr_t halt_pc;$/;"	m	struct:__anon80c1a05f0208	typeref:typename:vaddr_t
halt_ret	include/utils.h	/^  uint32_t halt_ret;$/;"	m	struct:__anon80c1a05f0208	typeref:typename:uint32_t
handle_exit	tools/kconfig/mconf.c	/^static int handle_exit(void)$/;"	f	typeref:typename:int	file:
handler	src/device/alarm.c	/^static alarm_handler_t handler[MAX_HANDLER] = {};$/;"	v	typeref:typename:alarm_handler_t[]	file:
handler	src/monitor/sdb/sdb.c	/^  int (*handler) (char *);$/;"	m	struct:__anonf15764c50108	typeref:typename:int (*)(char *)	file:
has_error_code	tools/kvm-diff/src/kvm.c	/^  int has_error_code;$/;"	m	struct:vcpu	typeref:typename:int	file:
hash	tools/fixdep/fixdep.c	/^	unsigned int	hash;$/;"	m	struct:item	typeref:typename:unsigned int	file:
hashtab	tools/fixdep/fixdep.c	/^static struct item *hashtab[HASHSZ];$/;"	v	typeref:struct:item * []	file:
head	src/monitor/sdb/sdb.c	/^WP *head;$/;"	v	typeref:typename:WP *
head	src/monitor/sdb/watchpoint.c	/^static WP *head = NULL, *free_ = NULL;$/;"	v	typeref:typename:WP *	file:
head	tools/kconfig/mconf.c	/^	struct list_head *head;$/;"	m	struct:search_data	typeref:struct:list_head *	file:
header_print_comment	tools/kconfig/confdata.c	/^header_print_comment(FILE *fp, const char *value, void *arg)$/;"	f	typeref:typename:void	file:
header_print_symbol	tools/kconfig/confdata.c	/^header_print_symbol(FILE *fp, struct symbol *sym, const char *value, void *arg)$/;"	f	typeref:typename:void	file:
header_printer_cb	tools/kconfig/confdata.c	/^static struct conf_printer header_printer_cb =$/;"	v	typeref:struct:conf_printer	file:
help	scripts/config.mk	/^help:$/;"	t
help	tools/kconfig/expr.h	/^	char *help;$/;"	m	struct:menu	typeref:typename:char *
help	tools/kconfig/parser.y	/^help: help_start T_HELPTEXT$/;"	l
help_start	tools/kconfig/parser.y	/^help_start: T_HELP T_EOL$/;"	l
helpnewconfig	tools/kconfig/conf.c	/^	helpnewconfig,$/;"	e	enum:input_mode	file:
hex_encode	tools/qemu-diff/src/protocol.c	/^uint8_t hex_encode(uint8_t digit) {$/;"	f	typeref:typename:uint8_t
hex_nibble	tools/qemu-diff/src/protocol.c	/^hex_nibble(uint8_t hex) {$/;"	f	typeref:typename:uint8_t	file:
hi	tools/qemu-diff/include/isa.h	/^    uint32_t status, lo, hi, badvaddr, cause, pc;$/;"	m	struct:isa_gdb_regs::__anona0204e780108	typeref:typename:uint32_t
high	include/device/map.h	/^  paddr_t high;$/;"	m	struct:__anon4777232b0108	typeref:typename:paddr_t
hl	tools/kconfig/lxdialog/dialog.h	/^	int hl;		\/* highlight this item *\/$/;"	m	struct:dialog_color	typeref:typename:int
host_read	include/memory/host.h	/^static inline word_t host_read(void *addr, int len) {$/;"	f	typeref:typename:word_t
host_to_guest	src/memory/paddr.c	/^paddr_t host_to_guest(uint8_t *haddr) { return haddr - pmem + CONFIG_MBASE; }$/;"	f	typeref:typename:paddr_t
host_write	include/memory/host.h	/^static inline void host_write(void *addr, int len, word_t data) {$/;"	f	typeref:typename:void
hscroll	tools/kconfig/lxdialog/textbox.c	/^static int hscroll;$/;"	v	typeref:typename:int	file:
i	tools/kconfig/build/lexer.lex.c	/^	int ts, i;$/;"	v	typeref:typename:int
i8042_data_io_handler	src/device/keyboard.c	/^static void i8042_data_io_handler(uint32_t offset, int len, bool is_write) {$/;"	f	typeref:typename:void	file:
i8042_data_port_base	src/device/keyboard.c	/^static uint32_t *i8042_data_port_base = NULL;$/;"	v	typeref:typename:uint32_t *	file:
idx	src/device/alarm.c	/^static int idx = 0;$/;"	v	typeref:typename:int	file:
if_end	tools/kconfig/parser.y	/^if_end: end$/;"	l
if_entry	tools/kconfig/parser.y	/^if_entry: T_IF expr T_EOL$/;"	l
if_expr	tools/kconfig/parser.y	/^if_expr:  \/* empty *\/			{ $$ = NULL; }$/;"	l
if_stmt	tools/kconfig/parser.y	/^if_stmt: if_entry stmt_list if_end$/;"	l
if_stmt_in_choice	tools/kconfig/parser.y	/^if_stmt_in_choice: if_entry stmt_list_in_choice if_end$/;"	l
img	src/isa/riscv32/init.c	/^static const uint32_t img [] = {$/;"	v	typeref:typename:const uint32_t[]	file:
img	src/isa/riscv64/init.c	/^static const uint32_t img [] = {$/;"	v	typeref:typename:const uint32_t[]	file:
img_file	src/monitor/monitor.c	/^static char *img_file = NULL;$/;"	v	typeref:typename:char *	file:
immB	src/isa/riscv64/inst.c	/^#define immB(/;"	d	file:
immI	src/isa/riscv32/inst.c	/^#define immI(/;"	d	file:
immI	src/isa/riscv64/inst.c	/^#define immI(/;"	d	file:
immJ	src/isa/riscv64/inst.c	/^#define immJ(/;"	d	file:
immS	src/isa/riscv32/inst.c	/^#define immS(/;"	d	file:
immS	src/isa/riscv64/inst.c	/^#define immS(/;"	d	file:
immU	src/isa/riscv32/inst.c	/^#define immU(/;"	d	file:
immU	src/isa/riscv64/inst.c	/^#define immU(/;"	d	file:
implied	tools/kconfig/expr.h	/^	struct expr_value implied;$/;"	m	struct:symbol	typeref:struct:expr_value
in	tools/qemu-diff/src/protocol.c	/^  FILE *in;$/;"	m	struct:gdb_conn	typeref:typename:FILE *	file:
in_pmem	include/memory/paddr.h	/^static inline bool in_pmem(paddr_t addr) {$/;"	f	typeref:typename:bool
inc_dependencies	tools/spike-diff/Makefile	/^inc_dependencies = fesvr riscv disasm customext fdt softfloat spike_main spike_dasm build$/;"	m
indent	tools/kconfig/conf.c	/^static int indent = 1;$/;"	v	typeref:typename:int	file:
indent	tools/kconfig/mconf.c	/^static int indent;$/;"	v	typeref:typename:int	file:
index	tools/kconfig/expr.h	/^	int index;$/;"	m	struct:jump_key	typeref:typename:int
init_alarm	src/device/alarm.c	/^void init_alarm() {$/;"	f	typeref:typename:void
init_audio	src/device/audio.c	/^void init_audio() {$/;"	f	typeref:typename:void
init_device	src/device/device.c	/^void init_device() {$/;"	f	typeref:typename:void
init_dialog	tools/kconfig/lxdialog/util.c	/^int init_dialog(const char *backtitle)$/;"	f	typeref:typename:int
init_dialog_colors	tools/kconfig/lxdialog/util.c	/^static void init_dialog_colors(void)$/;"	f	typeref:typename:void	file:
init_difftest	src/cpu/difftest/dut.c	/^void init_difftest(char *ref_so_file, long img_size, int port) { }$/;"	f	typeref:typename:void
init_difftest	src/cpu/difftest/dut.c	/^void init_difftest(char *ref_so_file, long img_size, int port) {$/;"	f	typeref:typename:void
init_disasm	src/utils/disasm.cc	/^extern "C" void init_disasm(const char *triple) {$/;"	f	typeref:typename:void
init_disk	src/device/disk.c	/^void init_disk() {$/;"	f	typeref:typename:void
init_i8042	src/device/keyboard.c	/^void init_i8042() {$/;"	f	typeref:typename:void
init_isa	src/isa/riscv32/init.c	/^void init_isa() {$/;"	f	typeref:typename:void
init_isa	src/isa/riscv64/init.c	/^void init_isa() {$/;"	f	typeref:typename:void
init_isa	tools/qemu-diff/src/isa.c	/^void init_isa() {$/;"	f	typeref:typename:void
init_keymap	src/device/keyboard.c	/^static void init_keymap() {$/;"	f	typeref:typename:void	file:
init_log	src/utils/log.c	/^void init_log(const char *log_file) {$/;"	f	typeref:typename:void
init_map	src/device/io/map.c	/^void init_map() {$/;"	f	typeref:typename:void
init_mem	src/memory/paddr.c	/^void init_mem() {$/;"	f	typeref:typename:void
init_monitor	src/monitor/monitor.c	/^void init_monitor(int argc, char *argv[]) {$/;"	f	typeref:typename:void
init_one_color	tools/kconfig/lxdialog/util.c	/^static void init_one_color(struct dialog_color *color)$/;"	f	typeref:typename:void	file:
init_rand	src/utils/rand.c	/^void init_rand() {$/;"	f	typeref:typename:void
init_regex	src/monitor/sdb/expr.c	/^void init_regex() {$/;"	f	typeref:typename:void
init_screen	src/device/vga.c	/^static void init_screen() {$/;"	f	typeref:typename:void	file:
init_screen	src/device/vga.c	/^static void init_screen() {}$/;"	f	typeref:typename:void	file:
init_sdb	src/monitor/sdb/sdb.c	/^void init_sdb() {$/;"	f	typeref:typename:void
init_sdcard	src/device/sdcard.c	/^void init_sdcard() {$/;"	f	typeref:typename:void
init_serial	src/device/serial.c	/^void init_serial() {$/;"	f	typeref:typename:void
init_timer	src/device/timer.c	/^void init_timer() {$/;"	f	typeref:typename:void
init_vga	src/device/vga.c	/^void init_vga() {$/;"	f	typeref:typename:void
init_wp_pool	src/monitor/sdb/watchpoint.c	/^void init_wp_pool() {$/;"	f	typeref:typename:void
input	tools/kconfig/parser.y	/^input: mainmenu_stmt stmt_list | stmt_list;$/;"	l
input_mode	tools/kconfig/conf.c	/^enum input_mode {$/;"	g	file:
input_mode	tools/kconfig/conf.c	/^static enum input_mode input_mode = oldaskconfig;$/;"	v	typeref:enum:input_mode	file:
inputbox	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color inputbox;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
inputbox_border	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color inputbox_border;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
inputbox_instructions_hex	tools/kconfig/mconf.c	/^inputbox_instructions_hex[] =$/;"	v	typeref:typename:const char[]	file:
inputbox_instructions_int	tools/kconfig/mconf.c	/^inputbox_instructions_int[] =$/;"	v	typeref:typename:const char[]	file:
inputbox_instructions_string	tools/kconfig/mconf.c	/^inputbox_instructions_string[] =$/;"	v	typeref:typename:const char[]	file:
inst	src/isa/riscv32/include/isa-def.h	/^  } inst;$/;"	m	struct:__anoncc46a1e50208	typeref:union:__anoncc46a1e50208::__anoncc46a1e5030a
inst	src/isa/riscv64/include/isa-def.h	/^  } inst;$/;"	m	struct:__anon9270f98a0208	typeref:union:__anon9270f98a0208::__anon9270f98a030a
inst_fetch	include/cpu/ifetch.h	/^static inline uint32_t inst_fetch(vaddr_t *pc, int len) {$/;"	f	typeref:typename:uint32_t
int_wp_state	tools/kvm-diff/src/kvm.c	/^  int int_wp_state;$/;"	m	struct:vcpu	typeref:typename:int	file:
invalid_inst	src/engine/interpreter/hostcall.c	/^void invalid_inst(vaddr_t thispc) {$/;"	f	typeref:typename:void
invoke_callback	src/device/io/map.c	/^static void invoke_callback(io_callback_t c, paddr_t offset, int len, bool is_write) {$/;"	f	typeref:typename:void	file:
io_callback_t	include/device/map.h	/^typedef void(*io_callback_t)(uint32_t, int, bool);$/;"	t	typeref:typename:void (*)(uint32_t,int,bool)
io_read	include/macro.h	/^#define io_read(/;"	d
io_space	src/device/io/map.c	/^static uint8_t *io_space = NULL;$/;"	v	typeref:typename:uint8_t *	file:
io_write	include/macro.h	/^#define io_write(/;"	d
ioaddr	resource/sdcard/nemu.c	/^	void __iomem		*ioaddr;$/;"	m	struct:nemu_host	typeref:typename:void __iomem *	file:
ioaddr_t	include/common.h	/^typedef uint16_t ioaddr_t;$/;"	t	typeref:typename:uint16_t
is_batch_mode	src/monitor/sdb/sdb.c	/^static int is_batch_mode = false;$/;"	v	typeref:typename:int	file:
is_batch_mode	src/monitor/sdb/sdb.c	/^static int is_batch_mode = true;$/;"	v	typeref:typename:int	file:
is_defined_config	tools/fixdep/fixdep.c	/^static int is_defined_config(const char *name, int len, unsigned int hash)$/;"	f	typeref:typename:int	file:
is_dir	tools/kconfig/confdata.c	/^static bool is_dir(const char *path)$/;"	f	typeref:typename:bool	file:
is_end_of_str	tools/kconfig/preprocess.c	/^static bool is_end_of_str(char c)$/;"	f	typeref:typename:bool	file:
is_end_of_token	tools/kconfig/preprocess.c	/^static bool is_end_of_token(char c)$/;"	f	typeref:typename:bool	file:
is_exit_status_bad	src/utils/state.c	/^int is_exit_status_bad() {$/;"	f	typeref:typename:int
is_ignored_file	tools/fixdep/fixdep.c	/^static int is_ignored_file(const char *s, int len)$/;"	f	typeref:typename:int	file:
is_present	tools/kconfig/confdata.c	/^static bool is_present(const char *path)$/;"	f	typeref:typename:bool	file:
is_same	tools/kconfig/confdata.c	/^static bool is_same(const char *file1, const char *file2)$/;"	f	typeref:typename:bool	file:
is_skip_ref	src/cpu/difftest/dut.c	/^static bool is_skip_ref = false;$/;"	v	typeref:typename:bool	file:
isa	include/cpu/decode.h	/^  ISADecodeInfo isa;$/;"	m	struct:Decode	typeref:typename:ISADecodeInfo
isa_difftest_attach	src/isa/riscv32/difftest/dut.c	/^void isa_difftest_attach() {$/;"	f	typeref:typename:void
isa_difftest_attach	src/isa/riscv64/difftest/dut.c	/^void isa_difftest_attach() {$/;"	f	typeref:typename:void
isa_difftest_checkregs	src/isa/riscv32/difftest/dut.c	/^bool isa_difftest_checkregs(CPU_state *ref_r, vaddr_t pc) {$/;"	f	typeref:typename:bool
isa_difftest_checkregs	src/isa/riscv64/difftest/dut.c	/^bool isa_difftest_checkregs(CPU_state *ref_r, vaddr_t pc) {$/;"	f	typeref:typename:bool
isa_exec_once	src/isa/riscv32/inst.c	/^int isa_exec_once(Decode *s) {$/;"	f	typeref:typename:int
isa_exec_once	src/isa/riscv64/inst.c	/^int isa_exec_once(Decode *s) {$/;"	f	typeref:typename:int
isa_gdb_regs	tools/qemu-diff/include/isa.h	/^union isa_gdb_regs {$/;"	u
isa_logo	src/isa/riscv32/logo.c	/^unsigned char isa_logo[] = {$/;"	v	typeref:typename:unsigned char[]
isa_logo	src/isa/riscv64/logo.c	/^unsigned char isa_logo[] = {$/;"	v	typeref:typename:unsigned char[]
isa_mmu_check	src/isa/riscv32/include/isa-def.h	/^#define isa_mmu_check(/;"	d
isa_mmu_check	src/isa/riscv64/include/isa-def.h	/^#define isa_mmu_check(/;"	d
isa_mmu_translate	src/isa/riscv32/system/mmu.c	/^paddr_t isa_mmu_translate(vaddr_t vaddr, int len, int type) {$/;"	f	typeref:typename:paddr_t
isa_mmu_translate	src/isa/riscv64/system/mmu.c	/^paddr_t isa_mmu_translate(vaddr_t vaddr, int len, int type) {$/;"	f	typeref:typename:paddr_t
isa_query_intr	src/isa/riscv32/system/intr.c	/^word_t isa_query_intr() {$/;"	f	typeref:typename:word_t
isa_query_intr	src/isa/riscv64/system/intr.c	/^word_t isa_query_intr() {$/;"	f	typeref:typename:word_t
isa_raise_intr	src/isa/riscv32/system/intr.c	/^word_t isa_raise_intr(word_t NO, vaddr_t epc) {$/;"	f	typeref:typename:word_t
isa_raise_intr	src/isa/riscv64/system/intr.c	/^word_t isa_raise_intr(word_t NO, vaddr_t epc) {$/;"	f	typeref:typename:word_t
isa_reg_display	src/isa/riscv32/reg.c	/^void isa_reg_display() {$/;"	f	typeref:typename:void
isa_reg_display	src/isa/riscv64/reg.c	/^void isa_reg_display() {$/;"	f	typeref:typename:void
isa_reg_str2val	src/isa/riscv32/reg.c	/^word_t isa_reg_str2val(const char *s, bool *success) {$/;"	f	typeref:typename:word_t
isa_reg_str2val	src/isa/riscv64/reg.c	/^word_t isa_reg_str2val(const char *s, bool *success) {$/;"	f	typeref:typename:word_t
isdef	include/macro.h	/^#define isdef(/;"	d
item	tools/fixdep/fixdep.c	/^struct item {$/;"	s	file:
item	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color item;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
item_activate_selected	tools/kconfig/lxdialog/util.c	/^int item_activate_selected(void)$/;"	f	typeref:typename:int
item_add_str	tools/kconfig/lxdialog/util.c	/^void item_add_str(const char *fmt, ...)$/;"	f	typeref:typename:void
item_count	tools/kconfig/lxdialog/util.c	/^int item_count(void)$/;"	f	typeref:typename:int
item_cur	tools/kconfig/lxdialog/util.c	/^struct dialog_list *item_cur;$/;"	v	typeref:struct:dialog_list *
item_data	tools/kconfig/lxdialog/util.c	/^void *item_data(void)$/;"	f	typeref:typename:void *
item_foreach	tools/kconfig/lxdialog/dialog.h	/^#define item_foreach(/;"	d
item_head	tools/kconfig/lxdialog/util.c	/^struct dialog_list *item_head;$/;"	v	typeref:struct:dialog_list *
item_is_selected	tools/kconfig/lxdialog/util.c	/^int item_is_selected(void)$/;"	f	typeref:typename:int
item_is_tag	tools/kconfig/lxdialog/util.c	/^int item_is_tag(char tag)$/;"	f	typeref:typename:int
item_make	tools/kconfig/lxdialog/util.c	/^void item_make(const char *fmt, ...)$/;"	f	typeref:typename:void
item_n	tools/kconfig/lxdialog/util.c	/^int item_n(void)$/;"	f	typeref:typename:int
item_nil	tools/kconfig/lxdialog/util.c	/^struct dialog_list item_nil;$/;"	v	typeref:struct:dialog_list
item_reset	tools/kconfig/lxdialog/util.c	/^void item_reset(void)$/;"	f	typeref:typename:void
item_selected	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color item_selected;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
item_set	tools/kconfig/lxdialog/util.c	/^void item_set(int n)$/;"	f	typeref:typename:void
item_set_data	tools/kconfig/lxdialog/util.c	/^void item_set_data(void *ptr)$/;"	f	typeref:typename:void
item_set_selected	tools/kconfig/lxdialog/util.c	/^void item_set_selected(int val)$/;"	f	typeref:typename:void
item_set_tag	tools/kconfig/lxdialog/util.c	/^void item_set_tag(char tag)$/;"	f	typeref:typename:void
item_str	tools/kconfig/lxdialog/util.c	/^const char *item_str(void)$/;"	f	typeref:typename:const char *
item_tag	tools/kconfig/lxdialog/util.c	/^char item_tag(void)$/;"	f	typeref:typename:char
item_x	tools/kconfig/lxdialog/checklist.c	/^static int list_width, check_x, item_x;$/;"	v	typeref:typename:int	file:
item_x	tools/kconfig/lxdialog/menubox.c	/^static int menu_width, item_x;$/;"	v	typeref:typename:int	file:
j	src/monitor/sdb/expr.c	/^static int j=0;$/;"	v	typeref:typename:int	file:
jump_key	tools/kconfig/expr.h	/^struct jump_key {$/;"	s
k_signed	tools/kconfig/expr.c	/^	k_signed,$/;"	e	enum:string_value_kind	file:
k_string	tools/kconfig/expr.c	/^	k_string,$/;"	e	enum:string_value_kind	file:
k_unsigned	tools/kconfig/expr.c	/^	k_unsigned,$/;"	e	enum:string_value_kind	file:
kconfig_print_comment	tools/kconfig/confdata.c	/^kconfig_print_comment(FILE *fp, const char *value, void *arg)$/;"	f	typeref:typename:void	file:
kconfig_print_symbol	tools/kconfig/confdata.c	/^kconfig_print_symbol(FILE *fp, struct symbol *sym, const char *value, void *arg)$/;"	f	typeref:typename:void	file:
kconfig_printer_cb	tools/kconfig/confdata.c	/^static struct conf_printer kconfig_printer_cb =$/;"	v	typeref:struct:conf_printer	file:
key_dequeue	src/device/keyboard.c	/^static uint32_t key_dequeue() {$/;"	f	typeref:typename:uint32_t	file:
key_enqueue	src/device/keyboard.c	/^static void key_enqueue(uint32_t am_scancode) {$/;"	f	typeref:typename:void	file:
key_f	src/device/keyboard.c	/^static int key_f = 0, key_r = 0;$/;"	v	typeref:typename:int	file:
key_queue	src/device/keyboard.c	/^static int key_queue[KEY_QUEUE_LEN] = {};$/;"	v	typeref:typename:int[]	file:
key_r	src/device/keyboard.c	/^static int key_f = 0, key_r = 0;$/;"	v	typeref:typename:int	file:
keymap	src/device/keyboard.c	/^static uint32_t keymap[256] = {};$/;"	v	typeref:typename:uint32_t[256]	file:
keys	tools/kconfig/mconf.c	/^	int *keys;$/;"	m	struct:search_data	typeref:typename:int *	file:
kvm_exec	tools/kvm-diff/src/kvm.c	/^static void kvm_exec(uint64_t n) {$/;"	f	typeref:typename:void	file:
kvm_getsregs	tools/kvm-diff/src/kvm.c	/^static void kvm_getsregs(struct kvm_sregs *r) {$/;"	f	typeref:typename:void	file:
kvm_run	tools/kvm-diff/src/kvm.c	/^  struct kvm_run *kvm_run;$/;"	m	struct:vcpu	typeref:struct:kvm_run *	file:
kvm_set_step_mode	tools/kvm-diff/src/kvm.c	/^static void kvm_set_step_mode(bool watch, uint32_t watch_addr) {$/;"	f	typeref:typename:void	file:
kvm_setregs	tools/kvm-diff/src/kvm.c	/^static void kvm_setregs(const struct kvm_regs *r) {$/;"	f	typeref:typename:void	file:
kvm_setsregs	tools/kvm-diff/src/kvm.c	/^static void kvm_setsregs(const struct kvm_sregs *r) {$/;"	f	typeref:typename:void	file:
last_entry_ptr	tools/kconfig/menu.c	/^static struct menu **last_entry_ptr;$/;"	v	typeref:struct:menu **	file:
last_ts	tools/kconfig/build/lexer.lex.c	/^static int last_ts, first_ts;$/;"	v	typeref:typename:int	file:
left	tools/kconfig/expr.h	/^	union expr_data left, right;$/;"	m	struct:expr	typeref:union:expr_data
len	tools/fixdep/fixdep.c	/^	unsigned int	len;$/;"	m	struct:item	typeref:typename:unsigned int	file:
len	tools/gen-expr/gen-expr.c	/^static int len=0;$/;"	v	typeref:typename:int	file:
len	tools/kconfig/lkc.h	/^	size_t len;$/;"	m	struct:gstr	typeref:typename:size_t
lib_dependencies	tools/spike-diff/Makefile	/^lib_dependencies = libspike_main.a libriscv.a libdisasm.a libsoftfloat.a libfesvr.a libfdt.a$/;"	m
likely	include/macro.h	/^#define likely(/;"	d
line	tools/kconfig/conf.c	/^static char line[PATH_MAX];$/;"	v	typeref:typename:char[]	file:
lineno	tools/kconfig/build/lexer.lex.c	/^	int lineno;$/;"	m	struct:__anon8e9702fc0108	typeref:typename:int	file:
lineno	tools/kconfig/expr.h	/^	int lineno;                \/* what lineno was this property defined *\/$/;"	m	struct:property	typeref:typename:int
lineno	tools/kconfig/expr.h	/^	int lineno;$/;"	m	struct:file	typeref:typename:int
lineno	tools/kconfig/expr.h	/^	int lineno;$/;"	m	struct:menu	typeref:typename:int
list	tools/kconfig/expr.h	/^	struct menu *list;$/;"	m	struct:menu	typeref:struct:menu *
list_add_tail	tools/kconfig/list.h	/^static inline void list_add_tail(struct list_head *_new, struct list_head *head)$/;"	f	typeref:typename:void
list_del	tools/kconfig/list.h	/^static inline void list_del(struct list_head *entry)$/;"	f	typeref:typename:void
list_empty	tools/kconfig/list.h	/^static inline int list_empty(const struct list_head *head)$/;"	f	typeref:typename:int
list_entry	tools/kconfig/list.h	/^#define list_entry(/;"	d
list_for_each_entry	tools/kconfig/list.h	/^#define list_for_each_entry(/;"	d
list_for_each_entry_safe	tools/kconfig/list.h	/^#define list_for_each_entry_safe(/;"	d
list_head	tools/kconfig/list.h	/^struct list_head {$/;"	s
list_width	tools/kconfig/lxdialog/checklist.c	/^static int list_width, check_x, item_x;$/;"	v	typeref:typename:int	file:
listnewconfig	tools/kconfig/conf.c	/^	listnewconfig,$/;"	e	enum:input_mode	file:
lo	tools/qemu-diff/include/isa.h	/^    uint32_t status, lo, hi, badvaddr, cause, pc;$/;"	m	struct:isa_gdb_regs::__anona0204e780108	typeref:typename:uint32_t
load_config_help	tools/kconfig/mconf.c	/^load_config_help[] =$/;"	v	typeref:typename:const char[]	file:
load_config_text	tools/kconfig/mconf.c	/^load_config_text[] =$/;"	v	typeref:typename:const char[]	file:
load_img	src/monitor/monitor.c	/^static long load_img() {$/;"	f	typeref:typename:long	file:
lock	resource/sdcard/nemu.c	/^	spinlock_t		lock;$/;"	m	struct:nemu_host	typeref:typename:spinlock_t	file:
log_enable	src/utils/log.c	/^bool log_enable() {$/;"	f	typeref:typename:bool
log_file	src/monitor/monitor.c	/^static char *log_file = NULL;$/;"	v	typeref:typename:char *	file:
log_fp	src/utils/log.c	/^FILE *log_fp = NULL;$/;"	v	typeref:typename:FILE *
log_write	include/utils.h	/^#define log_write(/;"	d
logic_type	tools/kconfig/parser.y	/^logic_type:$/;"	l
long_opts	tools/kconfig/conf.c	/^static struct option long_opts[] = {$/;"	v	typeref:struct:option[]	file:
low	include/device/map.h	/^  paddr_t low;$/;"	m	struct:__anon4777232b0108	typeref:typename:paddr_t
macro	include/cpu/decode.h	/^#define macro(/;"	d
macro16	include/cpu/decode.h	/^#define macro16(/;"	d
macro2	include/cpu/decode.h	/^#define macro2(/;"	d
macro32	include/cpu/decode.h	/^#define macro32(/;"	d
macro4	include/cpu/decode.h	/^#define macro4(/;"	d
macro64	include/cpu/decode.h	/^#define macro64(/;"	d
macro8	include/cpu/decode.h	/^#define macro8(/;"	d
main	src/nemu-main.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	tools/fixdep/fixdep.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	tools/gen-expr/gen-expr.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	tools/kconfig/conf.c	/^int main(int ac, char **av)$/;"	f	typeref:typename:int
main	tools/kconfig/mconf.c	/^int main(int ac, char **av)$/;"	f	typeref:typename:int
mainmenu_stmt	tools/kconfig/parser.y	/^mainmenu_stmt: T_MAINMENU T_WORD_QUOTE T_EOL$/;"	l
make_parent_dir	tools/kconfig/confdata.c	/^static int make_parent_dir(const char *path)$/;"	f	typeref:typename:int	file:
make_token	src/monitor/sdb/expr.c	/^static bool make_token(char *e) {$/;"	f	typeref:typename:bool	file:
map_inside	include/device/map.h	/^static inline bool map_inside(IOMap *map, paddr_t addr) {$/;"	f	typeref:typename:bool
map_read	src/device/io/map.c	/^word_t map_read(paddr_t addr, int len, IOMap *map) {$/;"	f	typeref:typename:word_t
map_write	src/device/io/map.c	/^void map_write(paddr_t addr, int len, word_t data, IOMap *map) {$/;"	f	typeref:typename:void
maps	src/device/io/mmio.c	/^static IOMap maps[NR_MAP] = {};$/;"	v	typeref:typename:IOMap[]	file:
maps	src/device/io/port-io.c	/^static IOMap maps[NR_MAP] = {};$/;"	v	typeref:typename:IOMap[]	file:
max_args	tools/kconfig/preprocess.c	/^	unsigned int max_args;$/;"	m	struct:function	typeref:typename:unsigned int	file:
max_clk	resource/sdcard/nemu.c	/^	unsigned int		max_clk;	\/* Max possible freq *\/$/;"	m	struct:nemu_host	typeref:typename:unsigned int	file:
max_width	tools/kconfig/lkc.h	/^	int max_width;$/;"	m	struct:gstr	typeref:typename:int
mbr	tools/kvm-diff/src/kvm.c	/^static const uint8_t mbr[] = {$/;"	v	typeref:typename:const uint8_t[]	file:
mbr	tools/qemu-diff/src/isa.c	/^static uint8_t mbr[] = {$/;"	v	typeref:typename:uint8_t[]	file:
mconf	tools/kconfig/Makefile	/^mconf:$/;"	t
mconf_readme	tools/kconfig/mconf.c	/^static const char mconf_readme[] =$/;"	v	typeref:typename:const char[]	file:
mem	tools/kvm-diff/src/kvm.c	/^  uint8_t *mem;$/;"	m	struct:vm	typeref:typename:uint8_t *	file:
menu	tools/kconfig/build/parser.tab.h	/^	struct menu *menu;$/;"	m	union:YYSTYPE	typeref:struct:menu *
menu	tools/kconfig/expr.h	/^	struct menu *menu;         \/* the menu the property are associated with$/;"	m	struct:property	typeref:struct:menu *
menu	tools/kconfig/expr.h	/^struct menu {$/;"	s
menu	tools/kconfig/parser.y	/^menu: T_MENU T_WORD_QUOTE T_EOL$/;"	l
menu_add_dep	tools/kconfig/menu.c	/^void menu_add_dep(struct expr *dep)$/;"	f	typeref:typename:void
menu_add_entry	tools/kconfig/menu.c	/^void menu_add_entry(struct symbol *sym)$/;"	f	typeref:typename:void
menu_add_expr	tools/kconfig/menu.c	/^void menu_add_expr(enum prop_type type, struct expr *expr, struct expr *dep)$/;"	f	typeref:typename:void
menu_add_menu	tools/kconfig/menu.c	/^struct menu *menu_add_menu(void)$/;"	f	typeref:struct:menu *
menu_add_option_allnoconfig_y	tools/kconfig/menu.c	/^void menu_add_option_allnoconfig_y(void)$/;"	f	typeref:typename:void
menu_add_option_defconfig_list	tools/kconfig/menu.c	/^void menu_add_option_defconfig_list(void)$/;"	f	typeref:typename:void
menu_add_option_modules	tools/kconfig/menu.c	/^void menu_add_option_modules(void)$/;"	f	typeref:typename:void
menu_add_prompt	tools/kconfig/menu.c	/^struct property *menu_add_prompt(enum prop_type type, char *prompt,$/;"	f	typeref:struct:property *
menu_add_prop	tools/kconfig/menu.c	/^static struct property *menu_add_prop(enum prop_type type, struct expr *expr,$/;"	f	typeref:struct:property *	file:
menu_add_symbol	tools/kconfig/menu.c	/^void menu_add_symbol(enum prop_type type, struct symbol *sym, struct expr *dep)$/;"	f	typeref:typename:void
menu_add_visibility	tools/kconfig/menu.c	/^void menu_add_visibility(struct expr *expr)$/;"	f	typeref:typename:void
menu_end	tools/kconfig/parser.y	/^menu_end: end$/;"	l
menu_end_menu	tools/kconfig/menu.c	/^void menu_end_menu(void)$/;"	f	typeref:typename:void
menu_entry	tools/kconfig/parser.y	/^menu_entry: menu menu_option_list$/;"	l
menu_finalize	tools/kconfig/menu.c	/^void menu_finalize(struct menu *parent)$/;"	f	typeref:typename:void
menu_get_ext_help	tools/kconfig/menu.c	/^void menu_get_ext_help(struct menu *menu, struct gstr *help)$/;"	f	typeref:typename:void
menu_get_help	tools/kconfig/menu.c	/^const char *menu_get_help(struct menu *menu)$/;"	f	typeref:typename:const char *
menu_get_parent_menu	tools/kconfig/menu.c	/^struct menu *menu_get_parent_menu(struct menu *menu)$/;"	f	typeref:struct:menu *
menu_get_prompt	tools/kconfig/menu.c	/^const char *menu_get_prompt(struct menu *menu)$/;"	f	typeref:typename:const char *
menu_get_root_menu	tools/kconfig/menu.c	/^struct menu *menu_get_root_menu(struct menu *menu)$/;"	f	typeref:struct:menu *
menu_has_help	tools/kconfig/menu.c	/^bool menu_has_help(struct menu *menu)$/;"	f	typeref:typename:bool
menu_has_prompt	tools/kconfig/menu.c	/^bool menu_has_prompt(struct menu *menu)$/;"	f	typeref:typename:bool
menu_instructions	tools/kconfig/mconf.c	/^menu_instructions[] =$/;"	v	typeref:typename:const char[]	file:
menu_is_empty	tools/kconfig/menu.c	/^bool menu_is_empty(struct menu *menu)$/;"	f	typeref:typename:bool
menu_is_visible	tools/kconfig/menu.c	/^bool menu_is_visible(struct menu *menu)$/;"	f	typeref:typename:bool
menu_option_list	tools/kconfig/parser.y	/^menu_option_list:$/;"	l
menu_set_type	tools/kconfig/menu.c	/^void menu_set_type(int type)$/;"	f	typeref:typename:void
menu_stmt	tools/kconfig/parser.y	/^menu_stmt: menu_entry stmt_list menu_end$/;"	l
menu_validate_number	tools/kconfig/menu.c	/^static int menu_validate_number(struct symbol *sym, struct symbol *sym2)$/;"	f	typeref:typename:int	file:
menu_warn	tools/kconfig/menu.c	/^void menu_warn(struct menu *menu, const char *fmt, ...)$/;"	f	typeref:typename:void
menu_width	tools/kconfig/lxdialog/menubox.c	/^static int menu_width, item_x;$/;"	v	typeref:typename:int	file:
menubox	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color menubox;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
menubox_border	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color menubox_border;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
menuconfig	scripts/config.mk	/^menuconfig: $(MCONF) $(CONF) $(FIXDEP)$/;"	t
menuconfig_entry_start	tools/kconfig/parser.y	/^menuconfig_entry_start: T_MENUCONFIG nonconst_symbol T_EOL$/;"	l
menuconfig_stmt	tools/kconfig/parser.y	/^menuconfig_stmt: menuconfig_entry_start config_option_list$/;"	l
min_args	tools/kconfig/preprocess.c	/^	unsigned int min_args;$/;"	m	struct:function	typeref:typename:unsigned int	file:
mmc	resource/sdcard/nemu.c	/^	struct mmc_host		*mmc;$/;"	m	struct:nemu_host	typeref:struct:mmc_host *	file:
mmc_driver_type_mask	src/device/mmc.h	/^#define mmc_driver_type_mask(/;"	d
mmio	tools/kvm-diff/src/kvm.c	/^  uint8_t *mmio;$/;"	m	struct:vm	typeref:typename:uint8_t *	file:
mmio_read	src/device/io/mmio.c	/^word_t mmio_read(paddr_t addr, int len) {$/;"	f	typeref:typename:word_t
mmio_write	src/device/io/mmio.c	/^void mmio_write(paddr_t addr, int len, word_t data) {$/;"	f	typeref:typename:void
mod	tools/kconfig/expr.h	/^	no, mod, yes$/;"	e	enum:tristate
mod2yesconfig	tools/kconfig/conf.c	/^	mod2yesconfig,$/;"	e	enum:input_mode	file:
modules_sym	tools/kconfig/symbol.c	/^struct symbol *modules_sym;$/;"	v	typeref:struct:symbol *
modules_val	tools/kconfig/symbol.c	/^static tristate modules_val;$/;"	v	typeref:typename:tristate	file:
mrq	resource/sdcard/nemu.c	/^	struct mmc_request	*mrq;		\/* Current request *\/$/;"	m	struct:nemu_host	typeref:struct:mmc_request *	file:
mutex	resource/sdcard/nemu.c	/^	struct mutex		mutex;$/;"	m	struct:nemu_host	typeref:struct:mutex	file:
n_data	src/monitor/sdb/sdb.c	/^  uint64_t n_data;$/;"	m	struct:watchpoint	typeref:typename:uint64_t	file:
n_data	src/monitor/sdb/watchpoint.c	/^  uint64_t n_data;$/;"	m	struct:watchpoint	typeref:typename:uint64_t	file:
name	include/device/map.h	/^  const char *name;$/;"	m	struct:__anon4777232b0108	typeref:typename:const char *
name	src/monitor/sdb/sdb.c	/^  const char *name;$/;"	m	struct:__anonf15764c50108	typeref:typename:const char *	file:
name	tools/fixdep/fixdep.c	/^	char		name[];$/;"	m	struct:item	typeref:typename:char[]	file:
name	tools/kconfig/expr.h	/^	char *name;$/;"	m	struct:symbol	typeref:typename:char *
name	tools/kconfig/expr.h	/^	const char *name;$/;"	m	struct:file	typeref:typename:const char *
name	tools/kconfig/preprocess.c	/^	char *name;$/;"	m	struct:env	typeref:typename:char *	file:
name	tools/kconfig/preprocess.c	/^	char *name;$/;"	m	struct:variable	typeref:typename:char *	file:
name	tools/kconfig/preprocess.c	/^	const char *name;$/;"	m	struct:function	typeref:typename:const char *	file:
nemu_add_host	resource/sdcard/nemu.c	/^static int nemu_add_host(struct nemu_host *host)$/;"	f	typeref:typename:int	file:
nemu_driver	resource/sdcard/nemu.c	/^static struct platform_driver nemu_driver = {$/;"	v	typeref:struct:platform_driver	file:
nemu_finish_command	resource/sdcard/nemu.c	/^static void nemu_finish_command(struct nemu_host *host)$/;"	f	typeref:typename:void	file:
nemu_finish_data	resource/sdcard/nemu.c	/^static void nemu_finish_data(struct nemu_host *host)$/;"	f	typeref:typename:void	file:
nemu_finish_request	resource/sdcard/nemu.c	/^static void nemu_finish_request(struct nemu_host *host)$/;"	f	typeref:typename:void	file:
nemu_host	resource/sdcard/nemu.c	/^struct nemu_host {$/;"	s	file:
nemu_match	resource/sdcard/nemu.c	/^static const struct of_device_id nemu_match[] = {$/;"	v	typeref:typename:const struct of_device_id[]	file:
nemu_ops	resource/sdcard/nemu.c	/^static const struct mmc_host_ops nemu_ops = {$/;"	v	typeref:typename:const struct mmc_host_ops	file:
nemu_prepare_data	resource/sdcard/nemu.c	/^void nemu_prepare_data(struct nemu_host *host, struct mmc_command *cmd)$/;"	f	typeref:typename:void	file:
nemu_probe	resource/sdcard/nemu.c	/^static int nemu_probe(struct platform_device *pdev)$/;"	f	typeref:typename:int	file:
nemu_remove	resource/sdcard/nemu.c	/^static int nemu_remove(struct platform_device *pdev)$/;"	f	typeref:typename:int	file:
nemu_request	resource/sdcard/nemu.c	/^static void nemu_request(struct mmc_host *mmc, struct mmc_request *mrq)$/;"	f	typeref:typename:void	file:
nemu_reset	resource/sdcard/nemu.c	/^static void nemu_reset(struct mmc_host *mmc)$/;"	f	typeref:typename:void	file:
nemu_send_command	resource/sdcard/nemu.c	/^bool nemu_send_command(struct nemu_host *host, struct mmc_command *cmd)$/;"	f	typeref:typename:bool	file:
nemu_set_ios	resource/sdcard/nemu.c	/^static void nemu_set_ios(struct mmc_host *mmc, struct mmc_ios *ios)$/;"	f	typeref:typename:void	file:
nemu_state	src/utils/state.c	/^NEMUState nemu_state = { .state = NEMU_STOP };$/;"	v	typeref:typename:NEMUState
nemu_transfer_block_pio	resource/sdcard/nemu.c	/^static void nemu_transfer_block_pio(struct nemu_host *host, bool is_read)$/;"	f	typeref:typename:void	file:
nemu_transfer_complete	resource/sdcard/nemu.c	/^static void nemu_transfer_complete(struct nemu_host *host)$/;"	f	typeref:typename:void	file:
nemu_transfer_pio	resource/sdcard/nemu.c	/^static void nemu_transfer_pio(struct nemu_host *host)$/;"	f	typeref:typename:void	file:
new_space	src/device/io/map.c	/^uint8_t* new_space(int size) {$/;"	f	typeref:typename:uint8_t *
new_string	tools/kconfig/build/lexer.lex.c	/^static void new_string(void)$/;"	f	typeref:typename:void	file:
new_wp	src/monitor/sdb/watchpoint.c	/^WP* new_wp(uint64_t data,char *arg){$/;"	f	typeref:typename:WP *
next	src/monitor/sdb/sdb.c	/^  struct watchpoint *next;$/;"	m	struct:watchpoint	typeref:struct:watchpoint *	file:
next	src/monitor/sdb/watchpoint.c	/^  struct watchpoint *next;$/;"	m	struct:watchpoint	typeref:struct:watchpoint *	file:
next	tools/fixdep/fixdep.c	/^	struct item	*next;$/;"	m	struct:item	typeref:struct:item *	file:
next	tools/kconfig/expr.h	/^	struct file *next;$/;"	m	struct:file	typeref:struct:file *
next	tools/kconfig/expr.h	/^	struct menu *next;$/;"	m	struct:menu	typeref:struct:menu *
next	tools/kconfig/expr.h	/^	struct property *next;     \/* next property - null if last *\/$/;"	m	struct:property	typeref:struct:property *
next	tools/kconfig/expr.h	/^	struct symbol *next;$/;"	m	struct:symbol	typeref:struct:symbol *
next	tools/kconfig/list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head *
next	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_list *next;$/;"	m	struct:dialog_list	typeref:struct:dialog_list *
next	tools/kconfig/lxdialog/dialog.h	/^	struct subtitle_list *next;$/;"	m	struct:subtitle_list	typeref:struct:subtitle_list *
next	tools/kconfig/symbol.c	/^	struct dep_stack *prev, *next;$/;"	m	struct:dep_stack	typeref:struct:dep_stack *	file:
no	tools/kconfig/expr.h	/^	no, mod, yes$/;"	e	enum:tristate
node	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_item node;$/;"	m	struct:dialog_list	typeref:struct:dialog_item
node	tools/kconfig/preprocess.c	/^	struct list_head node;$/;"	m	struct:env	typeref:struct:list_head	file:
node	tools/kconfig/preprocess.c	/^	struct list_head node;$/;"	m	struct:variable	typeref:struct:list_head	file:
nohelp_text	tools/kconfig/menu.c	/^static const char nohelp_text[] = "There is no help available for this option.";$/;"	v	typeref:typename:const char[]	file:
nonconst_symbol	tools/kconfig/parser.y	/^nonconst_symbol: T_WORD { $$ = sym_lookup($1, 0); free($1); };$/;"	l
nr_map	src/device/io/mmio.c	/^static int nr_map = 0;$/;"	v	typeref:typename:int	file:
nr_map	src/device/io/port-io.c	/^static int nr_map = 0;$/;"	v	typeref:typename:int	file:
nr_reg	src/device/audio.c	/^  nr_reg$/;"	e	enum:__anon4b6124fe0103	file:
nr_token	src/monitor/sdb/expr.c	/^static int nr_token __attribute__((used))  = 0;$/;"	v	typeref:typename:int	file:
obj	tools/kconfig/Makefile	/^obj := build$/;"	m
offset	tools/kconfig/expr.h	/^	size_t offset;$/;"	m	struct:jump_key	typeref:typename:size_t
offsetof	tools/kconfig/list.h	/^#define offsetof(/;"	d
oldaskconfig	tools/kconfig/conf.c	/^	oldaskconfig,$/;"	e	enum:input_mode	file:
oldconfig	tools/kconfig/conf.c	/^	oldconfig,$/;"	e	enum:input_mode	file:
olddefconfig	tools/kconfig/conf.c	/^	olddefconfig,$/;"	e	enum:input_mode	file:
on_key_esc	tools/kconfig/lxdialog/util.c	/^int on_key_esc(WINDOW *win)$/;"	f	typeref:typename:int
on_key_resize	tools/kconfig/lxdialog/util.c	/^int on_key_resize(void)$/;"	f	typeref:typename:int
out	tools/qemu-diff/src/protocol.c	/^  FILE *out;$/;"	m	struct:gdb_conn	typeref:typename:FILE *	file:
out_of_bound	src/memory/paddr.c	/^static void out_of_bound(paddr_t addr) {$/;"	f	typeref:typename:void	file:
p	tools/spike-diff/difftest.cc	/^static processor_t *p = NULL;$/;"	v	typeref:typename:processor_t *	file:
p_data	src/monitor/sdb/sdb.c	/^  uint64_t p_data;$/;"	m	struct:watchpoint	typeref:typename:uint64_t	file:
p_data	src/monitor/sdb/watchpoint.c	/^  uint64_t p_data;$/;"	m	struct:watchpoint	typeref:typename:uint64_t	file:
p_space	src/device/io/map.c	/^static uint8_t *p_space = NULL;$/;"	v	typeref:typename:uint8_t *	file:
paddr_read	src/memory/paddr.c	/^word_t paddr_read(paddr_t addr, int len) {$/;"	f	typeref:typename:word_t
paddr_t	include/common.h	/^typedef MUXDEF(PMEM64, uint64_t, uint32_t) paddr_t;$/;"	t
paddr_t	tools/qemu-diff/include/common.h	/^typedef uint32_t paddr_t;$/;"	t	typeref:typename:uint32_t
paddr_write	src/memory/paddr.c	/^void paddr_write(paddr_t addr, int len, word_t data) {$/;"	f	typeref:typename:void
page	tools/kconfig/lxdialog/textbox.c	/^static char *page;$/;"	v	typeref:typename:char *	file:
page_length	tools/kconfig/lxdialog/textbox.c	/^static int begin_reached, end_reached, page_length;$/;"	v	typeref:typename:int	file:
panic	include/debug.h	/^#define panic(/;"	d
parent	tools/kconfig/build/lexer.lex.c	/^	struct buffer *parent;$/;"	m	struct:buffer	typeref:struct:buffer *	file:
parent	tools/kconfig/expr.h	/^	struct file *parent;$/;"	m	struct:file	typeref:struct:file *
parent	tools/kconfig/expr.h	/^	struct menu *parent;$/;"	m	struct:menu	typeref:struct:menu *
parse_args	src/monitor/monitor.c	/^static int parse_args(int argc, char *argv[]) {$/;"	f	typeref:typename:int	file:
parse_config_file	tools/fixdep/fixdep.c	/^static void parse_config_file(const char *p)$/;"	f	typeref:typename:void	file:
parse_dep_file	tools/fixdep/fixdep.c	/^static void parse_dep_file(char *m, const char *target)$/;"	f	typeref:typename:void	file:
patching	tools/kvm-diff/src/kvm.c	/^static int patching() {$/;"	f	typeref:typename:int	file:
patching_after	tools/kvm-diff/src/kvm.c	/^static void patching_after(uint64_t last_pc) {$/;"	f	typeref:typename:void	file:
pattern_decode	include/cpu/decode.h	/^static inline void pattern_decode(const char *str, int len,$/;"	f	typeref:typename:void
pattern_decode_hex	include/cpu/decode.h	/^static inline void pattern_decode_hex(const char *str, int len,$/;"	f	typeref:typename:void
pc	include/cpu/decode.h	/^  vaddr_t pc;$/;"	m	struct:Decode	typeref:typename:vaddr_t
pc	src/isa/riscv32/include/isa-def.h	/^  vaddr_t pc;$/;"	m	struct:__anoncc46a1e50108	typeref:typename:vaddr_t
pc	src/isa/riscv64/include/isa-def.h	/^  vaddr_t pc;$/;"	m	struct:__anon9270f98a0108	typeref:typename:vaddr_t
pc	tools/qemu-diff/include/isa.h	/^    uint32_t status, lo, hi, badvaddr, cause, pc;$/;"	m	struct:isa_gdb_regs::__anona0204e780108	typeref:typename:uint32_t
pc	tools/spike-diff/difftest.cc	/^  word_t pc;$/;"	m	struct:diff_context_t	typeref:typename:word_t	file:
pdev	resource/sdcard/nemu.c	/^	struct platform_device	*pdev;$/;"	m	struct:nemu_host	typeref:struct:platform_device *	file:
phys_addr	resource/sdcard/nemu.c	/^	u32			phys_addr;$/;"	m	struct:nemu_host	typeref:typename:u32	file:
pio_read	src/device/io/port-io.c	/^uint32_t pio_read(ioaddr_t addr, int len) {$/;"	f	typeref:typename:uint32_t
pio_write	src/device/io/port-io.c	/^void pio_write(ioaddr_t addr, int len, uint32_t data) {$/;"	f	typeref:typename:void
pmem	src/memory/paddr.c	/^static uint8_t *pmem = NULL;$/;"	v	typeref:typename:uint8_t *	file:
pmem	src/memory/paddr.c	/^static uint8_t pmem[CONFIG_MSIZE] PG_ALIGN = {};$/;"	v	typeref:typename:uint8_t[CONFIG_MSIZE]PG_ALIGN	file:
pmem_read	src/memory/paddr.c	/^static word_t pmem_read(paddr_t addr, int len) {$/;"	f	typeref:typename:word_t	file:
pmem_write	src/memory/paddr.c	/^static void pmem_write(paddr_t addr, int len, word_t data) {$/;"	f	typeref:typename:void	file:
position_indicator	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color position_indicator;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
pperror	tools/kconfig/preprocess.c	/^static void __attribute__((noreturn)) pperror(const char *format, ...)$/;"	f	typeref:typename:void	file:
prepare_rw	src/device/sdcard.c	/^static void prepare_rw(int is_write) {$/;"	f	typeref:typename:void	file:
prev	tools/kconfig/list.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head *
prev	tools/kconfig/symbol.c	/^	struct dep_stack *prev, *next;$/;"	m	struct:dep_stack	typeref:struct:dep_stack *	file:
prev_prev_token	tools/kconfig/build/lexer.lex.c	/^static int prev_prev_token = T_EOL;$/;"	v	typeref:typename:int	file:
prev_token	tools/kconfig/build/lexer.lex.c	/^static int prev_token = T_EOL;$/;"	v	typeref:typename:int	file:
print_arrows	tools/kconfig/lxdialog/checklist.c	/^static void print_arrows(WINDOW * win, int choice, int item_no, int scroll,$/;"	f	typeref:typename:void	file:
print_arrows	tools/kconfig/lxdialog/menubox.c	/^static void print_arrows(WINDOW * win, int item_no, int scroll, int y, int x,$/;"	f	typeref:typename:void	file:
print_autowrap	tools/kconfig/lxdialog/util.c	/^void print_autowrap(WINDOW * win, const char *prompt, int width, int y, int x)$/;"	f	typeref:typename:void
print_button	tools/kconfig/lxdialog/util.c	/^void print_button(WINDOW * win, const char *label, int y, int x, int selected)$/;"	f	typeref:typename:void
print_buttons	tools/kconfig/lxdialog/checklist.c	/^static void print_buttons(WINDOW * dialog, int height, int width, int selected)$/;"	f	typeref:typename:void	file:
print_buttons	tools/kconfig/lxdialog/inputbox.c	/^static void print_buttons(WINDOW * dialog, int height, int width, int selected)$/;"	f	typeref:typename:void	file:
print_buttons	tools/kconfig/lxdialog/menubox.c	/^static void print_buttons(WINDOW * win, int height, int width, int selected)$/;"	f	typeref:typename:void	file:
print_buttons	tools/kconfig/lxdialog/yesno.c	/^static void print_buttons(WINDOW * dialog, int height, int width, int selected)$/;"	f	typeref:typename:void	file:
print_comment	tools/kconfig/confdata.c	/^	void (*print_comment)(FILE *, const char *, void *);$/;"	m	struct:conf_printer	typeref:typename:void (*)(FILE *,const char *,void *)	file:
print_dep	tools/fixdep/fixdep.c	/^static void print_dep(const char *m, int slen, const char *dir)$/;"	f	typeref:typename:void	file:
print_help	tools/kconfig/conf.c	/^static void print_help(struct menu *menu)$/;"	f	typeref:typename:void	file:
print_item	tools/kconfig/lxdialog/checklist.c	/^static void print_item(WINDOW * win, int choice, int selected)$/;"	f	typeref:typename:void	file:
print_item	tools/kconfig/lxdialog/menubox.c	/^#define print_item(/;"	d	file:
print_line	tools/kconfig/lxdialog/textbox.c	/^static void print_line(WINDOW * win, int row, int width)$/;"	f	typeref:typename:void	file:
print_page	tools/kconfig/lxdialog/textbox.c	/^static void print_page(WINDOW *win, int height, int width, update_text_fn$/;"	f	typeref:typename:void	file:
print_position	tools/kconfig/lxdialog/textbox.c	/^static void print_position(WINDOW * win)$/;"	f	typeref:typename:void	file:
print_quoted_string	tools/kconfig/build/parser.tab.c	/^static void print_quoted_string(FILE *out, const char *str)$/;"	f	typeref:typename:void	file:
print_symbol	tools/kconfig/build/parser.tab.c	/^static void print_symbol(FILE *out, struct menu *menu)$/;"	f	typeref:typename:void	file:
print_symbol	tools/kconfig/confdata.c	/^	void (*print_symbol)(FILE *, struct symbol *, const char *, void *);$/;"	m	struct:conf_printer	typeref:typename:void (*)(FILE *,struct symbol *,const char *,void *)	file:
print_title	tools/kconfig/lxdialog/util.c	/^void print_title(WINDOW *dialog, const char *title, int width)$/;"	f	typeref:typename:void
printcflags	scripts/build.mk	/^printcflags:$/;"	t
printd	tools/kconfig/build/parser.tab.c	/^#define printd(/;"	d	file:
prompt	tools/kconfig/expr.h	/^	struct property *prompt;$/;"	m	struct:menu	typeref:struct:property *
prompt_stmt_opt	tools/kconfig/parser.y	/^prompt_stmt_opt:$/;"	l
prop	tools/kconfig/expr.h	/^	struct property *prop;$/;"	m	struct:symbol	typeref:struct:property *
prop	tools/kconfig/symbol.c	/^	struct property *prop;$/;"	m	struct:dep_stack	typeref:struct:property *	file:
prop_get_symbol	tools/kconfig/symbol.c	/^struct symbol *prop_get_symbol(struct property *prop)$/;"	f	typeref:struct:symbol *
prop_get_type_name	tools/kconfig/symbol.c	/^const char *prop_get_type_name(enum prop_type type)$/;"	f	typeref:typename:const char *
prop_type	tools/kconfig/expr.h	/^enum prop_type {$/;"	g
prop_warn	tools/kconfig/menu.c	/^static void prop_warn(struct property *prop, const char *fmt, ...)$/;"	f	typeref:typename:void	file:
property	tools/kconfig/expr.h	/^struct property {$/;"	s
qinghuan	tools/gen-expr/gen-expr.c	/^static void qinghuan(){$/;"	f	typeref:typename:void	file:
radiolist_instructions	tools/kconfig/mconf.c	/^radiolist_instructions[] =$/;"	v	typeref:typename:const char[]	file:
randconfig	tools/kconfig/conf.c	/^	randconfig,$/;"	e	enum:input_mode	file:
randomize_choice_values	tools/kconfig/confdata.c	/^static bool randomize_choice_values(struct symbol *csym)$/;"	f	typeref:typename:bool	file:
re	src/monitor/sdb/expr.c	/^static regex_t re[NR_REGEX] = {};$/;"	v	typeref:typename:regex_t[]	file:
read_ext_csd	src/device/sdcard.c	/^static bool read_ext_csd = false;$/;"	v	typeref:typename:bool	file:
read_file	tools/fixdep/fixdep.c	/^static void *read_file(const char *filename)$/;"	f	typeref:typename:void *	file:
recv_packet	tools/qemu-diff/src/protocol.c	/^static uint8_t* recv_packet(FILE *in, size_t *ret_size, bool* ret_sum_ok) {$/;"	f	typeref:typename:uint8_t *	file:
ref_difftest_exec	src/cpu/difftest/dut.c	/^void (*ref_difftest_exec)(uint64_t n) = NULL;$/;"	v	typeref:typename:void (*)(uint64_t n)
ref_difftest_memcpy	src/cpu/difftest/dut.c	/^void (*ref_difftest_memcpy)(paddr_t addr, void *buf, size_t n, bool direction) = NULL;$/;"	v	typeref:typename:void (*)(paddr_t addr,void * buf,size_t n,bool direction)
ref_difftest_raise_intr	src/cpu/difftest/dut.c	/^void (*ref_difftest_raise_intr)(uint64_t NO) = NULL;$/;"	v	typeref:typename:void (*)(uint64_t NO)
ref_difftest_regcpy	src/cpu/difftest/dut.c	/^void (*ref_difftest_regcpy)(void *dut, bool direction) = NULL;$/;"	v	typeref:typename:void (*)(void * dut,bool direction)
refresh_text_box	tools/kconfig/lxdialog/textbox.c	/^static void refresh_text_box(WINDOW *dialog, WINDOW *box, int boxh, int boxw,$/;"	f	typeref:typename:void	file:
reg_channels	src/device/audio.c	/^  reg_channels,$/;"	e	enum:__anon4b6124fe0103	file:
reg_count	src/device/audio.c	/^  reg_count,$/;"	e	enum:__anon4b6124fe0103	file:
reg_freq	src/device/audio.c	/^  reg_freq,$/;"	e	enum:__anon4b6124fe0103	file:
reg_init	src/device/audio.c	/^  reg_init,$/;"	e	enum:__anon4b6124fe0103	file:
reg_name	src/isa/riscv32/local-include/reg.h	/^static inline const char* reg_name(int idx, int width) {$/;"	f	typeref:typename:const char *
reg_name	src/isa/riscv64/local-include/reg.h	/^static inline const char* reg_name(int idx, int width) {$/;"	f	typeref:typename:const char *
reg_samples	src/device/audio.c	/^  reg_samples,$/;"	e	enum:__anon4b6124fe0103	file:
reg_sbuf_size	src/device/audio.c	/^  reg_sbuf_size,$/;"	e	enum:__anon4b6124fe0103	file:
regex	src/monitor/sdb/expr.c	/^  const char *regex;$/;"	m	struct:rule	typeref:typename:const char *	file:
regs	src/isa/riscv32/reg.c	/^const char *regs[] = {$/;"	v	typeref:typename:const char * []
regs	src/isa/riscv64/reg.c	/^const char *regs[] = {$/;"	v	typeref:typename:const char * []
remove_quote	Makefile	/^remove_quote = $(patsubst "%",%,$(1))$/;"	m
renderer	src/device/vga.c	/^static SDL_Renderer *renderer = NULL;$/;"	v	typeref:typename:SDL_Renderer *	file:
report_mmio_overlap	src/device/io/mmio.c	/^static void report_mmio_overlap(const char *name1, paddr_t l1, paddr_t r1,$/;"	f	typeref:typename:void	file:
reset_subtitle	tools/kconfig/mconf.c	/^static void reset_subtitle(void)$/;"	f	typeref:typename:void	file:
restart	src/isa/riscv32/init.c	/^static void restart() {$/;"	f	typeref:typename:void	file:
restart	src/isa/riscv64/init.c	/^static void restart() {$/;"	f	typeref:typename:void	file:
rev_dep	tools/kconfig/expr.h	/^	struct expr_value rev_dep;$/;"	m	struct:symbol	typeref:struct:expr_value
rewrite_m	tools/kconfig/menu.c	/^static struct expr *rewrite_m(struct expr *e)$/;"	f	typeref:struct:expr *	file:
right	tools/kconfig/expr.h	/^	union expr_data left, right;$/;"	m	struct:expr	typeref:union:expr_data
riscv32_CPU_state	src/isa/riscv32/include/isa-def.h	/^} riscv32_CPU_state;$/;"	t	typeref:struct:__anoncc46a1e50108
riscv32_ISADecodeInfo	src/isa/riscv32/include/isa-def.h	/^} riscv32_ISADecodeInfo;$/;"	t	typeref:struct:__anoncc46a1e50208
riscv64 debian镜像制作	resource/debian/README.md	/^# riscv64 debian镜像制作$/;"	c
riscv64_CPU_state	src/isa/riscv64/include/isa-def.h	/^} riscv64_CPU_state;$/;"	t	typeref:struct:__anon9270f98a0108
riscv64_ISADecodeInfo	src/isa/riscv64/include/isa-def.h	/^} riscv64_ISADecodeInfo;$/;"	t	typeref:struct:__anon9270f98a0208
rl_gets	src/monitor/sdb/sdb.c	/^static char* rl_gets() {$/;"	f	typeref:typename:char *	file:
rootEntry	tools/kconfig/conf.c	/^static struct menu *rootEntry;$/;"	v	typeref:struct:menu *	file:
rootmenu	tools/kconfig/menu.c	/^struct menu rootmenu;$/;"	v	typeref:struct:menu
rtc_io_handler	src/device/timer.c	/^static void rtc_io_handler(uint32_t offset, int len, bool is_write) {$/;"	f	typeref:typename:void	file:
rtc_port_base	src/device/timer.c	/^static uint32_t *rtc_port_base = NULL;$/;"	v	typeref:typename:uint32_t *	file:
rule	src/monitor/sdb/expr.c	/^static struct rule {$/;"	s	file:
rules	src/monitor/sdb/expr.c	/^} rules[] = {$/;"	v	typeref:struct:rule[]
run	scripts/native.mk	/^run: run-env$/;"	t
run-env	scripts/native.mk	/^run-env: $(BINARY) $(DIFF_REF_SO)$/;"	t
run_protected_mode	tools/kvm-diff/src/kvm.c	/^static void run_protected_mode() {$/;"	f	typeref:typename:void	file:
s	tools/kconfig/expr.c	/^	signed long long s;$/;"	m	union:string_value	typeref:typename:signed long long	file:
s	tools/kconfig/lkc.h	/^	char  *s;$/;"	m	struct:gstr	typeref:typename:char *
s	tools/spike-diff/difftest.cc	/^static sim_t* s = NULL;$/;"	v	typeref:typename:sim_t *	file:
save_and_exit	tools/kconfig/mconf.c	/^static int save_and_exit;$/;"	v	typeref:typename:int	file:
save_config_help	tools/kconfig/mconf.c	/^save_config_help[] =$/;"	v	typeref:typename:const char[]	file:
save_config_text	tools/kconfig/mconf.c	/^save_config_text[] =$/;"	v	typeref:typename:const char[]	file:
saved_x	tools/kconfig/lxdialog/util.c	/^int saved_x, saved_y;$/;"	v	typeref:typename:int
saved_y	tools/kconfig/lxdialog/util.c	/^int saved_x, saved_y;$/;"	v	typeref:typename:int
savedefconfig	scripts/config.mk	/^savedefconfig: $(CONF)$/;"	t
savedefconfig	tools/kconfig/conf.c	/^	savedefconfig,$/;"	e	enum:input_mode	file:
sbuf	src/device/audio.c	/^static uint8_t *sbuf = NULL;$/;"	v	typeref:typename:uint8_t *	file:
screen	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color screen;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
screen_height	src/device/vga.c	/^static uint32_t screen_height() {$/;"	f	typeref:typename:uint32_t	file:
screen_size	src/device/vga.c	/^static uint32_t screen_size() {$/;"	f	typeref:typename:uint32_t	file:
screen_width	src/device/vga.c	/^static uint32_t screen_width() {$/;"	f	typeref:typename:uint32_t	file:
sdb_mainloop	src/monitor/sdb/sdb.c	/^void sdb_mainloop() {$/;"	f	typeref:typename:void
sdb_set_batch_mode	src/monitor/sdb/sdb.c	/^void sdb_set_batch_mode() {$/;"	f	typeref:typename:void
sdcard_handle_cmd	src/device/sdcard.c	/^static void sdcard_handle_cmd(int cmd) {$/;"	f	typeref:typename:void	file:
sdcard_io_handler	src/device/sdcard.c	/^static void sdcard_io_handler(uint32_t offset, int len, bool is_write) {$/;"	f	typeref:typename:void	file:
sdl_clear_event_queue	src/device/device.c	/^void sdl_clear_event_queue() {$/;"	f	typeref:typename:void
search_conf	tools/kconfig/mconf.c	/^static void search_conf(void)$/;"	f	typeref:typename:void	file:
search_data	tools/kconfig/mconf.c	/^struct search_data {$/;"	s	file:
search_help	tools/kconfig/mconf.c	/^search_help[] =$/;"	v	typeref:typename:const char[]	file:
searchbox	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color searchbox;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
searchbox_border	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color searchbox_border;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
searchbox_title	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color searchbox_title;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
selected	tools/kconfig/lxdialog/dialog.h	/^	int selected;	\/* Set to 1 by dialog_*() function if selected. *\/$/;"	m	struct:dialog_item	typeref:typename:int
send_key	src/device/keyboard.c	/^void send_key(uint8_t scancode, bool is_keydown) {$/;"	f	typeref:typename:void
send_packet	tools/qemu-diff/src/protocol.c	/^static void send_packet(FILE *out, const uint8_t *command, size_t size) {$/;"	f	typeref:typename:void	file:
serial_base	src/device/serial.c	/^static uint8_t *serial_base = NULL;$/;"	v	typeref:typename:uint8_t *	file:
serial_io_handler	src/device/serial.c	/^static void serial_io_handler(uint32_t offset, int len, bool is_write) {$/;"	f	typeref:typename:void	file:
serial_putc	src/device/serial.c	/^static void serial_putc(char ch) {$/;"	f	typeref:typename:void	file:
set_all_choice_values	tools/kconfig/confdata.c	/^void set_all_choice_values(struct symbol *csym)$/;"	f	typeref:typename:void
set_blackbg_theme	tools/kconfig/lxdialog/util.c	/^static void set_blackbg_theme(void)$/;"	f	typeref:typename:void	file:
set_bluetitle_theme	tools/kconfig/lxdialog/util.c	/^static void set_bluetitle_theme(void)$/;"	f	typeref:typename:void	file:
set_classic_theme	tools/kconfig/lxdialog/util.c	/^static void set_classic_theme(void)$/;"	f	typeref:typename:void	file:
set_config_filename	tools/kconfig/mconf.c	/^static void set_config_filename(const char *config_filename)$/;"	f	typeref:typename:void	file:
set_dialog_backtitle	tools/kconfig/lxdialog/util.c	/^void set_dialog_backtitle(const char *backtitle)$/;"	f	typeref:typename:void
set_dialog_subtitles	tools/kconfig/lxdialog/util.c	/^void set_dialog_subtitles(struct subtitle_list *subtitles)$/;"	f	typeref:typename:void
set_mono_theme	tools/kconfig/lxdialog/util.c	/^static void set_mono_theme(void)$/;"	f	typeref:typename:void	file:
set_nemu_state	src/engine/interpreter/hostcall.c	/^void set_nemu_state(int state, vaddr_t pc, int halt_ret) {$/;"	f	typeref:typename:void
set_subtitle	tools/kconfig/mconf.c	/^static void set_subtitle(void)$/;"	f	typeref:typename:void	file:
set_theme	tools/kconfig/lxdialog/util.c	/^static int set_theme(const char *theme)$/;"	f	typeref:typename:int	file:
setmod_text	tools/kconfig/mconf.c	/^setmod_text[] =$/;"	v	typeref:typename:const char[]	file:
setup_protected_mode	tools/kvm-diff/src/kvm.c	/^static void setup_protected_mode(struct kvm_sregs *sregs) {$/;"	f	typeref:typename:void	file:
sg_miter	resource/sdcard/nemu.c	/^	struct sg_mapping_iter	sg_miter;	\/* SG state for PIO *\/$/;"	m	struct:nemu_host	typeref:struct:sg_mapping_iter	file:
shadow	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color shadow;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
show_all_options	tools/kconfig/mconf.c	/^static int show_all_options;$/;"	v	typeref:typename:int	file:
show_help	tools/kconfig/mconf.c	/^static void show_help(struct menu *menu)$/;"	f	typeref:typename:void	file:
show_helptext	tools/kconfig/mconf.c	/^static void show_helptext(const char *title, const char *text)$/;"	f	typeref:typename:void	file:
show_textbox	tools/kconfig/mconf.c	/^static void show_textbox(const char *title, const char *text, int r, int c)$/;"	f	typeref:typename:void	file:
show_textbox_ext	tools/kconfig/mconf.c	/^static int show_textbox_ext(const char *title, char *text, int r, int c, int$/;"	f	typeref:typename:int	file:
sig_handler	tools/kconfig/mconf.c	/^static void sig_handler(int signo)$/;"	f	typeref:typename:void	file:
silent	scripts/config.mk	/^silent := -s$/;"	m
silent	tools/kconfig/mconf.c	/^static int silent;$/;"	v	typeref:typename:int	file:
single_menu_mode	tools/kconfig/mconf.c	/^static int single_menu_mode;$/;"	v	typeref:typename:int	file:
skip_dut_nr_inst	src/cpu/difftest/dut.c	/^static int skip_dut_nr_inst = 0;$/;"	v	typeref:typename:int	file:
snpc	include/cpu/decode.h	/^  vaddr_t snpc; \/\/ static next pc$/;"	m	struct:Decode	typeref:typename:vaddr_t
so	tools/kconfig/symbol.c	/^	off_t		so, eo;$/;"	m	struct:sym_match	typeref:typename:off_t	file:
source_stmt	tools/kconfig/parser.y	/^source_stmt: T_SOURCE T_WORD_QUOTE T_EOL$/;"	l
space	include/device/map.h	/^  void *space;$/;"	m	struct:__anon4777232b0108	typeref:typename:void *
src1R	src/isa/riscv32/inst.c	/^#define src1R(/;"	d	file:
src1R	src/isa/riscv64/inst.c	/^#define src1R(/;"	d	file:
src2R	src/isa/riscv32/inst.c	/^#define src2R(/;"	d	file:
src2R	src/isa/riscv64/inst.c	/^#define src2R(/;"	d	file:
state	include/utils.h	/^  int state;$/;"	m	struct:__anon80c1a05f0208	typeref:typename:int
state	tools/kconfig/build/lexer.lex.c	/^	YY_BUFFER_STATE state;$/;"	m	struct:buffer	typeref:typename:YY_BUFFER_STATE	file:
state	tools/spike-diff/difftest.cc	/^static state_t *state = NULL;$/;"	v	typeref:typename:state_t *	file:
statistic	src/cpu/cpu-exec.c	/^static void statistic() {$/;"	f	typeref:typename:void	file:
status	tools/qemu-diff/include/isa.h	/^    uint32_t status, lo, hi, badvaddr, cause, pc;$/;"	m	struct:isa_gdb_regs::__anona0204e780108	typeref:typename:uint32_t
stmt_list	tools/kconfig/parser.y	/^stmt_list:$/;"	l
stmt_list_in_choice	tools/kconfig/parser.y	/^stmt_list_in_choice:$/;"	l
str	include/macro.h	/^#define str(/;"	d
str	src/monitor/sdb/expr.c	/^  char str[32];$/;"	m	struct:token	typeref:typename:char[32]	file:
str	tools/kconfig/build/lexer.lex.c	/^	int str = 0;$/;"	v	typeref:typename:int
str	tools/kconfig/lxdialog/dialog.h	/^	char str[MAXITEMSTR];	\/* prompt displayed *\/$/;"	m	struct:dialog_item	typeref:typename:char[]
str_append	tools/kconfig/util.c	/^void str_append(struct gstr *gs, const char *s)$/;"	f	typeref:typename:void
str_ends_with	tools/fixdep/fixdep.c	/^static int str_ends_with(const char *s, int slen, const char *sub)$/;"	f	typeref:typename:int	file:
str_free	tools/kconfig/util.c	/^void str_free(struct gstr *gs)$/;"	f	typeref:typename:void
str_get	tools/kconfig/util.c	/^const char *str_get(struct gstr *gs)$/;"	f	typeref:typename:const char *
str_new	tools/kconfig/util.c	/^struct gstr str_new(void)$/;"	f	typeref:struct:gstr
str_printf	tools/kconfig/util.c	/^void str_printf(struct gstr *gs, const char *fmt, ...)$/;"	f	typeref:typename:void
str_temp	include/macro.h	/^#define str_temp(/;"	d
strhash	tools/fixdep/fixdep.c	/^static unsigned int strhash(const char *str, unsigned int sz)$/;"	f	typeref:typename:unsigned int	file:
strhash	tools/kconfig/symbol.c	/^static unsigned strhash(const char *s)$/;"	f	typeref:typename:unsigned	file:
string	tools/kconfig/build/parser.tab.h	/^	char *string;$/;"	m	union:YYSTYPE	typeref:typename:char *
string_value	tools/kconfig/expr.c	/^union string_value {$/;"	u	file:
string_value_kind	tools/kconfig/expr.c	/^enum string_value_kind {$/;"	g	file:
strip	tools/kconfig/conf.c	/^static void strip(char *str)$/;"	f	typeref:typename:void	file:
subtitle_list	tools/kconfig/lxdialog/dialog.h	/^struct subtitle_list {$/;"	s
subtitle_part	tools/kconfig/mconf.c	/^struct subtitle_part {$/;"	s	file:
subtitles	tools/kconfig/lxdialog/dialog.h	/^	struct subtitle_list *subtitles;$/;"	m	struct:dialog_info	typeref:struct:subtitle_list *
subtitles	tools/kconfig/mconf.c	/^static struct subtitle_list *subtitles;$/;"	v	typeref:struct:subtitle_list *	file:
sword_t	include/common.h	/^typedef MUXDEF(CONFIG_ISA64, int64_t, int32_t)  sword_t;$/;"	t
sym	tools/kconfig/expr.h	/^	struct symbol *sym;$/;"	m	struct:menu	typeref:struct:symbol *
sym	tools/kconfig/expr.h	/^	struct symbol *sym;$/;"	m	union:expr_data	typeref:struct:symbol *
sym	tools/kconfig/symbol.c	/^	struct symbol	*sym;$/;"	m	struct:sym_match	typeref:struct:symbol *	file:
sym	tools/kconfig/symbol.c	/^	struct symbol *sym;$/;"	m	struct:dep_stack	typeref:struct:symbol *	file:
sym_add_change_count	tools/kconfig/confdata.c	/^void sym_add_change_count(int count)$/;"	f	typeref:typename:void
sym_calc_choice	tools/kconfig/symbol.c	/^static struct symbol *sym_calc_choice(struct symbol *sym)$/;"	f	typeref:struct:symbol *	file:
sym_calc_value	tools/kconfig/symbol.c	/^void sym_calc_value(struct symbol *sym)$/;"	f	typeref:typename:void
sym_calc_visibility	tools/kconfig/symbol.c	/^static void sym_calc_visibility(struct symbol *sym)$/;"	f	typeref:typename:void	file:
sym_change_count	tools/kconfig/confdata.c	/^static int sym_change_count;$/;"	v	typeref:typename:int	file:
sym_check_choice_deps	tools/kconfig/symbol.c	/^static struct symbol *sym_check_choice_deps(struct symbol *choice)$/;"	f	typeref:struct:symbol *	file:
sym_check_deps	tools/kconfig/symbol.c	/^struct symbol *sym_check_deps(struct symbol *sym)$/;"	f	typeref:struct:symbol *
sym_check_expr_deps	tools/kconfig/symbol.c	/^static struct symbol *sym_check_expr_deps(struct expr *e)$/;"	f	typeref:struct:symbol *	file:
sym_check_print_recursive	tools/kconfig/symbol.c	/^static void sym_check_print_recursive(struct symbol *last_sym)$/;"	f	typeref:typename:void	file:
sym_check_prop	tools/kconfig/menu.c	/^static void sym_check_prop(struct symbol *sym)$/;"	f	typeref:typename:void	file:
sym_check_sym_deps	tools/kconfig/symbol.c	/^static struct symbol *sym_check_sym_deps(struct symbol *sym)$/;"	f	typeref:struct:symbol *	file:
sym_choice_default	tools/kconfig/symbol.c	/^struct symbol *sym_choice_default(struct symbol *sym)$/;"	f	typeref:struct:symbol *
sym_clear_all_valid	tools/kconfig/symbol.c	/^void sym_clear_all_valid(void)$/;"	f	typeref:typename:void
sym_defconfig_list	tools/kconfig/symbol.c	/^struct symbol *sym_defconfig_list;$/;"	v	typeref:struct:symbol *
sym_escape_string_value	tools/kconfig/symbol.c	/^const char *sym_escape_string_value(const char *in)$/;"	f	typeref:typename:const char *
sym_find	tools/kconfig/symbol.c	/^struct symbol *sym_find(const char *name)$/;"	f	typeref:struct:symbol *
sym_get_choice_prop	tools/kconfig/symbol.c	/^struct property *sym_get_choice_prop(struct symbol *sym)$/;"	f	typeref:struct:property *
sym_get_choice_value	tools/kconfig/lkc.h	/^static inline struct symbol *sym_get_choice_value(struct symbol *sym)$/;"	f	typeref:struct:symbol *
sym_get_default_prop	tools/kconfig/symbol.c	/^static struct property *sym_get_default_prop(struct symbol *sym)$/;"	f	typeref:struct:property *	file:
sym_get_range_prop	tools/kconfig/symbol.c	/^struct property *sym_get_range_prop(struct symbol *sym)$/;"	f	typeref:struct:property *
sym_get_range_val	tools/kconfig/symbol.c	/^static long long sym_get_range_val(struct symbol *sym, int base)$/;"	f	typeref:typename:long long	file:
sym_get_string_default	tools/kconfig/symbol.c	/^const char *sym_get_string_default(struct symbol *sym)$/;"	f	typeref:typename:const char *
sym_get_string_value	tools/kconfig/symbol.c	/^const char *sym_get_string_value(struct symbol *sym)$/;"	f	typeref:typename:const char *
sym_get_tristate_value	tools/kconfig/lkc.h	/^static inline tristate sym_get_tristate_value(struct symbol *sym)$/;"	f	typeref:typename:tristate
sym_get_type	tools/kconfig/symbol.c	/^enum symbol_type sym_get_type(struct symbol *sym)$/;"	f	typeref:enum:symbol_type
sym_has_value	tools/kconfig/lkc.h	/^static inline bool sym_has_value(struct symbol *sym)$/;"	f	typeref:typename:bool
sym_is_changeable	tools/kconfig/symbol.c	/^bool sym_is_changeable(struct symbol *sym)$/;"	f	typeref:typename:bool
sym_is_choice	tools/kconfig/lkc.h	/^static inline bool sym_is_choice(struct symbol *sym)$/;"	f	typeref:typename:bool
sym_is_choice_value	tools/kconfig/lkc.h	/^static inline bool sym_is_choice_value(struct symbol *sym)$/;"	f	typeref:typename:bool
sym_is_optional	tools/kconfig/lkc.h	/^static inline bool sym_is_optional(struct symbol *sym)$/;"	f	typeref:typename:bool
sym_lookup	tools/kconfig/symbol.c	/^struct symbol *sym_lookup(const char *name, int flags)$/;"	f	typeref:struct:symbol *
sym_match	tools/kconfig/symbol.c	/^struct sym_match {$/;"	s	file:
sym_re_search	tools/kconfig/symbol.c	/^struct symbol **sym_re_search(const char *pattern)$/;"	f	typeref:struct:symbol **
sym_rel_comp	tools/kconfig/symbol.c	/^static int sym_rel_comp(const void *sym1, const void *sym2)$/;"	f	typeref:typename:int	file:
sym_set_all_changed	tools/kconfig/symbol.c	/^static void sym_set_all_changed(void)$/;"	f	typeref:typename:void	file:
sym_set_change_count	tools/kconfig/confdata.c	/^void sym_set_change_count(int count)$/;"	f	typeref:typename:void
sym_set_changed	tools/kconfig/symbol.c	/^static void sym_set_changed(struct symbol *sym)$/;"	f	typeref:typename:void	file:
sym_set_choice_value	tools/kconfig/lkc.h	/^static inline bool sym_set_choice_value(struct symbol *ch, struct symbol *chval)$/;"	f	typeref:typename:bool
sym_set_string_value	tools/kconfig/symbol.c	/^bool sym_set_string_value(struct symbol *sym, const char *newval)$/;"	f	typeref:typename:bool
sym_set_tristate_value	tools/kconfig/symbol.c	/^bool sym_set_tristate_value(struct symbol *sym, tristate val)$/;"	f	typeref:typename:bool
sym_string_valid	tools/kconfig/symbol.c	/^bool sym_string_valid(struct symbol *sym, const char *str)$/;"	f	typeref:typename:bool
sym_string_within_range	tools/kconfig/symbol.c	/^bool sym_string_within_range(struct symbol *sym, const char *str)$/;"	f	typeref:typename:bool
sym_toggle_tristate_value	tools/kconfig/symbol.c	/^tristate sym_toggle_tristate_value(struct symbol *sym)$/;"	f	typeref:typename:tristate
sym_tristate_within_range	tools/kconfig/symbol.c	/^bool sym_tristate_within_range(struct symbol *sym, tristate val)$/;"	f	typeref:typename:bool
sym_type_name	tools/kconfig/symbol.c	/^const char *sym_type_name(enum symbol_type type)$/;"	f	typeref:typename:const char *
sym_validate_range	tools/kconfig/symbol.c	/^static void sym_validate_range(struct symbol *sym)$/;"	f	typeref:typename:void	file:
sym_warn_unmet_dep	tools/kconfig/symbol.c	/^static void sym_warn_unmet_dep(struct symbol *sym)$/;"	f	typeref:typename:void	file:
symbol	tools/kconfig/build/parser.tab.h	/^	struct symbol *symbol;$/;"	m	union:YYSTYPE	typeref:struct:symbol *
symbol	tools/kconfig/expr.h	/^struct symbol {$/;"	s
symbol	tools/kconfig/parser.y	/^symbol:	  nonconst_symbol$/;"	l
symbol_empty	tools/kconfig/symbol.c	/^static struct symbol symbol_empty = {$/;"	v	typeref:struct:symbol	file:
symbol_hash	tools/kconfig/build/parser.tab.c	/^struct symbol *symbol_hash[SYMBOL_HASHSIZE];$/;"	v	typeref:struct:symbol * []
symbol_mod	tools/kconfig/symbol.c	/^struct symbol symbol_mod = {$/;"	v	typeref:struct:symbol
symbol_no	tools/kconfig/symbol.c	/^struct symbol symbol_no = {$/;"	v	typeref:struct:symbol
symbol_type	tools/kconfig/expr.h	/^enum symbol_type {$/;"	g
symbol_value	tools/kconfig/expr.h	/^struct symbol_value {$/;"	s
symbol_yes	tools/kconfig/symbol.c	/^struct symbol symbol_yes = {$/;"	v	typeref:struct:symbol
sync_kconfig	tools/kconfig/conf.c	/^static int sync_kconfig;$/;"	v	typeref:typename:int	file:
syncconfig	tools/kconfig/conf.c	/^	syncconfig,$/;"	e	enum:input_mode	file:
sys_fd	tools/kvm-diff/src/kvm.c	/^  int sys_fd;$/;"	m	struct:vm	typeref:typename:int	file:
tag	tools/kconfig/lxdialog/dialog.h	/^	char tag;$/;"	m	struct:dialog_item	typeref:typename:char
tag	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color tag;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
tag_key	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color tag_key;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
tag_key_selected	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color tag_key_selected;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
tag_selected	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color tag_selected;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
target	tools/kconfig/expr.h	/^	struct menu *target;$/;"	m	struct:jump_key	typeref:struct:menu *
targets	tools/kconfig/mconf.c	/^	struct menu **targets;$/;"	m	struct:search_data	typeref:struct:menu **	file:
text	tools/kconfig/build/lexer.lex.c	/^static char *text;$/;"	v	typeref:typename:char *	file:
text	tools/kconfig/expr.h	/^	const char *text;          \/* the prompt value - P_PROMPT, P_MENU, P_COMMENT *\/$/;"	m	struct:property	typeref:typename:const char *
text	tools/kconfig/lxdialog/dialog.h	/^	const char *text;$/;"	m	struct:subtitle_list	typeref:typename:const char *
text	tools/kconfig/mconf.c	/^	const char *text;$/;"	m	struct:subtitle_part	typeref:typename:const char *	file:
text_asize	tools/kconfig/build/lexer.lex.c	/^static int text_size, text_asize;$/;"	v	typeref:typename:int	file:
text_size	tools/kconfig/build/lexer.lex.c	/^static int text_size, text_asize;$/;"	v	typeref:typename:int	file:
texture	src/device/vga.c	/^static SDL_Texture *texture = NULL;$/;"	v	typeref:typename:SDL_Texture *	file:
timer_intr	src/device/timer.c	/^static void timer_intr() {$/;"	f	typeref:typename:void	file:
title	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color title;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
token	src/monitor/sdb/expr.c	/^typedef struct token {$/;"	s	file:
token_type	src/monitor/sdb/expr.c	/^  int token_type;$/;"	m	struct:rule	typeref:typename:int	file:
tokens	src/monitor/sdb/expr.c	/^static Token tokens[65536] __attribute__((used)) = {};$/;"	v	typeref:typename:Token[65536]	file:
trace_and_difftest	src/cpu/cpu-exec.c	/^static void trace_and_difftest(Decode *_this, vaddr_t dnpc) {$/;"	f	typeref:typename:void	file:
trans_count	tools/kconfig/expr.c	/^static int trans_count;$/;"	v	typeref:typename:int	file:
tri	tools/kconfig/expr.h	/^	tristate tri;$/;"	m	struct:expr_value	typeref:typename:tristate
tri	tools/kconfig/expr.h	/^	tristate tri;$/;"	m	struct:symbol_value	typeref:typename:tristate
tristate	tools/kconfig/expr.h	/^typedef enum tristate {$/;"	g
tristate	tools/kconfig/expr.h	/^} tristate;$/;"	t	typeref:enum:tristate
ts	tools/kconfig/build/lexer.lex.c	/^	int ts, i;$/;"	v	typeref:typename:int
tty_stdio	tools/kconfig/conf.c	/^static int tty_stdio;$/;"	v	typeref:typename:int	file:
type	src/monitor/sdb/expr.c	/^  int type;$/;"	m	struct:token	typeref:typename:int	file:
type	tools/kconfig/build/parser.tab.h	/^	enum symbol_type type;$/;"	m	union:YYSTYPE	typeref:enum:symbol_type
type	tools/kconfig/expr.h	/^	enum expr_type type;$/;"	m	struct:expr	typeref:enum:expr_type
type	tools/kconfig/expr.h	/^	enum prop_type type;       \/* type of property *\/$/;"	m	struct:property	typeref:enum:prop_type
type	tools/kconfig/expr.h	/^	enum symbol_type type;$/;"	m	struct:symbol	typeref:enum:symbol_type
type	tools/kconfig/parser.y	/^type:$/;"	l
u	tools/kconfig/expr.c	/^	unsigned long long u;$/;"	m	union:string_value	typeref:typename:unsigned long long	file:
uarrow	tools/kconfig/lxdialog/dialog.h	/^	struct dialog_color uarrow;$/;"	m	struct:dialog_info	typeref:struct:dialog_color
unlikely	include/macro.h	/^#define unlikely(/;"	d
unput	tools/kconfig/build/lexer.lex.c	/^#define unput(/;"	d	file:
update_screen	src/device/vga.c	/^static inline void update_screen() {$/;"	f	typeref:typename:void	file:
update_text	tools/kconfig/mconf.c	/^static void update_text(char *buf, size_t start, size_t end, void *_data)$/;"	f	typeref:typename:void	file:
update_text_fn	tools/kconfig/lxdialog/dialog.h	/^typedef void (*update_text_fn)(char *buf, size_t start, size_t end, void$/;"	t	typeref:typename:void (*)(char * buf,size_t start,size_t end,void * _data)
usage	tools/fixdep/fixdep.c	/^static void usage(void)$/;"	f	typeref:typename:void	file:
use_config	tools/fixdep/fixdep.c	/^static void use_config(const char *m, int slen)$/;"	f	typeref:typename:void	file:
use_sbc	resource/sdcard/nemu.c	/^	bool			use_sbc:1;	\/* Send CMD23 *\/$/;"	m	struct:nemu_host	typeref:typename:bool:1	file:
va2pa	tools/kvm-diff/src/kvm.c	/^static uint64_t va2pa(uint64_t va) {$/;"	f	typeref:typename:uint64_t	file:
vaddr_ifetch	src/memory/vaddr.c	/^word_t vaddr_ifetch(vaddr_t addr, int len) {$/;"	f	typeref:typename:word_t
vaddr_read	src/memory/vaddr.c	/^word_t vaddr_read(vaddr_t addr, int len) {$/;"	f	typeref:typename:word_t
vaddr_t	include/common.h	/^typedef word_t vaddr_t;$/;"	t	typeref:typename:word_t
vaddr_write	src/memory/vaddr.c	/^void vaddr_write(vaddr_t addr, int len, word_t data) {$/;"	f	typeref:typename:void
val	src/isa/riscv32/include/isa-def.h	/^    uint32_t val;$/;"	m	union:__anoncc46a1e50208::__anoncc46a1e5030a	typeref:typename:uint32_t
val	src/isa/riscv64/include/isa-def.h	/^    uint32_t val;$/;"	m	union:__anon9270f98a0208::__anon9270f98a030a	typeref:typename:uint32_t
val	tools/kconfig/expr.h	/^	void *val;$/;"	m	struct:symbol_value	typeref:typename:void *
value	tools/kconfig/preprocess.c	/^	char *value;$/;"	m	struct:env	typeref:typename:char *	file:
value	tools/kconfig/preprocess.c	/^	char *value;$/;"	m	struct:variable	typeref:typename:char *	file:
variable	tools/kconfig/preprocess.c	/^struct variable {$/;"	s	file:
variable_add	tools/kconfig/preprocess.c	/^void variable_add(const char *name, const char *value,$/;"	f	typeref:typename:void
variable_all_del	tools/kconfig/preprocess.c	/^void variable_all_del(void)$/;"	f	typeref:typename:void
variable_del	tools/kconfig/preprocess.c	/^static void variable_del(struct variable *v)$/;"	f	typeref:typename:void	file:
variable_expand	tools/kconfig/preprocess.c	/^static char *variable_expand(const char *name, int argc, char *argv[])$/;"	f	typeref:typename:char *	file:
variable_flavor	tools/kconfig/lkc_proto.h	/^enum variable_flavor {$/;"	g
variable_lookup	tools/kconfig/preprocess.c	/^static struct variable *variable_lookup(const char *name)$/;"	f	typeref:struct:variable *	file:
vcpu	tools/kvm-diff/src/kvm.c	/^static struct vcpu vcpu;$/;"	v	typeref:struct:vcpu	file:
vcpu	tools/kvm-diff/src/kvm.c	/^struct vcpu {$/;"	s	file:
vcpu_init	tools/kvm-diff/src/kvm.c	/^static void vcpu_init() {$/;"	f	typeref:typename:void	file:
vga_update_screen	src/device/vga.c	/^void vga_update_screen() {$/;"	f	typeref:typename:void
vgactl_port_base	src/device/vga.c	/^static uint32_t *vgactl_port_base = NULL;$/;"	v	typeref:typename:uint32_t *	file:
visibility	tools/kconfig/expr.h	/^	struct expr *visibility;$/;"	m	struct:menu	typeref:struct:expr *
visible	tools/kconfig/expr.h	/^	struct expr_value visible;$/;"	m	struct:property	typeref:struct:expr_value
visible	tools/kconfig/expr.h	/^	tristate visible;$/;"	m	struct:symbol	typeref:typename:tristate
visible	tools/kconfig/parser.y	/^visible: T_VISIBLE if_expr T_EOL$/;"	l
vm	tools/kvm-diff/src/kvm.c	/^static struct vm vm;$/;"	v	typeref:struct:vm	file:
vm	tools/kvm-diff/src/kvm.c	/^struct vm {$/;"	s	file:
vm_init	tools/kvm-diff/src/kvm.c	/^static void vm_init(size_t mem_size) {$/;"	f	typeref:typename:void	file:
vmem	src/device/vga.c	/^static void *vmem = NULL;$/;"	v	typeref:typename:void *	file:
w_exam	src/monitor/sdb/sdb.c	/^void w_exam(){$/;"	f	typeref:typename:void
warn_ignored_character	tools/kconfig/build/lexer.lex.c	/^static void warn_ignored_character(char chr)$/;"	f	typeref:typename:void	file:
watchpoint	src/monitor/sdb/sdb.c	/^typedef struct watchpoint {$/;"	s	file:
watchpoint	src/monitor/sdb/watchpoint.c	/^typedef struct watchpoint {$/;"	s	file:
watchpoint_exam	src/monitor/sdb/watchpoint.c	/^void watchpoint_exam(){$/;"	f	typeref:typename:void
wbkgdset	tools/kconfig/lxdialog/dialog.h	/^#define wbkgdset(/;"	d
welcome	src/monitor/monitor.c	/^static void welcome() {$/;"	f	typeref:typename:void	file:
word_opt	tools/kconfig/parser.y	/^word_opt: \/* empty *\/			{ $$ = NULL; }$/;"	l
word_t	include/common.h	/^typedef MUXDEF(CONFIG_ISA64, uint64_t, uint32_t) word_t;$/;"	t
wp_pool	src/monitor/sdb/watchpoint.c	/^static WP wp_pool[NR_WP] = {};$/;"	v	typeref:typename:WP[]	file:
write_cmd	src/device/sdcard.c	/^static bool write_cmd = 0;$/;"	v	typeref:typename:bool	file:
xcalloc	tools/kconfig/util.c	/^void *xcalloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
xfgets	tools/kconfig/conf.c	/^static void xfgets(char *str, int size, FILE *in)$/;"	f	typeref:typename:void	file:
xfwrite	tools/kconfig/lkc.h	/^static inline void xfwrite(const void *str, size_t len, size_t count, FILE *out)$/;"	f	typeref:typename:void
xmalloc	tools/kconfig/util.c	/^void *xmalloc(size_t size)$/;"	f	typeref:typename:void *
xprintf	tools/fixdep/fixdep.c	/^static void xprintf(const char *format, ...)$/;"	f	typeref:typename:void	file:
xputchar	tools/fixdep/fixdep.c	/^static void xputchar(int c)$/;"	f	typeref:typename:void	file:
xrealloc	tools/kconfig/util.c	/^void *xrealloc(void *p, size_t size)$/;"	f	typeref:typename:void *
xstrdup	tools/kconfig/util.c	/^char *xstrdup(const char *s)$/;"	f	typeref:typename:char *
xstrndup	tools/kconfig/util.c	/^char *xstrndup(const char *s, size_t n)$/;"	f	typeref:typename:char *
yes	tools/kconfig/expr.h	/^	no, mod, yes$/;"	e	enum:tristate
yes2modconfig	tools/kconfig/conf.c	/^	yes2modconfig,$/;"	e	enum:input_mode	file:
yy_accept	tools/kconfig/build/lexer.lex.c	/^static const flex_int16_t yy_accept[231] =$/;"	v	typeref:typename:const flex_int16_t[231]	file:
yy_act	tools/kconfig/build/lexer.lex.c	/^	int yy_act;$/;"	v	typeref:typename:int
yy_amount_of_matched_text	tools/kconfig/build/lexer.lex.c	/^		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;$/;"	v	typeref:typename:int
yy_at_bol	tools/kconfig/build/lexer.lex.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_bp	tools/kconfig/build/lexer.lex.c	/^	char *yy_cp, *yy_bp;$/;"	v	typeref:typename:char *
yy_bs_column	tools/kconfig/build/lexer.lex.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_bs_lineno	tools/kconfig/build/lexer.lex.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_buf_pos	tools/kconfig/build/lexer.lex.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	typeref:typename:char *	file:
yy_buf_size	tools/kconfig/build/lexer.lex.c	/^	int yy_buf_size;$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_buffer_stack	tools/kconfig/build/lexer.lex.c	/^static YY_BUFFER_STATE * yy_buffer_stack = NULL; \/**< Stack as an array. *\/$/;"	v	typeref:typename:YY_BUFFER_STATE *	file:
yy_buffer_stack_max	tools/kconfig/build/lexer.lex.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	typeref:typename:size_t	file:
yy_buffer_stack_top	tools/kconfig/build/lexer.lex.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	typeref:typename:size_t	file:
yy_buffer_state	tools/kconfig/build/lexer.lex.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	tools/kconfig/build/lexer.lex.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_c_buf_p	tools/kconfig/build/lexer.lex.c	/^static char *yy_c_buf_p = NULL;$/;"	v	typeref:typename:char *	file:
yy_ch_buf	tools/kconfig/build/lexer.lex.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	typeref:typename:char *	file:
yy_cp	tools/kconfig/build/lexer.lex.c	/^	char *yy_cp, *yy_bp;$/;"	v	typeref:typename:char *
yy_create_buffer	tools/kconfig/build/lexer.lex.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f	typeref:typename:YY_BUFFER_STATE
yy_current_state	tools/kconfig/build/lexer.lex.c	/^	yy_state_type yy_current_state;$/;"	v	typeref:typename:yy_state_type
yy_delete_buffer	tools/kconfig/build/lexer.lex.c	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f	typeref:typename:void
yy_did_buffer_switch_on_eof	tools/kconfig/build/lexer.lex.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	typeref:typename:int	file:
yy_ec	tools/kconfig/build/lexer.lex.c	/^static const YY_CHAR yy_ec[256] =$/;"	v	typeref:typename:const YY_CHAR[256]	file:
yy_fatal_error	tools/kconfig/build/lexer.lex.c	/^static void yynoreturn yy_fatal_error (const char* msg )$/;"	f	typeref:typename:void yynoreturn	file:
yy_fill_buffer	tools/kconfig/build/lexer.lex.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_flex_debug	tools/kconfig/build/lexer.lex.c	/^int yy_flex_debug = 0;$/;"	v	typeref:typename:int
yy_flex_strlen	tools/kconfig/build/lexer.lex.c	/^static int yy_flex_strlen (const char * s )$/;"	f	typeref:typename:int	file:
yy_flex_strncpy	tools/kconfig/build/lexer.lex.c	/^static void yy_flex_strncpy (char* s1, const char * s2, int n )$/;"	f	typeref:typename:void	file:
yy_flush_buffer	tools/kconfig/build/lexer.lex.c	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f	typeref:typename:void
yy_get_next_buffer	tools/kconfig/build/lexer.lex.c	/^static int yy_get_next_buffer (void)$/;"	f	typeref:typename:int	file:
yy_get_previous_state	tools/kconfig/build/lexer.lex.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	typeref:typename:yy_state_type	file:
yy_hold_char	tools/kconfig/build/lexer.lex.c	/^static char yy_hold_char;$/;"	v	typeref:typename:char	file:
yy_init	tools/kconfig/build/lexer.lex.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	typeref:typename:int	file:
yy_init_buffer	tools/kconfig/build/lexer.lex.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	typeref:typename:void	file:
yy_init_globals	tools/kconfig/build/lexer.lex.c	/^static int yy_init_globals (void)$/;"	f	typeref:typename:int	file:
yy_input_file	tools/kconfig/build/lexer.lex.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	typeref:typename:FILE *	file:
yy_is_interactive	tools/kconfig/build/lexer.lex.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_is_our_buffer	tools/kconfig/build/lexer.lex.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_load_buffer_state	tools/kconfig/build/lexer.lex.c	/^static void yy_load_buffer_state  (void)$/;"	f	typeref:typename:void	file:
yy_n_chars	tools/kconfig/build/lexer.lex.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	typeref:typename:int	file:
yy_n_chars	tools/kconfig/build/lexer.lex.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	typeref:typename:int	file:
yy_new_buffer	tools/kconfig/build/lexer.lex.c	/^#define yy_new_buffer /;"	d	file:
yy_next_state	tools/kconfig/build/lexer.lex.c	/^			yy_state_type yy_next_state;$/;"	v	typeref:typename:yy_state_type
yy_nxt	tools/kconfig/build/lexer.lex.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	typeref:typename:flex_int32_t	file:
yy_nxt	tools/kconfig/build/lexer.lex.c	/^static const flex_int16_t yy_nxt[][42] =$/;"	v	typeref:typename:const flex_int16_t[][42]	file:
yy_reduce_print	tools/kconfig/build/parser.tab.c	/^yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp,$/;"	f	typeref:typename:void	file:
yy_rule_can_match_eol	tools/kconfig/build/lexer.lex.c	/^static const flex_int32_t yy_rule_can_match_eol[67] =$/;"	v	typeref:typename:const flex_int32_t[67]	file:
yy_scan_buffer	tools/kconfig/build/lexer.lex.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f	typeref:typename:YY_BUFFER_STATE
yy_scan_bytes	tools/kconfig/build/lexer.lex.c	/^YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len )$/;"	f	typeref:typename:YY_BUFFER_STATE
yy_scan_string	tools/kconfig/build/lexer.lex.c	/^YY_BUFFER_STATE yy_scan_string (const char * yystr )$/;"	f	typeref:typename:YY_BUFFER_STATE
yy_set_bol	tools/kconfig/build/lexer.lex.c	/^#define yy_set_bol(/;"	d	file:
yy_set_interactive	tools/kconfig/build/lexer.lex.c	/^#define yy_set_interactive(/;"	d	file:
yy_size_t	tools/kconfig/build/lexer.lex.c	/^typedef size_t yy_size_t;$/;"	t	typeref:typename:size_t	file:
yy_stack_print	tools/kconfig/build/parser.tab.c	/^yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)$/;"	f	typeref:typename:void	file:
yy_start	tools/kconfig/build/lexer.lex.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	typeref:typename:int	file:
yy_state_fast_t	tools/kconfig/build/parser.tab.c	/^typedef int yy_state_fast_t;$/;"	t	typeref:typename:int	file:
yy_state_t	tools/kconfig/build/parser.tab.c	/^typedef yytype_uint8 yy_state_t;$/;"	t	typeref:typename:yytype_uint8	file:
yy_state_type	tools/kconfig/build/lexer.lex.c	/^typedef int yy_state_type;$/;"	t	typeref:typename:int	file:
yy_switch_to_buffer	tools/kconfig/build/lexer.lex.c	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f	typeref:typename:void
yy_symbol_print	tools/kconfig/build/parser.tab.c	/^yy_symbol_print (FILE *yyo,$/;"	f	typeref:typename:void	file:
yy_symbol_value_print	tools/kconfig/build/parser.tab.c	/^yy_symbol_value_print (FILE *yyo,$/;"	f	typeref:typename:void	file:
yy_trans_info	tools/kconfig/build/lexer.lex.c	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	tools/kconfig/build/lexer.lex.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	typeref:typename:yy_state_type	file:
yy_verify	tools/kconfig/build/lexer.lex.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	typeref:typename:flex_int32_t	file:
yyalloc	tools/kconfig/build/lexer.lex.c	/^void *yyalloc (yy_size_t  size )$/;"	f	typeref:typename:void *
yyalloc	tools/kconfig/build/parser.tab.c	/^union yyalloc$/;"	u	file:
yychar	tools/kconfig/build/parser.tab.c	/^int yychar;$/;"	v	typeref:typename:int
yycheck	tools/kconfig/build/parser.tab.c	/^static const yytype_int16 yycheck[] =$/;"	v	typeref:typename:const yytype_int16[]	file:
yyclearin	tools/kconfig/build/parser.tab.c	/^#define yyclearin /;"	d	file:
yyconst	tools/kconfig/build/lexer.lex.c	/^#define yyconst /;"	d	file:
yydebug	tools/kconfig/build/parser.tab.c	/^int yydebug;$/;"	v	typeref:typename:int
yydefact	tools/kconfig/build/parser.tab.c	/^static const yytype_int8 yydefact[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yydefgoto	tools/kconfig/build/parser.tab.c	/^static const yytype_uint8 yydefgoto[] =$/;"	v	typeref:typename:const yytype_uint8[]	file:
yydestruct	tools/kconfig/build/parser.tab.c	/^yydestruct (const char *yymsg,$/;"	f	typeref:typename:void	file:
yyensure_buffer_stack	tools/kconfig/build/lexer.lex.c	/^static void yyensure_buffer_stack (void)$/;"	f	typeref:typename:void	file:
yyerrok	tools/kconfig/build/parser.tab.c	/^#define yyerrok /;"	d	file:
yyerror	tools/kconfig/build/parser.tab.c	/^static void yyerror(const char *err)$/;"	f	typeref:typename:void	file:
yyfree	tools/kconfig/build/lexer.lex.c	/^void yyfree (void * ptr )$/;"	f	typeref:typename:void
yyget_debug	tools/kconfig/build/lexer.lex.c	/^int yyget_debug  (void)$/;"	f	typeref:typename:int
yyget_in	tools/kconfig/build/lexer.lex.c	/^FILE *yyget_in  (void)$/;"	f	typeref:typename:FILE *
yyget_leng	tools/kconfig/build/lexer.lex.c	/^int yyget_leng  (void)$/;"	f	typeref:typename:int
yyget_lineno	tools/kconfig/build/lexer.lex.c	/^int yyget_lineno  (void)$/;"	f	typeref:typename:int
yyget_out	tools/kconfig/build/lexer.lex.c	/^FILE *yyget_out  (void)$/;"	f	typeref:typename:FILE *
yyget_text	tools/kconfig/build/lexer.lex.c	/^char *yyget_text  (void)$/;"	f	typeref:typename:char *
yyin	tools/kconfig/build/lexer.lex.c	/^FILE *yyin = NULL, *yyout = NULL;$/;"	v	typeref:typename:FILE *
yyinput	tools/kconfig/build/lexer.lex.c	/^    static int yyinput (void)$/;"	f	typeref:typename:int	file:
yyl	tools/kconfig/build/lexer.lex.c	/^			int yyl;$/;"	v	typeref:typename:int
yyleng	tools/kconfig/build/lexer.lex.c	/^int yyleng;$/;"	v	typeref:typename:int
yyless	tools/kconfig/build/lexer.lex.c	/^#define yyless(/;"	d	file:
yylex	tools/kconfig/build/lexer.lex.c	/^int yylex(void)$/;"	f	typeref:typename:int
yylex_destroy	tools/kconfig/build/lexer.lex.c	/^int yylex_destroy  (void)$/;"	f	typeref:typename:int
yylineno	tools/kconfig/build/lexer.lex.c	/^int yylineno = 1;$/;"	v	typeref:typename:int
yylval	tools/kconfig/build/parser.tab.c	/^YYSTYPE yylval;$/;"	v	typeref:typename:YYSTYPE
yymore	tools/kconfig/build/lexer.lex.c	/^#define yymore(/;"	d	file:
yynerrs	tools/kconfig/build/parser.tab.c	/^int yynerrs;$/;"	v	typeref:typename:int
yynoreturn	tools/kconfig/build/lexer.lex.c	/^#define yynoreturn /;"	d	file:
yynoreturn	tools/kconfig/build/lexer.lex.c	/^#define yynoreturn$/;"	d	file:
yyout	tools/kconfig/build/lexer.lex.c	/^FILE *yyin = NULL, *yyout = NULL;$/;"	v	typeref:typename:FILE *
yypact	tools/kconfig/build/parser.tab.c	/^static const yytype_int16 yypact[] =$/;"	v	typeref:typename:const yytype_int16[]	file:
yypact_value_is_default	tools/kconfig/build/parser.tab.c	/^#define yypact_value_is_default(/;"	d	file:
yyparse	tools/kconfig/build/parser.tab.c	/^yyparse (void)$/;"	f	typeref:typename:int
yypgoto	tools/kconfig/build/parser.tab.c	/^static const yytype_int16 yypgoto[] =$/;"	v	typeref:typename:const yytype_int16[]	file:
yypop_buffer_state	tools/kconfig/build/lexer.lex.c	/^void yypop_buffer_state (void)$/;"	f	typeref:typename:void
yypush_buffer_state	tools/kconfig/build/lexer.lex.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f	typeref:typename:void
yyr1	tools/kconfig/build/parser.tab.c	/^static const yytype_int8 yyr1[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yyr2	tools/kconfig/build/parser.tab.c	/^static const yytype_int8 yyr2[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yyrealloc	tools/kconfig/build/lexer.lex.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f	typeref:typename:void *
yyrestart	tools/kconfig/build/lexer.lex.c	/^    void yyrestart  (FILE * input_file )$/;"	f	typeref:typename:void
yyrline	tools/kconfig/build/parser.tab.c	/^static const yytype_int16 yyrline[] =$/;"	v	typeref:typename:const yytype_int16[]	file:
yyset_debug	tools/kconfig/build/lexer.lex.c	/^void yyset_debug (int  _bdebug )$/;"	f	typeref:typename:void
yyset_in	tools/kconfig/build/lexer.lex.c	/^void yyset_in (FILE *  _in_str )$/;"	f	typeref:typename:void
yyset_lineno	tools/kconfig/build/lexer.lex.c	/^void yyset_lineno (int  _line_number )$/;"	f	typeref:typename:void
yyset_out	tools/kconfig/build/lexer.lex.c	/^void yyset_out (FILE *  _out_str )$/;"	f	typeref:typename:void
yyss_alloc	tools/kconfig/build/parser.tab.c	/^  yy_state_t yyss_alloc;$/;"	m	union:yyalloc	typeref:typename:yy_state_t	file:
yystos	tools/kconfig/build/parser.tab.c	/^static const yytype_int8 yystos[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yysymbol_kind_t	tools/kconfig/build/parser.tab.c	/^enum yysymbol_kind_t$/;"	g	file:
yysymbol_kind_t	tools/kconfig/build/parser.tab.c	/^typedef enum yysymbol_kind_t yysymbol_kind_t;$/;"	t	typeref:enum:yysymbol_kind_t	file:
yysymbol_name	tools/kconfig/build/parser.tab.c	/^yysymbol_name (yysymbol_kind_t yysymbol)$/;"	f	typeref:typename:const char *	file:
yytable	tools/kconfig/build/parser.tab.c	/^static const yytype_int16 yytable[] =$/;"	v	typeref:typename:const yytype_int16[]	file:
yytable_value_is_error	tools/kconfig/build/parser.tab.c	/^#define yytable_value_is_error(/;"	d	file:
yyterminate	tools/kconfig/build/lexer.lex.c	/^#define yyterminate(/;"	d	file:
yytext	tools/kconfig/build/lexer.lex.c	/^char *yytext;$/;"	v	typeref:typename:char *
yytext_ptr	tools/kconfig/build/lexer.lex.c	/^#define yytext_ptr /;"	d	file:
yytname	tools/kconfig/build/parser.tab.c	/^static const char *const yytname[] =$/;"	v	typeref:typename:const char * const[]	file:
yytoken_kind_t	tools/kconfig/build/parser.tab.h	/^  typedef enum yytokentype yytoken_kind_t;$/;"	t	typeref:enum:yytokentype
yytokentype	tools/kconfig/build/parser.tab.h	/^  enum yytokentype$/;"	g
yytranslate	tools/kconfig/build/parser.tab.c	/^static const yytype_int8 yytranslate[] =$/;"	v	typeref:typename:const yytype_int8[]	file:
yytype_int16	tools/kconfig/build/parser.tab.c	/^typedef __INT_LEAST16_TYPE__ yytype_int16;$/;"	t	typeref:typename:__INT_LEAST16_TYPE__	file:
yytype_int16	tools/kconfig/build/parser.tab.c	/^typedef int_least16_t yytype_int16;$/;"	t	typeref:typename:int_least16_t	file:
yytype_int16	tools/kconfig/build/parser.tab.c	/^typedef short yytype_int16;$/;"	t	typeref:typename:short	file:
yytype_int8	tools/kconfig/build/parser.tab.c	/^typedef __INT_LEAST8_TYPE__ yytype_int8;$/;"	t	typeref:typename:__INT_LEAST8_TYPE__	file:
yytype_int8	tools/kconfig/build/parser.tab.c	/^typedef int_least8_t yytype_int8;$/;"	t	typeref:typename:int_least8_t	file:
yytype_int8	tools/kconfig/build/parser.tab.c	/^typedef signed char yytype_int8;$/;"	t	typeref:typename:signed char	file:
yytype_uint16	tools/kconfig/build/parser.tab.c	/^typedef __UINT_LEAST16_TYPE__ yytype_uint16;$/;"	t	typeref:typename:__UINT_LEAST16_TYPE__	file:
yytype_uint16	tools/kconfig/build/parser.tab.c	/^typedef int yytype_uint16;$/;"	t	typeref:typename:int	file:
yytype_uint16	tools/kconfig/build/parser.tab.c	/^typedef uint_least16_t yytype_uint16;$/;"	t	typeref:typename:uint_least16_t	file:
yytype_uint16	tools/kconfig/build/parser.tab.c	/^typedef unsigned short yytype_uint16;$/;"	t	typeref:typename:unsigned short	file:
yytype_uint8	tools/kconfig/build/parser.tab.c	/^typedef __UINT_LEAST8_TYPE__ yytype_uint8;$/;"	t	typeref:typename:__UINT_LEAST8_TYPE__	file:
yytype_uint8	tools/kconfig/build/parser.tab.c	/^typedef short yytype_uint8;$/;"	t	typeref:typename:short	file:
yytype_uint8	tools/kconfig/build/parser.tab.c	/^typedef uint_least8_t yytype_uint8;$/;"	t	typeref:typename:uint_least8_t	file:
yytype_uint8	tools/kconfig/build/parser.tab.c	/^typedef unsigned char yytype_uint8;$/;"	t	typeref:typename:unsigned char	file:
yyunput	tools/kconfig/build/lexer.lex.c	/^    static void yyunput (int c, char * yy_bp )$/;"	f	typeref:typename:void	file:
yyvs_alloc	tools/kconfig/build/parser.tab.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	typeref:typename:YYSTYPE	file:
yywrap	tools/kconfig/build/lexer.lex.c	/^#define yywrap(/;"	d	file:
zconf_curname	tools/kconfig/build/lexer.lex.c	/^const char *zconf_curname(void)$/;"	f	typeref:typename:const char *
zconf_endfile	tools/kconfig/build/lexer.lex.c	/^static void zconf_endfile(void)$/;"	f	typeref:typename:void	file:
zconf_endhelp	tools/kconfig/build/lexer.lex.c	/^static void zconf_endhelp(void)$/;"	f	typeref:typename:void	file:
zconf_endtoken	tools/kconfig/build/parser.tab.c	/^static bool zconf_endtoken(const char *tokenname,$/;"	f	typeref:typename:bool	file:
zconf_error	tools/kconfig/build/parser.tab.c	/^static void zconf_error(const char *err, ...)$/;"	f	typeref:typename:void	file:
zconf_fopen	tools/kconfig/build/lexer.lex.c	/^FILE *zconf_fopen(const char *name)$/;"	f	typeref:typename:FILE *
zconf_initscan	tools/kconfig/build/lexer.lex.c	/^void zconf_initscan(const char *name)$/;"	f	typeref:typename:void
zconf_lineno	tools/kconfig/build/lexer.lex.c	/^int zconf_lineno(void)$/;"	f	typeref:typename:int
zconf_nextfile	tools/kconfig/build/lexer.lex.c	/^void zconf_nextfile(const char *name)$/;"	f	typeref:typename:void
zconf_starthelp	tools/kconfig/build/lexer.lex.c	/^void zconf_starthelp(void)$/;"	f	typeref:typename:void
zconfdump	tools/kconfig/build/parser.tab.c	/^void zconfdump(FILE *out)$/;"	f	typeref:typename:void
zconfprint	tools/kconfig/build/parser.tab.c	/^static void zconfprint(const char *err, ...)$/;"	f	typeref:typename:void	file:
使用方法	resource/sdcard/README.md	/^## 使用方法$/;"	s	chapter:NEMU sdhost驱动
在没有中断的处理器上访问SD卡	resource/sdcard/README.md	/^## 在没有中断的处理器上访问SD卡$/;"	s	chapter:NEMU sdhost驱动
